/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProcessRegistry,
  ProcessRegistryInterface,
} from "../../src/ProcessRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_chainID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_stVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BlobVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotAcceptResult",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBlobHash",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusOrigin",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusURI",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxMinValueBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValueSum",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxVotes",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinTotalCost",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProcessId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimeBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUniqueValues",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValueSumBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownProcessIdPrefix",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "censusRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "censusURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    name: "CensusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProcessCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "ProcessDurationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    name: "ProcessResultsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newStateRoot",
        type: "uint256",
      },
    ],
    name: "ProcessStateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "oldStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProcessStatusChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "BLOB_INDEX",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CENSUS_ORIGIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_STATUS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
    ],
    name: "getNextProcessId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcess",
    outputs: [
      {
        components: [
          {
            internalType: "enum IProcessRegistry.ProcessStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "organizationId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.EncryptionKey",
            name: "encryptionKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "latestStateRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "result",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteOverwriteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "costFromWeight",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "uniqueValues",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "numFields",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "costExponent",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxValueSum",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValueSum",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.BallotMode",
            name: "ballotMode",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IProcessRegistry.CensusOrigin",
                name: "censusOrigin",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "censusRoot",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "censusURI",
                type: "string",
              },
            ],
            internalType: "struct IProcessRegistry.Census",
            name: "census",
            type: "tuple",
          },
        ],
        internalType: "struct IProcessRegistry.Process",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcessEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSTVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "uniqueValues",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "numFields",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValueSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValueSum",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "initStateRoot",
        type: "uint256",
      },
    ],
    name: "newProcess",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "processCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "processNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processes",
    outputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "latestStateRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteOverwriteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creationBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchNumber",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "uniqueValues",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "numFields",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValueSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValueSum",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    name: "setProcessCensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProcessDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "setProcessResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "setProcessStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "submitStateTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051612ba0380380612ba083398101604081905261002e916100b1565b60028054600380546001600160a01b039485166001600160a01b031990911617905563ffffffff9094166401000000000263ffffffff60201b1992909316680100000000000000000291909116600160201b600160e01b0319909316929092171790556100fb565b80516001600160a01b03811681146100ac575f5ffd5b919050565b5f5f5f606084860312156100c3575f5ffd5b835163ffffffff811681146100d6575f5ffd5b92506100e460208501610096565b91506100f260408501610096565b90509250925092565b612a98806101085f395ff3fe608060405234801561000f575f5ffd5b5060043610610127575f3560e01c806372c628ef116100a9578063a5f01e191161006e578063a5f01e19146102c6578063adc879e9146102d9578063c718c01f146102f1578063d71d072e14610304578063f9aa449914610317575f5ffd5b806372c628ef14610253578063848df5401461025b578063992bc45b146102805780639c18deaf146102a0578063a5b110de146102b3575f5ffd5b80634c0acc56116100ef5780634c0acc56146101d057806356a6f1e2146101d857806362fa11fc146101ed57806368141f2c1461022d5780636bae04ea14610240575f5ffd5b806302cc919a1461012b5780630535fece1461014a578063097063921461017657806326795bc3146101a85780633365133c146101af575b5f5ffd5b610133600981565b60405160ff90911681526020015b60405180910390f35b61015d610158366004611f7c565b61031f565b6040516101419d9c9b9a99989796959493929190612095565b60025461019090600160401b90046001600160a01b031681565b6040516001600160a01b039091168152602001610141565b6101335f81565b6101c26101bd3660046121bd565b610566565b604051908152602001610141565b6101c261072c565b6101eb6101e6366004612285565b6107a7565b005b6102156101fb3660046122af565b60016020525f90815260409020546001600160401b031681565b6040516001600160401b039091168152602001610141565b6101c261023b3660046122af565b6109ad565b6101eb61024e3660046122d5565b6109f6565b610133600481565b60025461026b9063ffffffff1681565b60405163ffffffff9091168152602001610141565b61029361028e366004611f7c565b610c9f565b6040516101419190612352565b600354610190906001600160a01b031681565b6101eb6102c136600461245d565b610faf565b6101c26102d4366004611f7c565b611297565b60025461026b90640100000000900463ffffffff1681565b6101eb6102ff3660046124d4565b6115b9565b6101eb61031236600461245d565b611775565b6101c26119b3565b5f60208181529181526040908190208054825180840190935260018201548352600282015493830193909352600381015460058201546006830154600784015460088501546009860154600a870154600b8801805460ff8c169b61010090046001600160a01b03169a999190610394906124f4565b80601f01602080910402602001604051908101604052809291908181526020018280546103c0906124f4565b801561040b5780601f106103e25761010080835404028352916020019161040b565b820191905f5260205f20905b8154815290600101906020018083116103ee57829003601f168201915b5050604080516101008082018352600c88015460ff808216151584529181048216151560208401526201000081048216838501526301000000900481166060830152600d880154608080840191909152600e89015460a0840152600f89015460c0840152601089015460e084015283519081019093526011880180549798929792965092945091925083911660098111156104a8576104a8611f93565b60098111156104b9576104b9611f93565b815260200160018201548152602001600282015481526020016003820180546104e1906124f4565b80601f016020809104026020016040519081016040528092919081815260200182805461050d906124f4565b80156105585780601f1061052f57610100808354040283529160200191610558565b820191905f5260205f20905b81548152906001019060200180831161053b57829003601f168201915b50505050508152505090508d565b600254335f81815260016020526040812054909283916105a191640100000000900463ffffffff1690309085906001600160401b03166119fa565b90506105b281838e8e8e8e8e611a3a565b5f81815260208190526040902080548d90829060ff191660018360048111156105dd576105dd611f93565b0217905550600581018c9055600681018b90558054610100600160a81b0319166101006001600160a01b03851602178155853560018201556020860135600282015560038101859055600b8101610635888a83612586565b5089600c8201610645828261266c565b5089905060118201610657828261277a565b50504360098201556002805463ffffffff16905f61067483612822565b825463ffffffff9182166101009390930a9283029190920219909116179055506001600160a01b0383165f90815260016020526040812080546001600160401b0316916106c083612846565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050826001600160a01b0316827fada6f87a2a16a0c9c169ca36754c5f33f7c1a973b575d068f888a549ed4faefa60405160405180910390a3509b9a5050505050505050505050565b5f600260089054906101000a90046001600160a01b03166001600160a01b031663233ace116040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a29190612867565b905090565b816107c55760405163cbf4a64560e01b815260040160405180910390fd5b6107f5826107e5600260049054906101000a900463ffffffff1630611cc5565b63ffffffff1660e09190911c1490565b15155f0361081657604051632299770d60e11b815260040160405180910390fd5b6004818181111561082957610829611f93565b60ff16111561084b576040516307a92f1960e51b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b031661088557604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b031633146108b3576040516282b42960e81b815260040160405180910390fd5b805460ff166108c28184611d15565b6108df576040516307a92f1960e51b815260040160405180910390fd5b81548390839060ff191660018360048111156108fd576108fd611f93565b0217905550600183600481111561091657610916611f93565b0361096d575f82600501544261092c919061287e565b6006840181905560405181815290915085907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505b837f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c828560405161099f929190612891565b60405180910390a250505050565b6002546001600160a01b0382165f9081526001602052604081205490916109f09164010000000090910463ffffffff1690309085906001600160401b03166119fa565b92915050565b81610a145760405163cbf4a64560e01b815260040160405180910390fd5b610a34826107e5600260049054906101000a900463ffffffff1630611cc5565b15155f03610a5557604051632299770d60e11b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b0316610a8f57604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610abd576040516282b42960e81b815260040160405180910390fd5b610aca60208301836128ac565b6009811115610adb57610adb611f93565b601182015460ff166009811115610af457610af4611f93565b14610b125760405163f37f7b5d60e01b815260040160405180910390fd5b601281015460208301351015610b3b57604051634f9233a560e01b815260040160405180910390fd5b6040820135610b5d57604051635e32eadd60e01b815260040160405180910390fd5b610b6a6060830183612738565b90505f03610b8b57604051630f8b932160e11b815260040160405180910390fd5b5f815460ff166004811115610ba257610ba2611f93565b14158015610bc657506003815460ff166004811115610bc357610bc3611f93565b14155b15610be4576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154610bf991906128c7565b11610c175760405163e843c5eb60e01b815260040160405180910390fd5b6020820135601282015560408201356013820155610c386060830183612738565b6014830191610c48919083612586565b50827f35947a8913e2156f19b018078c9f0667e49cb3dc24af3434a4d0b16b82675b1b6040840135610c7d6060860186612738565b8660200135604051610c929493929190612902565b60405180910390a2505050565b610ca7611e33565b5f828152602081905260409081902081516101c081019092528054829060ff166004811115610cd857610cd8611f93565b6004811115610ce957610ce9611f93565b8152815461010090046001600160a01b03166020808301919091526040805180820182526001850154815260028501548184015281840152600384015460608401526004840180548251818502810185019093528083526080909401939192909190830182828015610d7857602002820191905f5260205f20905b815481526020019060010190808311610d64575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b82018054610dcd906124f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610df9906124f4565b8015610e445780601f10610e1b57610100808354040283529160200191610e44565b820191905f5260205f20905b815481529060010190602001808311610e2757829003601f168201915b5050509183525050604080516101008082018352600c85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600d860154608080850191909152600e87015460a0850152600f87015460c0850152601087015460e08501529085019290925282519182018352601185018054939094019391928391166009811115610eec57610eec611f93565b6009811115610efd57610efd611f93565b81526020016001820154815260200160028201548152602001600382018054610f25906124f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610f51906124f4565b8015610f9c5780601f10610f7357610100808354040283529160200191610f9c565b820191905f5260205f20905b815481529060010190602001808311610f7f57829003601f168201915b5050509190925250505090525092915050565b84610fcd5760405163cbf4a64560e01b815260040160405180910390fd5b610fed856107e5600260049054906101000a900463ffffffff1630611cc5565b15155f0361100e57604051632299770d60e11b815260040160405180910390fd5b5f858152602081905260409020805461010090046001600160a01b031661104857604051634d36eb6960e01b815260040160405180910390fd5b6001815460ff16600481111561106057611060611f93565b1461107e576040516307a92f1960e51b815260040160405180910390fd5b428160060154826005015461109391906128c7565b11156110b25760405163e843c5eb60e01b815260040160405180910390fd5b600354604051635c73957b60e11b81526001600160a01b039091169063b8e72af6906110e890889088908890889060040161292c565b5f6040518083038186803b1580156110fe575f5ffd5b505afa158015611110573d5f5f3e3d5ffd5b505f92506111239150508385018561295d565b600383015481519192501461114b57604051630b6fac0360e41b815260040160405180910390fd5b5f6111586001600961287e565b6001600160401b0381111561116f5761116f612526565b604051908082528060200260200182016040528015611198578160200160208202803683370190505b50905060015b60098110156111ed578281600981106111b9576111b96129d9565b6020020151826111ca60018461287e565b815181106111da576111da6129d9565b602090810291909101015260010161119e565b50825460ff191660049081178455815161120e918501906020840190611f1f565b50877f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c60016004604051611243929190612891565b60405180910390a2336001600160a01b0316887f5da8009aeb11de7ef64598b0de897a03d2f93efabda8507a70e29cca4530cf5d8360405161128591906129ed565b60405180910390a35050505050505050565b5f8181526020819052604080822081516101c08101909252805483929190829060ff1660048111156112cb576112cb611f93565b60048111156112dc576112dc611f93565b8152815461010090046001600160a01b0316602080830191909152604080518082018252600185015481526002850154818401528184015260038401546060840152600484018054825181850281018501909352808352608090940193919290919083018282801561136b57602002820191905f5260205f20905b815481526020019060010190808311611357575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b820180546113c0906124f4565b80601f01602080910402602001604051908101604052809291908181526020018280546113ec906124f4565b80156114375780601f1061140e57610100808354040283529160200191611437565b820191905f5260205f20905b81548152906001019060200180831161141a57829003601f168201915b5050509183525050604080516101008082018352600c85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600d860154608080850191909152600e87015460a0850152600f87015460c0850152601087015460e085015290850192909252825191820183526011850180549390940193919283911660098111156114df576114df611f93565b60098111156114f0576114f0611f93565b81526020016001820154815260200160028201548152602001600382018054611518906124f4565b80601f0160208091040260200160405190810160405280929190818152602001828054611544906124f4565b801561158f5780601f106115665761010080835404028352916020019161158f565b820191905f5260205f20905b81548152906001019060200180831161157257829003601f168201915b5050505050815250508152505090508060c001518160a001516115b291906128c7565b9392505050565b816115d75760405163cbf4a64560e01b815260040160405180910390fd5b6115f7826107e5600260049054906101000a900463ffffffff1630611cc5565b15155f0361161857604051632299770d60e11b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b031661165257604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314611680576040516282b42960e81b815260040160405180910390fd5b805460ff165f81600481111561169857611698611f93565b141580156116b8575060038160048111156116b5576116b5611f93565b14155b156116d6576040516307a92f1960e51b815260040160405180910390fd5b600582015460068301548415806116f65750426116f386846128c7565b11155b80611713575061170681836128c7565b61171086846128c7565b11155b1561173157604051637616640160e01b815260040160405180910390fd5b6006840185905560405185815286907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505050505050565b846117935760405163cbf4a64560e01b815260040160405180910390fd5b6117b3856107e5600260049054906101000a900463ffffffff1630611cc5565b15155f036117d457604051632299770d60e11b815260040160405180910390fd5b5f858152602081905260409020805461010090046001600160a01b031661180e57604051634d36eb6960e01b815260040160405180910390fd5b5f815460ff16600481111561182557611825611f93565b14611843576040516307a92f1960e51b815260040160405180910390fd5b428160060154826005015461185891906128c7565b116118765760405163e843c5eb60e01b815260040160405180910390fd5b600254604051635c73957b60e11b8152600160401b9091046001600160a01b03169063b8e72af6906118b290889088908890889060040161292c565b5f6040518083038186803b1580156118c8575f5ffd5b505afa1580156118da573d5f5f3e3d5ffd5b505f92506118ed9150508385018561295d565b600383015481519192501461191557604051630b6fac0360e41b815260040160405180910390fd5b6020810151600383015560408101516007830180545f906119379084906128c7565b909155505060608101516008830180545f906119549084906128c7565b9091555050600a82018054905f61196a83612a2f565b9091555050602080820151604051908152339189917fdc9b2774f92abfeee93d8b2ef67d59cd90c2d6d740b01c24fd9ec109a71865fc910160405180910390a350505050505050565b6003546040805163233ace1160e01b815290515f926001600160a01b03169163233ace119160048083019260209291908290030181865afa15801561077e573d5f5f3e3d5ffd5b5f5f611a068686611cc5565b9050826001600160401b03166040856001600160a01b0316901b60e08363ffffffff16901b17175f1b915050949350505050565b5f878152602081905260409020546001600160a01b038088166101009092041603611a7857604051635040c4d360e11b815260040160405180910390fd5b611a886060830160408401612a47565b60ff161580611aa957506008611aa46060840160408501612a47565b60ff16115b15611ac75760405163ac38930b60e01b815260040160405180910390fd5b61ffff8260c001351115611aee57604051634dba795160e01b815260040160405180910390fd5b81608001358260a001351115611b175760405163207ea56d60e01b815260040160405180910390fd5b8160c001358260e001351115611b4057604051636d403ec760e11b815260040160405180910390fd5b6009611b4f60208301836128ac565b6009811115611b6057611b60611f93565b60ff161115611b825760405163f37f7b5d60e01b815260040160405180910390fd5b80602001355f03611ba657604051634f9233a560e01b815260040160405180910390fd5b6040810135611bc857604051635e32eadd60e01b815260040160405180910390fd5b611bd56060820182612738565b90505f03611bf657604051630f8b932160e11b815260040160405180910390fd5b60048581811115611c0957611c09611f93565b60ff161180611c4657505f856004811115611c2657611c26611f93565b14158015611c4657506003856004811115611c4357611c43611f93565b14155b15611c64576040516307a92f1960e51b815260040160405180910390fd5b425f859003611c71578094505b80851015611c9257604051632ca4094f60e21b815260040160405180910390fd5b80611c9d85876128c7565b11611cbb57604051637616640160e01b815260040160405180910390fd5b5050505050505050565b6040805160e09390931b6001600160e01b03191660208085019190915260609290921b6bffffffffffffffffffffffff191660248401528051601881850301815260389093019052815191012090565b5f826004811115611d2857611d28611f93565b826004811115611d3a57611d3a611f93565b03611d4657505f6109f0565b6002836004811115611d5a57611d5a611f93565b1480611d7757506004836004811115611d7557611d75611f93565b145b80611d9357506001836004811115611d9157611d91611f93565b145b15611d9f57505f6109f0565b5f836004811115611db257611db2611f93565b03611e0c5760035b826004811115611dcc57611dcc611f93565b1480611de957506002826004811115611de757611de7611f93565b145b80611e0557506001826004811115611e0357611e03611f93565b145b90506109f0565b6003836004811115611e2057611e20611f93565b03611e2b575f611dba565b505f92915050565b604080516101c08101909152805f81526020015f6001600160a01b03168152602001611e7060405180604001604052805f81526020015f81525090565b81526020015f8152602001606081526020015f81526020015f81526020015f81526020015f81526020015f81526020015f815260200160608152602001611ef76040518061010001604052805f151581526020015f151581526020015f60ff1681526020015f60ff1681526020015f81526020015f81526020015f81526020015f81525090565b8152604080516080810182525f80825260208281018290529282015260608082015291015290565b828054828255905f5260205f20908101928215611f58579160200282015b82811115611f58578251825591602001919060010190611f3d565b50611f64929150611f68565b5090565b5b80821115611f64575f8155600101611f69565b5f60208284031215611f8c575f5ffd5b5035919050565b634e487b7160e01b5f52602160045260245ffd5b60058110611fb757611fb7611f93565b9052565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b80511515825260208101511515602083015260ff6040820151166040830152606081015161201c606084018260ff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b5f8151600a811061205c5761205c611f93565b80845250602082015160208401526040820151604084015260608201516080606085015261208d6080850182611fbb565b949350505050565b61209f818f611fa7565b6001600160a01b038d1660208201526120c5604082018d80518252602090810151910152565b8a60808201528960a08201528860c08201528760e08201528661010082015285610120820152846101408201526102a06101608201525f61210a6102a0830186611fbb565b612118610180840186611fe9565b82810361028084015261212b8185612049565b9150509e9d5050505050505050505050505050565b80356005811061214e575f5ffd5b919050565b5f60808284031215612163575f5ffd5b50919050565b5f5f83601f840112612179575f5ffd5b5081356001600160401b0381111561218f575f5ffd5b6020830191508360208285010111156121a6575f5ffd5b9250929050565b5f60408284031215612163575f5ffd5b5f5f5f5f5f5f5f5f5f898b036102008112156121d7575f5ffd5b6121e08b612140565b995060208b0135985060408b01359750610100605f1982011215612202575f5ffd5b5060608a0195506101608a01356001600160401b03811115612222575f5ffd5b61222e8c828d01612153565b9550506101808a01356001600160401b0381111561224a575f5ffd5b6122568c828d01612169565b909550935061226b90508b6101a08c016121ad565b989b979a5095989497939692955090936101e00135919050565b5f5f60408385031215612296575f5ffd5b823591506122a660208401612140565b90509250929050565b5f602082840312156122bf575f5ffd5b81356001600160a01b03811681146115b2575f5ffd5b5f5f604083850312156122e6575f5ffd5b8235915060208301356001600160401b03811115612302575f5ffd5b61230e85828601612153565b9150509250929050565b5f8151808452602084019350602083015f5b8281101561234857815186526020958601959091019060010161232a565b5093949350505050565b60208152612364602082018351611fa7565b5f602083015161237f60408401826001600160a01b03169052565b506040830151805160608401526020810151608084015250606083015160a083015260808301516102c060c08401526123bc6102e0840182612318565b905060a084015160e084015260c084015161010084015260e0840151610120840152610100840151610140840152610120840151610160840152610140840151610180840152610160840151601f19848303016101a085015261241f8282611fbb565b9150506101808401516124366101c0850182611fe9565b506101a0840151838203601f19016102c08501526124548282612049565b95945050505050565b5f5f5f5f5f60608688031215612471575f5ffd5b8535945060208601356001600160401b0381111561248d575f5ffd5b61249988828901612169565b90955093505060408601356001600160401b038111156124b7575f5ffd5b6124c388828901612169565b969995985093965092949392505050565b5f5f604083850312156124e5575f5ffd5b50508035926020909101359150565b600181811c9082168061250857607f821691505b60208210810361216357634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f82111561258157805f5260205f20601f840160051c8101602085101561255f5750805b601f840160051c820191505b8181101561257e575f815560010161256b565b50505b505050565b6001600160401b0383111561259d5761259d612526565b6125b1836125ab83546124f4565b8361253a565b5f601f8411600181146125e2575f85156125cb5750838201355b5f19600387901b1c1916600186901b17835561257e565b5f83815260208120601f198716915b8281101561261157868501358255602094850194600190920191016125f1565b508682101561262d575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f813580151581146109f0575f5ffd5b60ff8116811461265d575f5ffd5b50565b5f81356109f08161264f565b6126758261263f565b151560ff1982541660ff82168117835550506126b06126966020840161263f565b82805461ff00191691151560081b61ff0016919091179055565b6126d76126bf60408401612660565b825462ff0000191660109190911b62ff000016178255565b6127006126e660608401612660565b825463ff000000191660189190911b63ff00000016178255565b6080820135600182015560a0820135600282015560c0820135600382015560e090910135600490910155565b600a811061265d575f5ffd5b5f5f8335601e1984360301811261274d575f5ffd5b8301803591506001600160401b03821115612766575f5ffd5b6020019150368190038213156121a6575f5ffd5b81356127858161272c565b600a811061279557612795611f93565b815460ff191660ff9190911617815560208201356001820155604082013560028201556060820135601e19368490030181126127cf575f5ffd5b820180356001600160401b038111156127e6575f5ffd5b6020820191508036038213156127fa575f5ffd5b612808818360038601612586565b50505050565b634e487b7160e01b5f52601160045260245ffd5b5f63ffffffff821663ffffffff810361283d5761283d61280e565b60010192915050565b5f6001600160401b0382166001600160401b03810361283d5761283d61280e565b5f60208284031215612877575f5ffd5b5051919050565b818103818111156109f0576109f061280e565b6040810161289f8285611fa7565b6115b26020830184611fa7565b5f602082840312156128bc575f5ffd5b81356115b28161272c565b808201808211156109f0576109f061280e565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b848152606060208201525f61291b6060830185876128da565b905082604083015295945050505050565b604081525f61293f6040830186886128da565b82810360208401526129528185876128da565b979650505050505050565b5f610120828403121561296e575f5ffd5b82601f83011261297c575f5ffd5b60405161012081018181106001600160401b038211171561299f5761299f612526565b604052806101208401858111156129b4575f5ffd5b845b818110156129ce5780358352602092830192016129b6565b509195945050505050565b634e487b7160e01b5f52603260045260245ffd5b602080825282518282018190525f918401906040840190835b81811015612a24578351835260209384019390920191600101612a06565b509095945050505050565b5f60018201612a4057612a4061280e565b5060010190565b5f60208284031215612a57575f5ffd5b81356115b28161264f56fea264697066735822122060632b828258d16255806bda9d344296dcc9454eaf03ac739b5c3fe82e2db80364736f6c634300081c0033";

type ProcessRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProcessRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProcessRegistry__factory extends ContractFactory {
  constructor(...args: ProcessRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    );
  }
  override deploy(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    ) as Promise<
      ProcessRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProcessRegistry__factory {
    return super.connect(runner) as ProcessRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProcessRegistryInterface {
    return new Interface(_abi) as ProcessRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProcessRegistry {
    return new Contract(address, _abi, runner) as unknown as ProcessRegistry;
  }
}
