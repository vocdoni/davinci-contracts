/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProcessRegistry,
  ProcessRegistryInterface,
} from "../../src/ProcessRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_chainID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_stVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BlobVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotAcceptResult",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBlobHash",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusOrigin",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusURI",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxMinValueBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValueSum",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxVotes",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinTotalCost",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProcessId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimeBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUniqueValues",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValueSumBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "censusRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "censusURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    name: "CensusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProcessCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "ProcessDurationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    name: "ProcessResultsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newStateRoot",
        type: "uint256",
      },
    ],
    name: "ProcessStateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "oldStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProcessStatusChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "BLOB_INDEX",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CENSUS_ORIGIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_STATUS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
    ],
    name: "getNextProcessId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcess",
    outputs: [
      {
        components: [
          {
            internalType: "enum IProcessRegistry.ProcessStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "organizationId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.EncryptionKey",
            name: "encryptionKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "latestStateRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "result",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteOverwriteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "costFromWeight",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "uniqueValues",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "numFields",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "costExponent",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxValueSum",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValueSum",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.BallotMode",
            name: "ballotMode",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IProcessRegistry.CensusOrigin",
                name: "censusOrigin",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "censusRoot",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "censusURI",
                type: "string",
              },
            ],
            internalType: "struct IProcessRegistry.Census",
            name: "census",
            type: "tuple",
          },
        ],
        internalType: "struct IProcessRegistry.Process",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcessEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSTVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "uniqueValues",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "numFields",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValueSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValueSum",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "initStateRoot",
        type: "uint256",
      },
    ],
    name: "newProcess",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "processCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "processNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processes",
    outputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "latestStateRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteOverwriteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creationBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchNumber",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "uniqueValues",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "numFields",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValueSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValueSum",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    name: "setProcessCensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProcessDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "setProcessResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "setProcessStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "submitStateTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051612e3f380380612e3f83398101604081905261002e916100b1565b60028054600380546001600160a01b039485166001600160a01b031990911617905563ffffffff9094166401000000000263ffffffff60201b1992909316680100000000000000000291909116600160201b600160e01b0319909316929092171790556100fb565b80516001600160a01b03811681146100ac575f5ffd5b919050565b5f5f5f606084860312156100c3575f5ffd5b835163ffffffff811681146100d6575f5ffd5b92506100e460208501610096565b91506100f260408501610096565b90509250925092565b612d37806101085f395ff3fe608060405234801561000f575f5ffd5b5060043610610127575f3560e01c806372c628ef116100a9578063a5f01e191161006e578063a5f01e19146102c6578063adc879e9146102d9578063c718c01f146102f1578063d71d072e14610304578063f9aa449914610317575f5ffd5b806372c628ef14610253578063848df5401461025b578063992bc45b146102805780639c18deaf146102a0578063a5b110de146102b3575f5ffd5b80634c0acc56116100ef5780634c0acc56146101d057806356a6f1e2146101d857806362fa11fc146101ed57806368141f2c1461022d5780636bae04ea14610240575f5ffd5b806302cc919a1461012b5780630535fece1461014a578063097063921461017657806326795bc3146101a85780633365133c146101af575b5f5ffd5b610133600981565b60405160ff90911681526020015b60405180910390f35b61015d6101583660046120be565b61031f565b6040516101419d9c9b9a999897969594939291906121d7565b60025461019090600160401b90046001600160a01b031681565b6040516001600160a01b039091168152602001610141565b6101335f81565b6101c26101bd3660046122ff565b610566565b604051908152602001610141565b6101c261072a565b6101eb6101e63660046123c7565b6107a5565b005b6102156101fb3660046123f1565b60016020525f90815260409020546001600160401b031681565b6040516001600160401b039091168152602001610141565b6101c261023b3660046123f1565b61095a565b6101eb61024e366004612417565b6109a1565b610133600481565b60025461026b9063ffffffff1681565b60405163ffffffff9091168152602001610141565b61029361028e3660046120be565b610c09565b6040516101419190612494565b600354610190906001600160a01b031681565b6101eb6102c1366004612596565b610f19565b6101c26102d43660046120be565b6111c0565b60025461026b90640100000000900463ffffffff1681565b6101eb6102ff36600461260d565b6114e2565b6101eb610312366004612596565b61165d565b6101c261192a565b5f60208181529181526040908190208054825180840190935260018201548352600282015493830193909352600381015460058201546006830154600784015460088501546009860154600a870154600b8801805460ff8c169b61010090046001600160a01b03169a9991906103949061262d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c09061262d565b801561040b5780601f106103e25761010080835404028352916020019161040b565b820191905f5260205f20905b8154815290600101906020018083116103ee57829003601f168201915b5050604080516101008082018352600c88015460ff808216151584529181048216151560208401526201000081048216838501526301000000900481166060830152600d880154608080840191909152600e89015460a0840152600f89015460c0840152601089015460e084015283519081019093526011880180549798929792965092945091925083911660098111156104a8576104a86120d5565b60098111156104b9576104b96120d5565b815260200160018201548152602001600282015481526020016003820180546104e19061262d565b80601f016020809104026020016040519081016040528092919081815260200182805461050d9061262d565b80156105585780601f1061052f57610100808354040283529160200191610558565b820191905f5260205f20905b81548152906001019060200180831161053b57829003601f168201915b50505050508152505090508d565b600254335f818152600160205260408120549092839161059f91640100000000900463ffffffff169084906001600160401b0316611971565b90506105b081838e8e8e8e8e611a01565b5f81815260208190526040902080548d90829060ff191660018360048111156105db576105db6120d5565b0217905550600581018c9055600681018b90558054610100600160a81b0319166101006001600160a01b03851602178155853560018201556020860135600282015560038101859055600b8101610633888a836126bf565b5089600c820161064382826127a5565b508990506011820161065582826128b3565b50504360098201556002805463ffffffff16905f6106728361295b565b825463ffffffff9182166101009390930a9283029190920219909116179055506001600160a01b0383165f90815260016020526040812080546001600160401b0316916106be8361297f565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050826001600160a01b0316827fada6f87a2a16a0c9c169ca36754c5f33f7c1a973b575d068f888a549ed4faefa60405160405180910390a3509b9a5050505050505050505050565b5f600260089054906101000a90046001600160a01b03166001600160a01b031663233ace116040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a091906129a0565b905090565b816107c35760405163cbf4a64560e01b815260040160405180910390fd5b600481818111156107d6576107d66120d5565b60ff1611156107f8576040516307a92f1960e51b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b031661083257604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610860576040516282b42960e81b815260040160405180910390fd5b805460ff1661086f8184611c8c565b61088c576040516307a92f1960e51b815260040160405180910390fd5b81548390839060ff191660018360048111156108aa576108aa6120d5565b021790555060018360048111156108c3576108c36120d5565b0361091a575f8260050154426108d991906129b7565b6006840181905560405181815290915085907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505b837f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c828560405161094c9291906129ca565b60405180910390a250505050565b6002546001600160a01b0382165f90815260016020526040812054909161099b9164010000000090910463ffffffff169084906001600160401b0316611971565b92915050565b816109bf5760405163cbf4a64560e01b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b03166109f957604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610a27576040516282b42960e81b815260040160405180910390fd5b610a3460208301836129e5565b6009811115610a4557610a456120d5565b601182015460ff166009811115610a5e57610a5e6120d5565b14610a7c5760405163f37f7b5d60e01b815260040160405180910390fd5b601281015460208301351015610aa557604051634f9233a560e01b815260040160405180910390fd5b6040820135610ac757604051635e32eadd60e01b815260040160405180910390fd5b610ad46060830183612871565b90505f03610af557604051630f8b932160e11b815260040160405180910390fd5b5f815460ff166004811115610b0c57610b0c6120d5565b14158015610b3057506003815460ff166004811115610b2d57610b2d6120d5565b14155b15610b4e576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154610b639190612a00565b11610b815760405163e843c5eb60e01b815260040160405180910390fd5b6020820135601282015560408201356013820155610ba26060830183612871565b6014830191610bb29190836126bf565b50827f35947a8913e2156f19b018078c9f0667e49cb3dc24af3434a4d0b16b82675b1b6040840135610be76060860186612871565b8660200135604051610bfc9493929190612a3b565b60405180910390a2505050565b610c11611f75565b5f828152602081905260409081902081516101c081019092528054829060ff166004811115610c4257610c426120d5565b6004811115610c5357610c536120d5565b8152815461010090046001600160a01b03166020808301919091526040805180820182526001850154815260028501548184015281840152600384015460608401526004840180548251818502810185019093528083526080909401939192909190830182828015610ce257602002820191905f5260205f20905b815481526020019060010190808311610cce575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b82018054610d379061262d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d639061262d565b8015610dae5780601f10610d8557610100808354040283529160200191610dae565b820191905f5260205f20905b815481529060010190602001808311610d9157829003601f168201915b5050509183525050604080516101008082018352600c85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600d860154608080850191909152600e87015460a0850152600f87015460c0850152601087015460e08501529085019290925282519182018352601185018054939094019391928391166009811115610e5657610e566120d5565b6009811115610e6757610e676120d5565b81526020016001820154815260200160028201548152602001600382018054610e8f9061262d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ebb9061262d565b8015610f065780601f10610edd57610100808354040283529160200191610f06565b820191905f5260205f20905b815481529060010190602001808311610ee957829003601f168201915b5050509190925250505090525092915050565b84610f375760405163cbf4a64560e01b815260040160405180910390fd5b5f858152602081905260409020805461010090046001600160a01b0316610f7157604051634d36eb6960e01b815260040160405180910390fd5b6001815460ff166004811115610f8957610f896120d5565b14610fa7576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154610fbc9190612a00565b1115610fdb5760405163e843c5eb60e01b815260040160405180910390fd5b600354604051635c73957b60e11b81526001600160a01b039091169063b8e72af690611011908890889088908890600401612a65565b5f6040518083038186803b158015611027575f5ffd5b505afa158015611039573d5f5f3e3d5ffd5b505f925061104c91505083850185612b02565b600383015481519192501461107457604051630b6fac0360e41b815260040160405180910390fd5b5f611081600160096129b7565b6001600160401b038111156110985761109861265f565b6040519080825280602002602001820160405280156110c1578160200160208202803683370190505b50905060015b6009811015611116578281600981106110e2576110e2612b1d565b6020020151826110f36001846129b7565b8151811061110357611103612b1d565b60209081029190910101526001016110c7565b50825460ff1916600490811784558151611137918501906020840190612061565b50877f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c6001600460405161116c9291906129ca565b60405180910390a2336001600160a01b0316887f5da8009aeb11de7ef64598b0de897a03d2f93efabda8507a70e29cca4530cf5d836040516111ae9190612b31565b60405180910390a35050505050505050565b5f8181526020819052604080822081516101c08101909252805483929190829060ff1660048111156111f4576111f46120d5565b6004811115611205576112056120d5565b8152815461010090046001600160a01b0316602080830191909152604080518082018252600185015481526002850154818401528184015260038401546060840152600484018054825181850281018501909352808352608090940193919290919083018282801561129457602002820191905f5260205f20905b815481526020019060010190808311611280575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b820180546112e99061262d565b80601f01602080910402602001604051908101604052809291908181526020018280546113159061262d565b80156113605780601f1061133757610100808354040283529160200191611360565b820191905f5260205f20905b81548152906001019060200180831161134357829003601f168201915b5050509183525050604080516101008082018352600c85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600d860154608080850191909152600e87015460a0850152600f87015460c0850152601087015460e08501529085019290925282519182018352601185018054939094019391928391166009811115611408576114086120d5565b6009811115611419576114196120d5565b815260200160018201548152602001600282015481526020016003820180546114419061262d565b80601f016020809104026020016040519081016040528092919081815260200182805461146d9061262d565b80156114b85780601f1061148f576101008083540402835291602001916114b8565b820191905f5260205f20905b81548152906001019060200180831161149b57829003601f168201915b5050505050815250508152505090508060c001518160a001516114db9190612a00565b9392505050565b816115005760405163cbf4a64560e01b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b031661153a57604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314611568576040516282b42960e81b815260040160405180910390fd5b805460ff165f816004811115611580576115806120d5565b141580156115a05750600381600481111561159d5761159d6120d5565b14155b156115be576040516307a92f1960e51b815260040160405180910390fd5b600582015460068301548415806115de5750426115db8684612a00565b11155b806115fb57506115ee8183612a00565b6115f88684612a00565b11155b1561161957604051637616640160e01b815260040160405180910390fd5b6006840185905560405185815286907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505050505050565b8461167b5760405163cbf4a64560e01b815260040160405180910390fd5b5f858152602081905260409020805461010090046001600160a01b03166116b557604051634d36eb6960e01b815260040160405180910390fd5b5f815460ff1660048111156116cc576116cc6120d5565b146116ea576040516307a92f1960e51b815260040160405180910390fd5b42816006015482600501546116ff9190612a00565b1161171d5760405163e843c5eb60e01b815260040160405180910390fd5b5f808061172c85870187612bfc565b6003870154835193965091945092501461175957604051630b6fac0360e41b815260040160405180910390fd5b5f61176383611daa565b90505f49811461178657604051637ae4bd5f60e01b815260040160405180910390fd5b5f846004602002015190505f6001600160401b0380876008602002015116604082896007602002015116901b6080838a6006602002015116901b60c0848b6005602002015116901b17171791505f90506117e38484848989611e1d565b90506117ee81611ec7565b61180b57604051634776c3c760e01b815260040160405180910390fd5b600254604051635c73957b60e11b8152600160401b9091046001600160a01b03169063b8e72af690611847908f908f908f908f90600401612a65565b5f6040518083038186803b15801561185d575f5ffd5b505afa15801561186f573d5f5f3e3d5ffd5b505050508660016009811061188657611886612b1d565b6020020151600389015560408701516007890180545f906118a8908490612a00565b909155505060608701516008890180545f906118c5908490612a00565b9091555050600a88018054905f6118db83612c72565b909155505060208088015160405190815233918f917fdc9b2774f92abfeee93d8b2ef67d59cd90c2d6d740b01c24fd9ec109a71865fc910160405180910390a350505050505050505050505050565b6003546040805163233ace1160e01b815290515f926001600160a01b03169163233ace119160048083019260209291908290030181865afa15801561077c573d5f5f3e3d5ffd5b6001600160f81b031960e09390931b92831660ff60f01b84161760ff60e81b84161760ff60e01b939093169290921760409190911b68010000000000000000600160e01b03161767ff0000000000000082161766ff00000000000082161765ff000000000082161764ff0000000082161763ff00000082161762ff000082161761ff0082161760ff919091161790565b5f878152602081905260409020546001600160a01b038088166101009092041603611a3f57604051635040c4d360e11b815260040160405180910390fd5b611a4f6060830160408401612c8a565b60ff161580611a7057506008611a6b6060840160408501612c8a565b60ff16115b15611a8e5760405163ac38930b60e01b815260040160405180910390fd5b61ffff8260c001351115611ab557604051634dba795160e01b815260040160405180910390fd5b81608001358260a001351115611ade5760405163207ea56d60e01b815260040160405180910390fd5b8160c001358260e001351115611b0757604051636d403ec760e11b815260040160405180910390fd5b6009611b1660208301836129e5565b6009811115611b2757611b276120d5565b60ff161115611b495760405163f37f7b5d60e01b815260040160405180910390fd5b80602001355f03611b6d57604051634f9233a560e01b815260040160405180910390fd5b6040810135611b8f57604051635e32eadd60e01b815260040160405180910390fd5b611b9c6060820182612871565b90505f03611bbd57604051630f8b932160e11b815260040160405180910390fd5b60048581811115611bd057611bd06120d5565b60ff161180611c0d57505f856004811115611bed57611bed6120d5565b14158015611c0d57506003856004811115611c0a57611c0a6120d5565b14155b15611c2b576040516307a92f1960e51b815260040160405180910390fd5b425f859003611c38578094505b80851015611c5957604051632ca4094f60e21b815260040160405180910390fd5b80611c648587612a00565b11611c8257604051637616640160e01b815260040160405180910390fd5b5050505050505050565b5f826004811115611c9f57611c9f6120d5565b826004811115611cb157611cb16120d5565b03611cbd57505f61099b565b6002836004811115611cd157611cd16120d5565b1480611cee57506004836004811115611cec57611cec6120d5565b145b80611d0a57506001836004811115611d0857611d086120d5565b145b15611d1657505f61099b565b5f836004811115611d2957611d296120d5565b03611d835760035b826004811115611d4357611d436120d5565b1480611d6057506002826004811115611d5e57611d5e6120d5565b145b80611d7c57506001826004811115611d7a57611d7a6120d5565b145b905061099b565b6003836004811115611d9757611d976120d5565b03611da2575f611d31565b505f92915050565b5f81515f03611dba57505f919050565b600282604051611dca9190612cbc565b602060405180830381855afa158015611de5573d5f5f3e3d5ffd5b5050506040513d601f19601f82011682018060405250810190611e0891906129a0565b6001600160f81b0316600160f81b1792915050565b606060308351141580611e3257506030825114155b15611e835760405162461bcd60e51b815260206004820152601760248201527f4b5a47496e7075743a20626164204731206c656e677468000000000000000000604482015260640160405180910390fd5b8585858585604051602001611e9c959493929190612cc7565b604051602081830303815290604052905060c0815114611ebe57611ebe612ced565b95945050505050565b5f60c0825114611ed857505f919050565b5f5f600a6001600160a01b031684604051611ef39190612cbc565b5f60405180830381855afa9150503d805f8114611f2b576040519150601f19603f3d011682016040523d82523d5f602084013e611f30565b606091505b5091509150811580611f4457506040815114155b15611f5257505f9392505050565b60208101516110008114611f6a57505f949350505050565b506001949350505050565b604080516101c08101909152805f81526020015f6001600160a01b03168152602001611fb260405180604001604052805f81526020015f81525090565b81526020015f8152602001606081526020015f81526020015f81526020015f81526020015f81526020015f81526020015f8152602001606081526020016120396040518061010001604052805f151581526020015f151581526020015f60ff1681526020015f60ff1681526020015f81526020015f81526020015f81526020015f81525090565b8152604080516080810182525f80825260208281018290529282015260608082015291015290565b828054828255905f5260205f2090810192821561209a579160200282015b8281111561209a57825182559160200191906001019061207f565b506120a69291506120aa565b5090565b5b808211156120a6575f81556001016120ab565b5f602082840312156120ce575f5ffd5b5035919050565b634e487b7160e01b5f52602160045260245ffd5b600581106120f9576120f96120d5565b9052565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b80511515825260208101511515602083015260ff6040820151166040830152606081015161215e606084018260ff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b5f8151600a811061219e5761219e6120d5565b8084525060208201516020840152604082015160408401526060820151608060608501526121cf60808501826120fd565b949350505050565b6121e1818f6120e9565b6001600160a01b038d166020820152612207604082018d80518252602090810151910152565b8a60808201528960a08201528860c08201528760e08201528661010082015285610120820152846101408201526102a06101608201525f61224c6102a08301866120fd565b61225a61018084018661212b565b82810361028084015261226d818561218b565b9150509e9d5050505050505050505050505050565b803560058110612290575f5ffd5b919050565b5f608082840312156122a5575f5ffd5b50919050565b5f5f83601f8401126122bb575f5ffd5b5081356001600160401b038111156122d1575f5ffd5b6020830191508360208285010111156122e8575f5ffd5b9250929050565b5f604082840312156122a5575f5ffd5b5f5f5f5f5f5f5f5f5f898b03610200811215612319575f5ffd5b6123228b612282565b995060208b0135985060408b01359750610100605f1982011215612344575f5ffd5b5060608a0195506101608a01356001600160401b03811115612364575f5ffd5b6123708c828d01612295565b9550506101808a01356001600160401b0381111561238c575f5ffd5b6123988c828d016122ab565b90955093506123ad90508b6101a08c016122ef565b989b979a5095989497939692955090936101e00135919050565b5f5f604083850312156123d8575f5ffd5b823591506123e860208401612282565b90509250929050565b5f60208284031215612401575f5ffd5b81356001600160a01b03811681146114db575f5ffd5b5f5f60408385031215612428575f5ffd5b8235915060208301356001600160401b03811115612444575f5ffd5b61245085828601612295565b9150509250929050565b5f8151808452602084019350602083015f5b8281101561248a57815186526020958601959091019060010161246c565b5093949350505050565b602081526124a66020820183516120e9565b5f60208301516124c160408401826001600160a01b03169052565b506040830151805160608401526020810151608084015250606083015160a083015260808301516102c060c08401526124fe6102e084018261245a565b905060a084015160e084015260c084015161010084015260e0840151610120840152610100840151610140840152610120840151610160840152610140840151610180840152610160840151601f19848303016101a085015261256182826120fd565b9150506101808401516125786101c085018261212b565b506101a0840151838203601f19016102c0850152611ebe828261218b565b5f5f5f5f5f606086880312156125aa575f5ffd5b8535945060208601356001600160401b038111156125c6575f5ffd5b6125d2888289016122ab565b90955093505060408601356001600160401b038111156125f0575f5ffd5b6125fc888289016122ab565b969995985093965092949392505050565b5f5f6040838503121561261e575f5ffd5b50508035926020909101359150565b600181811c9082168061264157607f821691505b6020821081036122a557634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f8211156126ba57805f5260205f20601f840160051c810160208510156126985750805b601f840160051c820191505b818110156126b7575f81556001016126a4565b50505b505050565b6001600160401b038311156126d6576126d661265f565b6126ea836126e4835461262d565b83612673565b5f601f84116001811461271b575f85156127045750838201355b5f19600387901b1c1916600186901b1783556126b7565b5f83815260208120601f198716915b8281101561274a578685013582556020948501946001909201910161272a565b5086821015612766575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f8135801515811461099b575f5ffd5b60ff81168114612796575f5ffd5b50565b5f813561099b81612788565b6127ae82612778565b151560ff1982541660ff82168117835550506127e96127cf60208401612778565b82805461ff00191691151560081b61ff0016919091179055565b6128106127f860408401612799565b825462ff0000191660109190911b62ff000016178255565b61283961281f60608401612799565b825463ff000000191660189190911b63ff00000016178255565b6080820135600182015560a0820135600282015560c0820135600382015560e090910135600490910155565b600a8110612796575f5ffd5b5f5f8335601e19843603018112612886575f5ffd5b8301803591506001600160401b0382111561289f575f5ffd5b6020019150368190038213156122e8575f5ffd5b81356128be81612865565b600a81106128ce576128ce6120d5565b815460ff191660ff9190911617815560208201356001820155604082013560028201556060820135601e1936849003018112612908575f5ffd5b820180356001600160401b0381111561291f575f5ffd5b602082019150803603821315612933575f5ffd5b6129418183600386016126bf565b50505050565b634e487b7160e01b5f52601160045260245ffd5b5f63ffffffff821663ffffffff810361297657612976612947565b60010192915050565b5f6001600160401b0382166001600160401b03810361297657612976612947565b5f602082840312156129b0575f5ffd5b5051919050565b8181038181111561099b5761099b612947565b604081016129d882856120e9565b6114db60208301846120e9565b5f602082840312156129f5575f5ffd5b81356114db81612865565b8082018082111561099b5761099b612947565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b848152606060208201525f612a54606083018587612a13565b905082604083015295945050505050565b604081525f612a78604083018688612a13565b8281036020840152612a8b818587612a13565b979650505050505050565b5f82601f830112612aa5575f5ffd5b60405161012081016001600160401b0381118282101715612ac857612ac861265f565b60405280610120840185811115612add575f5ffd5b845b81811015612af7578035835260209283019201612adf565b509195945050505050565b5f6101208284031215612b13575f5ffd5b6114db8383612a96565b634e487b7160e01b5f52603260045260245ffd5b602080825282518282018190525f918401906040840190835b81811015612b68578351835260209384019390920191600101612b4a565b509095945050505050565b5f82601f830112612b82575f5ffd5b81356001600160401b03811115612b9b57612b9b61265f565b604051601f8201601f19908116603f011681016001600160401b0381118282101715612bc957612bc961265f565b604052818152838201602001851015612be0575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f6101608486031215612c0f575f5ffd5b612c198585612a96565b92506101208401356001600160401b03811115612c34575f5ffd5b612c4086828701612b73565b9250506101408401356001600160401b03811115612c5c575f5ffd5b612c6886828701612b73565b9150509250925092565b5f60018201612c8357612c83612947565b5060010190565b5f60208284031215612c9a575f5ffd5b81356114db81612788565b5f81518060208401855e5f93019283525090919050565b5f6114db8284612ca5565b8581528460208201528360408201525f612a8b612ce76060840186612ca5565b84612ca5565b634e487b7160e01b5f52600160045260245ffdfea264697066735822122091826904ee7418602e55db9b7a4e9f724962ab80bc9fa4db51a614b1f34fd48564736f6c634300081c0033";

type ProcessRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProcessRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProcessRegistry__factory extends ContractFactory {
  constructor(...args: ProcessRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    );
  }
  override deploy(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    ) as Promise<
      ProcessRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProcessRegistry__factory {
    return super.connect(runner) as ProcessRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProcessRegistryInterface {
    return new Interface(_abi) as ProcessRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProcessRegistry {
    return new Contract(address, _abi, runner) as unknown as ProcessRegistry;
  }
}
