/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IZKVerifier,
  IZKVerifierInterface,
} from "../../../src/interfaces/IZKVerifier";

const _abi = [
  {
    inputs: [],
    name: "provingKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IZKVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IZKVerifierInterface {
    return new Interface(_abi) as IZKVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IZKVerifier {
    return new Contract(address, _abi, runner) as unknown as IZKVerifier;
  }
}
