package contracts

// This file is auto-generated by helpers/write_contract_addresses.sh
// Do not edit manually - run the script to regenerate
// Generated from commit: 7bac0a28641823084d29b766be117cdaec2e09b4

// Network constants
const (
	SepoliaNetwork = "sepolia"
	UzhNetwork     = "uzh"
	MainnetNetwork = "mainnet"
)

// Contract name constants
const (
	ProcessRegistryContract                = "processRegistry"
	OrganizationRegistryContract           = "organizationRegistry"
	StateTransitionVerifierGroth16Contract = "stateTransitionVerifierGroth16"
	ResultsVerifierGroth16Contract         = "resultsVerifierGroth16"
	SequencerRegistryContract              = "sequencerRegistry"
)

// Contract addresses by network
const (
	OrganizationRegistryCeloAddress = "0xE17D701EA8f34022F97fC2Ec68c73D42bF99D0BD"
	OrganizationRegistryMainnetAddress = "0x0"
	OrganizationRegistrySepoliaAddress = "0xF30678f579Fd89b86295503dC179d5d3aed47a98"
	OrganizationRegistryUzhAddress = "0xf7BCE4546805547bE526Ca864d6722Ed193E51Aa"
	ProcessRegistryCeloAddress = "0xDda6c75d32c375946C8ae9be41B2F3539dB1118A"
	ProcessRegistryMainnetAddress = "0x0"
	ProcessRegistrySepoliaAddress = "0x50CA6A350f3A9C7B8a82eE7a4D5F0f21C54D68e3"
	ProcessRegistryUzhAddress = "0x69B16f67Bd2fB18bD720379E9C1Ef5EaD3872d67"
	ResultsVerifierGroth16CeloAddress = "0x808276962217AD1ED3af7D51bFc791903CAd9389"
	ResultsVerifierGroth16MainnetAddress = "0x0"
	ResultsVerifierGroth16SepoliaAddress = "0x3ab37C40f7d0649f7a15BA3230f14AB29B51eDCC"
	ResultsVerifierGroth16UzhAddress = "0x00c7F87731346F592197E49A90Ad6EC236Ad9985"
	SequencerRegistryCeloAddress = "0x0"
	SequencerRegistryMainnetAddress = "0x0"
	SequencerRegistrySepoliaAddress = "0x0"
	SequencerRegistryUzhAddress = "0x0"
	StateTransitionVerifierGroth16CeloAddress = "0x2DaF913D423128258b2F378E320F9D9D3Be5eCf5"
	StateTransitionVerifierGroth16MainnetAddress = "0x0"
	StateTransitionVerifierGroth16SepoliaAddress = "0x96EcBbD6aB5fDC063E0fC426F2700290DeeAFE4E"
	StateTransitionVerifierGroth16UzhAddress = "0x5e4673CD378F05cc3Ae25804539c91E711548741"
)

// GetContractAddress returns the address for a given contract and network
func GetContractAddress(contract, network string) string {
	switch contract {
	case ProcessRegistryContract:
		switch network {
		case SepoliaNetwork:
			return ProcessRegistrySepoliaAddress
		case UzhNetwork:
			return ProcessRegistryUzhAddress
		case MainnetNetwork:
			return ProcessRegistryMainnetAddress
		}
	case OrganizationRegistryContract:
		switch network {
		case SepoliaNetwork:
			return OrganizationRegistrySepoliaAddress
		case UzhNetwork:
			return OrganizationRegistryUzhAddress
		case MainnetNetwork:
			return OrganizationRegistryMainnetAddress
		}
	case StateTransitionVerifierGroth16Contract:
		switch network {
		case SepoliaNetwork:
			return StateTransitionVerifierGroth16SepoliaAddress
		case UzhNetwork:
			return StateTransitionVerifierGroth16UzhAddress
		case MainnetNetwork:
			return StateTransitionVerifierGroth16MainnetAddress
		}
	case ResultsVerifierGroth16Contract:
		switch network {
		case SepoliaNetwork:
			return ResultsVerifierGroth16SepoliaAddress
		case UzhNetwork:
			return ResultsVerifierGroth16UzhAddress
		case MainnetNetwork:
			return ResultsVerifierGroth16MainnetAddress
		}
	case SequencerRegistryContract:
		switch network {
		case SepoliaNetwork:
			return SequencerRegistrySepoliaAddress
		case UzhNetwork:
			return SequencerRegistryUzhAddress
		case MainnetNetwork:
			return SequencerRegistryMainnetAddress
		}
	}
	return ""
}

// GetAllContractAddresses returns a map of all contract addresses for a given network
func GetAllContractAddresses(network string) map[string]string {
	addresses := make(map[string]string)
	
	contracts := []string{
		ProcessRegistryContract,
		OrganizationRegistryContract,
		StateTransitionVerifierGroth16Contract,
		ResultsVerifierGroth16Contract,
		SequencerRegistryContract,
	}
	
	for _, contract := range contracts {
		if addr := GetContractAddress(contract, network); addr != "" && addr != "0x0" {
			addresses[contract] = addr
		}
	}
	
	return addresses
}

// GetSepoliaAddresses returns all contract addresses for Sepolia network
func GetSepoliaAddresses() map[string]string {
	return GetAllContractAddresses(SepoliaNetwork)
}

// GetUzhAddresses returns all contract addresses for UZH network
func GetUzhAddresses() map[string]string {
	return GetAllContractAddresses(UzhNetwork)
}

// GetMainnetAddresses returns all contract addresses for Mainnet network
func GetMainnetAddresses() map[string]string {
	return GetAllContractAddresses(MainnetNetwork)
}
