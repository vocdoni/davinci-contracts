/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ResultsVerifierGroth16,
  ResultsVerifierGroth16Interface,
} from "../../../src/verifiers/ResultsVerifierGroth16";

const _abi = [
  {
    inputs: [],
    name: "CommitmentInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provingKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
      {
        internalType: "uint256[9]",
        name: "input",
        type: "uint256[9]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[9]",
        name: "input",
        type: "uint256[9]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_input",
        type: "bytes",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506121718061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063233ace111461005c5780635d26278e1461008f57806360e58346146100a4578063b1c3a00e146100b7578063b8e72af6146100d9575b600080fd5b6040517f2db338c37d84dc28f83749d506b6d618b4d7865de158725346bfe2970d40c28b81526020015b60405180910390f35b6100a261009d366004611bf0565b6100ec565b005b6100a26100b2366004611c6d565b61062b565b6100ca6100c5366004611cbe565b610aa5565b60405161008693929190611d07565b6100a26100e7366004611db3565b610b2e565b6100f4611b27565b6100fc611b45565b610104611b63565b6101158660005b6020020135610baf565b6020840152825260008061012887610baf565b855160208088015160405194965092945060609360008051602061211c8339815191529361015b93929091869101611e3a565b6040516020818303038152906040528051906020012060001c61017e9190611e93565b865284518452602085810151858201527f2cb780c9312e4174287ee5ff4d666751d59b265f2c053f46cbfc2e99bad1fcad6040808701919091527f06e65f2bf8d94a478b9ddb7c0e9db29c0755058cf0d91161bf8ae9c2c50c97b660608701527f1006068747e128f8a50c4dafe2b2e6528c5998bc266246697e47f1ab0cef31d260808701527f13f9cedc273a55044a540e2539ba9d86459c970bb2828451b675725966d2e6a660a087015260c0860185905260e086018490527f302f8e094218e58353f09a1bc0e0682bd89061b6eed16f7252cdec56c00139ec6101008701527f097e17687ea032ad9427fa16e25af7a444d50d73639ea497722fa16a01e5523d6101208701527f24728f90638084e55460761977ee76200ed3c92742fb82c1404828a1159bc9d96101408701527f1be79e4aa7955189e597b545c5aaf958fbe911d5c00ccdab84f53861c270d09d61016087015251600091816101808860085afa905116905080610304576040516351d49ff760e11b815260040160405180910390fd5b505050506000806103218960006004811061010b5761010b611e24565b9092509050600080808061033d60408e013560208f0135610c55565b929650909450925090506000806103558f600361010b565b915091506000806103678e8e8e610e3b565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f15d3e1b66c432b464732477097374f0d2143e911c9ce278cc59965e8b4579be06101008e01527f02c9168eaf7d0757f2efa121ab8ab8f18b0dc1bde82f9b2edd9f417b359056c26101208e01527f11008cbcb473c3995e3abe2f12eae4274921ec2d5e3b7f8911b9b33c6557728e6101408e01527f0292e2600302b1d07ff68e1d67ac0aa91c2cdff5823bc18eec53c4906f4fcaaa6101608e01527f2d70184ab5f2fa2c1671ba18ec1239fe17e5b6bd62ea9d3814b5e4f133791b846101808e01527f18ea67a0e26d18bba1ca181d54ed4e41658c1f5aa22870e47043b05f824afa826101a08e01527f031ba23a7cb3c391894f0b6984cbd445fa683e8027c328efd71aec8157c2dc636101c08e01527f1c5e8be179ec7e41a35363a9baecab3c4d897787ce6031880b348f30fcdc39fd6101e08e01527f1c014952bac4c8f99f5287c67ca74246038321998fbb05bc8ead721f7ba3feff6102008e01527f0dc188f2f5855e32a02c0795d5ad48ecf9fb37e4d9b2272ac1971500762704a16102208e01526102408d018290526102608d018190527f0c10ca2c47f0dcaabf954314c2021d3f160452b1d05c5289b6124db3d2f734c56102808e01527f2d9b905d54012bd64997bcd04e1617620748630f905617e3dfac28096411e5336102a08e01527f19be7b8222ead7ae26c153358b3d156bf3689c1607a21b18eba906c9e3f1c6b06102c08e01527f12848d5626d1c3f2933234ff61ad4e15a53022f1b13558ba7bc5a48ccbc71f306102e08e0152909250905060006105dc611b27565b6020816103008f60085afa91508115806105f857508051600114155b1561061657604051631ff3747d60e21b815260040160405180910390fd5b50505050505050505050505050505050505050565b610633611b27565b60405160609060008051602061211c8339815191529061065f908735906020808a013591869101611e3a565b6040516020818303038152906040528051906020012060001c6106829190611e93565b8252604080516000918782377f2cb780c9312e4174287ee5ff4d666751d59b265f2c053f46cbfc2e99bad1fcad60408201527f06e65f2bf8d94a478b9ddb7c0e9db29c0755058cf0d91161bf8ae9c2c50c97b660608201527f1006068747e128f8a50c4dafe2b2e6528c5998bc266246697e47f1ab0cef31d260808201527f13f9cedc273a55044a540e2539ba9d86459c970bb2828451b675725966d2e6a660a082015260408660c08301377f302f8e094218e58353f09a1bc0e0682bd89061b6eed16f7252cdec56c00139ec6101008201527f097e17687ea032ad9427fa16e25af7a444d50d73639ea497722fa16a01e5523d6101208201527f24728f90638084e55460761977ee76200ed3c92742fb82c1404828a1159bc9d96101408201527f1be79e4aa7955189e597b545c5aaf958fbe911d5c00ccdab84f53861c270d09d6101608201526020816101808360085afa9051169050806107f8576040516351d49ff760e11b815260040160405180910390fd5b60008061082f86868a6002806020026040519081016040528092919082600260200280828437600092019190915250610e3b915050565b915091506040516101008a82377f15d3e1b66c432b464732477097374f0d2143e911c9ce278cc59965e8b4579be06101008201527f02c9168eaf7d0757f2efa121ab8ab8f18b0dc1bde82f9b2edd9f417b359056c26101208201527f11008cbcb473c3995e3abe2f12eae4274921ec2d5e3b7f8911b9b33c6557728e6101408201527f0292e2600302b1d07ff68e1d67ac0aa91c2cdff5823bc18eec53c4906f4fcaaa6101608201527f2d70184ab5f2fa2c1671ba18ec1239fe17e5b6bd62ea9d3814b5e4f133791b846101808201527f18ea67a0e26d18bba1ca181d54ed4e41658c1f5aa22870e47043b05f824afa826101a08201527f031ba23a7cb3c391894f0b6984cbd445fa683e8027c328efd71aec8157c2dc636101c08201527f1c5e8be179ec7e41a35363a9baecab3c4d897787ce6031880b348f30fcdc39fd6101e08201527f1c014952bac4c8f99f5287c67ca74246038321998fbb05bc8ead721f7ba3feff6102008201527f0dc188f2f5855e32a02c0795d5ad48ecf9fb37e4d9b2272ac1971500762704a161022082015282610240820152816102608201527f0c10ca2c47f0dcaabf954314c2021d3f160452b1d05c5289b6124db3d2f734c56102808201527f2d9b905d54012bd64997bcd04e1617620748630f905617e3dfac28096411e5336102a08201527f19be7b8222ead7ae26c153358b3d156bf3689c1607a21b18eba906c9e3f1c6b06102c08201527f12848d5626d1c3f2933234ff61ad4e15a53022f1b13558ba7bc5a48ccbc71f306102e08201526020816103008360085afa905116925082610a9a57604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050565b610aad611b82565b610ab5611b27565b6000610aca86358760015b6020020135611425565b8352610ae86060870135604088013560a089013560808a013561151a565b60208501526040840152610b0260c0870135876007610ac0565b6060840152610b148535866001610ac0565b8252610b238435856001610ac0565b905093509350939050565b6000806000610b3d8787611811565b91945092509050306360e58346848484610b578a8a611842565b6040518563ffffffff1660e01b8152600401610b769493929190611ede565b60006040518083038186803b158015610b8e57600080fd5b505afa158015610ba2573d6000803e3d6000fd5b5050505050505050505050565b60008082600003610bc557506000928392509050565b600183811c9250808416146000805160206120fc8339815191528310610bfe57604051631ff3747d60e21b815260040160405180910390fd5b610c3b6000805160206120fc83398151915260036000805160206120fc833981519152866000805160206120fc833981519152888909090861185d565b91508015610c4f57610c4c826118c1565b91505b50915091565b600080808085158015610c66575084155b15610c7c57506000925082915081905080610e32565b600286811c945085935060018088161490808816146000805160206120fc83398151915286101580610cbc57506000805160206120fc8339815191528510155b15610cda57604051631ff3747d60e21b815260040160405180910390fd5b60006000805160206120fc833981519152610d0460036000805160206120fc833981519152611f5a565b6000805160206120fc833981519152888a0909905060006000805160206120fc833981519152886000805160206120fc8339815191528a8b0909905060006000805160206120fc833981519152886000805160206120fc8339815191528a8b090990506000805160206120fc833981519152806000805160206120fc8339815191528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089650610dfd6000805160206120fc833981519152806000805160206120fc8339815191528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e775086118c1565b9550610e0a8787866118da565b90975095508415610e2c57610e1e876118c1565b9650610e29866118c1565b95505b50505050505b92959194509250565b6000806000600190506040516040810160007f16009ebfbbf9229ffc1585d2d4eea05ee94d9fe05781ff26f5df3e916a1ac53f83527f0e36ec34f94c0227166fe4a9f300bb8fc5fea5a7fe8305100923d519e0c1ebf26020840152865182526020870151602083015260408360808560065afa841693507f0a0ab27c08e217fb98d136801537ec219b24125d2e7d37476cd0616e1e3f963082527f0c310a23a281b945933c5645379519ac41248e72a36858ea13a6a17ea8c0f91c60208301528835905080604083015260008051602061211c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f2d609587bdb741ed526133b0cafac1e4c51798d710b8946b23aaaded59e7a02482527f0908e3f29f13e06dea05097837c74a7ec47fee70f34b4a25aff4e987e42ec1db60208301526020890135905080604083015260008051602061211c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f25d8d4a12d52237619720ef9b24a216f70319e323c9ce1e6de3b1893fe5f287082527f2a4aa1991b9064a064143a6e17cbfe336ddf3917c285cd161b4585ef30b3e0a160208301526040890135905080604083015260008051602061211c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f090a273b0a832c884b46cd44db22895803372520fc9ff5677058e6b25a83bfa082527f018a1e4c289f227406fbc32b893c035f5f50967d29bbd87f1b0f44a3235e633660208301526060890135905080604083015260008051602061211c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f0f29f8ba6bfcb6663a774b29004edb6f4ba59c4f373aed057afa1002fe25de7b82527f0dacce6a4d12993d2b05a8142640312b176539edfdb5d29c65ea8656b2dbb39460208301526080890135905080604083015260008051602061211c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f0a3a5c07042c521001aa071cdb6b20e0b0ddfc9d57908f16ebc7dcf9cf90466b82527f195d8f9791680e780b54952bd77c78927cfa6db25a46e601024a425aef3902d3602083015260a0890135905080604083015260008051602061211c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f0dd14511856ca3bf8f012f616be4c22388188739d36e5f3c9903ebae245db1a082527f04c6ab00caf8b754ecf13ad4375435150175ad351defa312a015e7828ac5778c602083015260c0890135905080604083015260008051602061211c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f2ef417983ca47c37c4fd728130a930a901bcdf698f3d2fb3b4644b7fdbe7a64e82527f191ae0a34f932911a180e09285b5fbafa635c049ec634f2e2aa34c8ac67cc6e5602083015260e0890135905080604083015260008051602061211c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f13a0cb4f187927eb4a8878dadb83b0b1ccc5a03656f20215d7a940d1ff5c2b6782527f2078f7bdcd7801f2debe8988ed41466f0a01e52e0182ed97851e4e3ff42dd3f46020830152610100890135905080604083015260008051602061211c83398151915281108416935060408260608460075afa8416935060408360808560065afa7f29ca62691208d4a7dc51d2800bd2bc8d4a0815bb8ff762d42010f366ab3b579983527f15e81febb3dab9b7ba8233221f22cc7171623fc58c18fc705911e52f65d0b35160208401528851604080850182905260008051602061211c83398151915290911091909516169390508160608160075afa831692505060408160808360065afa8151602090920151919450909250168061141c5760405163a54f8e2760e01b815260040160405180910390fd5b50935093915050565b60006000805160206120fc8339815191528310158061145257506000805160206120fc8339815191528210155b1561147057604051631ff3747d60e21b815260040160405180910390fd5b8215801561147c575081155b1561148957506000611514565b60006114c86000805160206120fc83398151915260036000805160206120fc833981519152876000805160206120fc833981519152898a09090861185d565b90508083036114dd575050600182901b611514565b6114e6816118c1565b83036114f9575050600182811b17611514565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b6000806000805160206120fc8339815191528610158061154857506000805160206120fc8339815191528510155b8061156157506000805160206120fc8339815191528410155b8061157a57506000805160206120fc8339815191528310155b1561159857604051631ff3747d60e21b815260040160405180910390fd5b828486881717176000036115b157506000905080611808565b600080806000805160206120fc8339815191526115dd60036000805160206120fc833981519152611f5a565b6000805160206120fc8339815191528a8c0909905060006000805160206120fc8339815191528a6000805160206120fc8339815191528c8d0909905060006000805160206120fc8339815191528a6000805160206120fc8339815191528c8d090990506000805160206120fc833981519152806000805160206120fc8339815191528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50894506116d66000805160206120fc833981519152806000805160206120fc8339815191528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e775086118c1565b93505050506000806117276000805160206120fc833981519152806116fd576116fd611e7d565b6000805160206120fc8339815191528586096000805160206120fc8339815191528788090861185d565b90506117746000805160206120fc8339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea46000805160206120fc83398151915284880809611a18565b159150506117838383836118da565b9093509150868314801561179657508186145b156117c057806117a75760006117aa565b60025b60ff1660028a901b176000179450879350611804565b6117c9836118c1565b871480156117de57506117db826118c1565b86145b156114f957806117ef5760006117f2565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b611819611ba0565b611821611b45565b611829611b45565b61183584860186612010565b9250925092509250925092565b61184a611bbf565b61185682840184612092565b9392505050565b6000611889827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611a62565b9050816000805160206120fc833981519152828309146118bc57604051631ff3747d60e21b815260040160405180910390fd5b919050565b6000805160206120fc8339815191529081900681030690565b6000808061190c6000805160206120fc833981519152808788096000805160206120fc833981519152898a090861185d565b905083156119205761191d816118c1565b90505b61196b6000805160206120fc8339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea46000805160206120fc833981519152848a080961185d565b92506000805160206120fc8339815191526119976000805160206120fc83398151915260028609611ac7565b860991506000805160206120fc8339815191526119c46000805160206120fc8339815191528485096118c1565b6000805160206120fc83398151915285860908861415806119fa57506000805160206120fc833981519152808385096002098514155b1561141c57604051631ff3747d60e21b815260040160405180910390fd5b600080611a45837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611a62565b9050826000805160206120fc833981519152828309149392505050565b60008060405160208152602080820152602060408201528460608201528360808201526000805160206120fc83398151915260a082015260208160c08360055afa9051925090508061151257604051631ff3747d60e21b815260040160405180910390fd5b6000611af3827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd45611a62565b90506000805160206120fc8339815191528183096001146118bc57604051631ff3747d60e21b815260040160405180910390fd5b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518061010001604052806008906020820280368337509192915050565b6040518061012001604052806009906020820280368337509192915050565b80610120810183101561151457600080fd5b6000806000806101e08587031215611c0757600080fd5b6080850186811115611c1857600080fd5b85945060a0860187811115611c2c57600080fd5b909350359150611c3f8660c08701611bde565b905092959194509250565b80610100810183101561151457600080fd5b806040810183101561151457600080fd5b6000806000806102a08587031215611c8457600080fd5b611c8e8686611c4a565b9350611c9e866101008701611c5c565b9250611cae866101408701611c5c565b9150611c3f866101808701611bde565b60008060006101808486031215611cd457600080fd5b611cde8585611c4a565b9250611cee856101008601611c5c565b9150611cfe856101408601611c5c565b90509250925092565b60c08101818560005b6004811015611d2f578151835260209283019290910190600101611d10565b505050608082018460005b6001811015611d59578151835260209283019290910190600101611d3a565b5050508260a0830152949350505050565b60008083601f840112611d7c57600080fd5b50813567ffffffffffffffff811115611d9457600080fd5b602083019150836020828501011115611dac57600080fd5b9250929050565b60008060008060408587031215611dc957600080fd5b843567ffffffffffffffff811115611de057600080fd5b611dec87828801611d6a565b909550935050602085013567ffffffffffffffff811115611e0c57600080fd5b611e1887828801611d6a565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b83815282602082015260006040820183516020850160005b82811015611e70578151845260209384019390910190600101611e52565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611eb057634e487b7160e01b600052601260045260246000fd5b500690565b8060005b6002811015611ed8578151845260209384019390910190600101611eb9565b50505050565b6102a08101818660005b6008811015611f07578151835260209283019290910190600101611ee8565b505050611f18610100830186611eb5565b611f26610140830185611eb5565b61018082018360005b6009811015611f4e578151835260209283019290910190600101611f2f565b50505095945050505050565b8181038181111561151457634e487b7160e01b600052601160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611fb257634e487b7160e01b600052604160045260246000fd5b604052919050565b600082601f830112611fcb57600080fd5b6000611fd76040611f7b565b9050806040840185811115611feb57600080fd5b845b81811015612005578035835260209283019201611fed565b509195945050505050565b6000806000610180848603121561202657600080fd5b600085601f860112612036578081fd5b8061010061204381611f7b565b925082915086018781111561205757600080fd5b865b81811015612071578035845260209384019301612059565b5081955061207f8882611fba565b9450505050611cfe856101408601611fba565b600061012082840312156120a557600080fd5b600083601f8401126120b5578081fd5b806101206120c281611f7b565b92508291508401858111156120d657600080fd5b845b818110156120f05780358452602093840193016120d8565b50909594505050505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220a69e37b789507b96dde863401072eb629ec9f401480d5e2d97f2f4aac3dbb64664736f6c634300081c0033";

type ResultsVerifierGroth16ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResultsVerifierGroth16ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResultsVerifierGroth16__factory extends ContractFactory {
  constructor(...args: ResultsVerifierGroth16ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ResultsVerifierGroth16 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ResultsVerifierGroth16__factory {
    return super.connect(runner) as ResultsVerifierGroth16__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResultsVerifierGroth16Interface {
    return new Interface(_abi) as ResultsVerifierGroth16Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ResultsVerifierGroth16 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ResultsVerifierGroth16;
  }
}
