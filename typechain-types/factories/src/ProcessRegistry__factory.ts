/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProcessRegistry,
  ProcessRegistryInterface,
} from "../../src/ProcessRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_chainID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_stVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BlobVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotAcceptResult",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBlobHash",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusOrigin",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusURI",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxMinValueBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValueSum",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxVotes",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinTotalCost",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProcessId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimeBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUniqueValues",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValueSumBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "censusRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "censusURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    name: "CensusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProcessCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "ProcessDurationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    name: "ProcessResultsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newStateRoot",
        type: "uint256",
      },
    ],
    name: "ProcessStateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "oldStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProcessStatusChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "BLOB_INDEX",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CENSUS_ORIGIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_STATUS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
    ],
    name: "getNextProcessId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcess",
    outputs: [
      {
        components: [
          {
            internalType: "enum IProcessRegistry.ProcessStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "organizationId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.EncryptionKey",
            name: "encryptionKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "latestStateRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "result",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteOverwriteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "costFromWeight",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "uniqueValues",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "numFields",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "costExponent",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxValueSum",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValueSum",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.BallotMode",
            name: "ballotMode",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IProcessRegistry.CensusOrigin",
                name: "censusOrigin",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "censusRoot",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "censusURI",
                type: "string",
              },
            ],
            internalType: "struct IProcessRegistry.Census",
            name: "census",
            type: "tuple",
          },
        ],
        internalType: "struct IProcessRegistry.Process",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcessEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSTVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "uniqueValues",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "numFields",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValueSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValueSum",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "initStateRoot",
        type: "uint256",
      },
    ],
    name: "newProcess",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "processCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "processNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processes",
    outputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "latestStateRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteOverwriteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creationBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchNumber",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "uniqueValues",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "numFields",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValueSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValueSum",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    name: "setProcessCensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProcessDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "setProcessResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "setProcessStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "submitStateTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051612a39380380612a3983398101604081905261002e916100b1565b60028054600380546001600160a01b039485166001600160a01b031990911617905563ffffffff9094166401000000000263ffffffff60201b1992909316680100000000000000000291909116600160201b600160e01b0319909316929092171790556100fb565b80516001600160a01b03811681146100ac575f5ffd5b919050565b5f5f5f606084860312156100c3575f5ffd5b835163ffffffff811681146100d6575f5ffd5b92506100e460208501610096565b91506100f260408501610096565b90509250925092565b612931806101085f395ff3fe608060405234801561000f575f5ffd5b5060043610610127575f3560e01c806372c628ef116100a9578063a5f01e191161006e578063a5f01e19146102c6578063adc879e9146102d9578063c718c01f146102f1578063d71d072e14610304578063f9aa449914610317575f5ffd5b806372c628ef14610253578063848df5401461025b578063992bc45b146102805780639c18deaf146102a0578063a5b110de146102b3575f5ffd5b80634c0acc56116100ef5780634c0acc56146101d057806356a6f1e2146101d857806362fa11fc146101ed57806368141f2c1461022d5780636bae04ea14610240575f5ffd5b806302cc919a1461012b5780630535fece1461014a578063097063921461017657806326795bc3146101a85780633365133c146101af575b5f5ffd5b610133600981565b60405160ff90911681526020015b60405180910390f35b61015d610158366004611e15565b61031f565b6040516101419d9c9b9a99989796959493929190611f2e565b60025461019090600160401b90046001600160a01b031681565b6040516001600160a01b039091168152602001610141565b6101335f81565b6101c26101bd366004612056565b610566565b604051908152602001610141565b6101c261072c565b6101eb6101e636600461211e565b6107a7565b005b6102156101fb366004612148565b60016020525f90815260409020546001600160401b031681565b6040516001600160401b039091168152602001610141565b6101c261023b366004612148565b61095c565b6101eb61024e36600461216e565b6109a5565b610133600481565b60025461026b9063ffffffff1681565b60405163ffffffff9091168152602001610141565b61029361028e366004611e15565b610c0d565b60405161014191906121eb565b600354610190906001600160a01b031681565b6101eb6102c13660046122f6565b610f1d565b6101c26102d4366004611e15565b6111c4565b60025461026b90640100000000900463ffffffff1681565b6101eb6102ff36600461236d565b6114e6565b6101eb6103123660046122f6565b611661565b6101c261185e565b5f60208181529181526040908190208054825180840190935260018201548352600282015493830193909352600381015460058201546006830154600784015460088501546009860154600a870154600b8801805460ff8c169b61010090046001600160a01b03169a9991906103949061238d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c09061238d565b801561040b5780601f106103e25761010080835404028352916020019161040b565b820191905f5260205f20905b8154815290600101906020018083116103ee57829003601f168201915b5050604080516101008082018352600c88015460ff808216151584529181048216151560208401526201000081048216838501526301000000900481166060830152600d880154608080840191909152600e89015460a0840152600f89015460c0840152601089015460e084015283519081019093526011880180549798929792965092945091925083911660098111156104a8576104a8611e2c565b60098111156104b9576104b9611e2c565b815260200160018201548152602001600282015481526020016003820180546104e19061238d565b80601f016020809104026020016040519081016040528092919081815260200182805461050d9061238d565b80156105585780601f1061052f57610100808354040283529160200191610558565b820191905f5260205f20905b81548152906001019060200180831161053b57829003601f168201915b50505050508152505090508d565b600254335f81815260016020526040812054909283916105a191640100000000900463ffffffff1690309085906001600160401b03166118a5565b90506105b281838e8e8e8e8e611923565b5f81815260208190526040902080548d90829060ff191660018360048111156105dd576105dd611e2c565b0217905550600581018c9055600681018b90558054610100600160a81b0319166101006001600160a01b03851602178155853560018201556020860135600282015560038101859055600b8101610635888a8361241f565b5089600c82016106458282612505565b50899050601182016106578282612613565b50504360098201556002805463ffffffff16905f610674836126bb565b825463ffffffff9182166101009390930a9283029190920219909116179055506001600160a01b0383165f90815260016020526040812080546001600160401b0316916106c0836126df565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050826001600160a01b0316827fada6f87a2a16a0c9c169ca36754c5f33f7c1a973b575d068f888a549ed4faefa60405160405180910390a3509b9a5050505050505050505050565b5f600260089054906101000a90046001600160a01b03166001600160a01b031663233ace116040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a29190612700565b905090565b816107c55760405163cbf4a64560e01b815260040160405180910390fd5b600481818111156107d8576107d8611e2c565b60ff1611156107fa576040516307a92f1960e51b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b031661083457604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610862576040516282b42960e81b815260040160405180910390fd5b805460ff166108718184611bae565b61088e576040516307a92f1960e51b815260040160405180910390fd5b81548390839060ff191660018360048111156108ac576108ac611e2c565b021790555060018360048111156108c5576108c5611e2c565b0361091c575f8260050154426108db9190612717565b6006840181905560405181815290915085907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505b837f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c828560405161094e92919061272a565b60405180910390a250505050565b6002546001600160a01b0382165f90815260016020526040812054909161099f9164010000000090910463ffffffff1690309085906001600160401b03166118a5565b92915050565b816109c35760405163cbf4a64560e01b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b03166109fd57604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610a2b576040516282b42960e81b815260040160405180910390fd5b610a386020830183612745565b6009811115610a4957610a49611e2c565b601182015460ff166009811115610a6257610a62611e2c565b14610a805760405163f37f7b5d60e01b815260040160405180910390fd5b601281015460208301351015610aa957604051634f9233a560e01b815260040160405180910390fd5b6040820135610acb57604051635e32eadd60e01b815260040160405180910390fd5b610ad860608301836125d1565b90505f03610af957604051630f8b932160e11b815260040160405180910390fd5b5f815460ff166004811115610b1057610b10611e2c565b14158015610b3457506003815460ff166004811115610b3157610b31611e2c565b14155b15610b52576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154610b679190612760565b11610b855760405163e843c5eb60e01b815260040160405180910390fd5b6020820135601282015560408201356013820155610ba660608301836125d1565b6014830191610bb691908361241f565b50827f35947a8913e2156f19b018078c9f0667e49cb3dc24af3434a4d0b16b82675b1b6040840135610beb60608601866125d1565b8660200135604051610c00949392919061279b565b60405180910390a2505050565b610c15611ccc565b5f828152602081905260409081902081516101c081019092528054829060ff166004811115610c4657610c46611e2c565b6004811115610c5757610c57611e2c565b8152815461010090046001600160a01b03166020808301919091526040805180820182526001850154815260028501548184015281840152600384015460608401526004840180548251818502810185019093528083526080909401939192909190830182828015610ce657602002820191905f5260205f20905b815481526020019060010190808311610cd2575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b82018054610d3b9061238d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d679061238d565b8015610db25780601f10610d8957610100808354040283529160200191610db2565b820191905f5260205f20905b815481529060010190602001808311610d9557829003601f168201915b5050509183525050604080516101008082018352600c85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600d860154608080850191909152600e87015460a0850152600f87015460c0850152601087015460e08501529085019290925282519182018352601185018054939094019391928391166009811115610e5a57610e5a611e2c565b6009811115610e6b57610e6b611e2c565b81526020016001820154815260200160028201548152602001600382018054610e939061238d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ebf9061238d565b8015610f0a5780601f10610ee157610100808354040283529160200191610f0a565b820191905f5260205f20905b815481529060010190602001808311610eed57829003601f168201915b5050509190925250505090525092915050565b84610f3b5760405163cbf4a64560e01b815260040160405180910390fd5b5f858152602081905260409020805461010090046001600160a01b0316610f7557604051634d36eb6960e01b815260040160405180910390fd5b6001815460ff166004811115610f8d57610f8d611e2c565b14610fab576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154610fc09190612760565b1115610fdf5760405163e843c5eb60e01b815260040160405180910390fd5b600354604051635c73957b60e11b81526001600160a01b039091169063b8e72af6906110159088908890889088906004016127c5565b5f6040518083038186803b15801561102b575f5ffd5b505afa15801561103d573d5f5f3e3d5ffd5b505f9250611050915050838501856127f6565b600383015481519192501461107857604051630b6fac0360e41b815260040160405180910390fd5b5f61108560016009612717565b6001600160401b0381111561109c5761109c6123bf565b6040519080825280602002602001820160405280156110c5578160200160208202803683370190505b50905060015b600981101561111a578281600981106110e6576110e6612872565b6020020151826110f7600184612717565b8151811061110757611107612872565b60209081029190910101526001016110cb565b50825460ff191660049081178455815161113b918501906020840190611db8565b50877f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c6001600460405161117092919061272a565b60405180910390a2336001600160a01b0316887f5da8009aeb11de7ef64598b0de897a03d2f93efabda8507a70e29cca4530cf5d836040516111b29190612886565b60405180910390a35050505050505050565b5f8181526020819052604080822081516101c08101909252805483929190829060ff1660048111156111f8576111f8611e2c565b600481111561120957611209611e2c565b8152815461010090046001600160a01b0316602080830191909152604080518082018252600185015481526002850154818401528184015260038401546060840152600484018054825181850281018501909352808352608090940193919290919083018282801561129857602002820191905f5260205f20905b815481526020019060010190808311611284575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b820180546112ed9061238d565b80601f01602080910402602001604051908101604052809291908181526020018280546113199061238d565b80156113645780601f1061133b57610100808354040283529160200191611364565b820191905f5260205f20905b81548152906001019060200180831161134757829003601f168201915b5050509183525050604080516101008082018352600c85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600d860154608080850191909152600e87015460a0850152600f87015460c0850152601087015460e0850152908501929092528251918201835260118501805493909401939192839116600981111561140c5761140c611e2c565b600981111561141d5761141d611e2c565b815260200160018201548152602001600282015481526020016003820180546114459061238d565b80601f01602080910402602001604051908101604052809291908181526020018280546114719061238d565b80156114bc5780601f10611493576101008083540402835291602001916114bc565b820191905f5260205f20905b81548152906001019060200180831161149f57829003601f168201915b5050505050815250508152505090508060c001518160a001516114df9190612760565b9392505050565b816115045760405163cbf4a64560e01b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b031661153e57604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b0316331461156c576040516282b42960e81b815260040160405180910390fd5b805460ff165f81600481111561158457611584611e2c565b141580156115a4575060038160048111156115a1576115a1611e2c565b14155b156115c2576040516307a92f1960e51b815260040160405180910390fd5b600582015460068301548415806115e25750426115df8684612760565b11155b806115ff57506115f28183612760565b6115fc8684612760565b11155b1561161d57604051637616640160e01b815260040160405180910390fd5b6006840185905560405185815286907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505050505050565b8461167f5760405163cbf4a64560e01b815260040160405180910390fd5b5f858152602081905260409020805461010090046001600160a01b03166116b957604051634d36eb6960e01b815260040160405180910390fd5b5f815460ff1660048111156116d0576116d0611e2c565b146116ee576040516307a92f1960e51b815260040160405180910390fd5b42816006015482600501546117039190612760565b116117215760405163e843c5eb60e01b815260040160405180910390fd5b600254604051635c73957b60e11b8152600160401b9091046001600160a01b03169063b8e72af69061175d9088908890889088906004016127c5565b5f6040518083038186803b158015611773575f5ffd5b505afa158015611785573d5f5f3e3d5ffd5b505f9250611798915050838501856127f6565b60038301548151919250146117c057604051630b6fac0360e41b815260040160405180910390fd5b6020810151600383015560408101516007830180545f906117e2908490612760565b909155505060608101516008830180545f906117ff908490612760565b9091555050600a82018054905f611815836128c8565b9091555050602080820151604051908152339189917fdc9b2774f92abfeee93d8b2ef67d59cd90c2d6d740b01c24fd9ec109a71865fc910160405180910390a350505050505050565b6003546040805163233ace1160e01b815290515f926001600160a01b03169163233ace119160048083019260209291908290030181865afa15801561077e573d5f5f3e3d5ffd5b6040805160e095861b6001600160e01b031990811660208084019190915260609690961b6bffffffffffffffffffffffff1916602483015282516018818403018152603890920183528151919095012090941b90921668010000000000000000600160e01b039190931b16919091176001600160401b039091161790565b5f878152602081905260409020546001600160a01b03808816610100909204160361196157604051635040c4d360e11b815260040160405180910390fd5b61197160608301604084016128e0565b60ff1615806119925750600861198d60608401604085016128e0565b60ff16115b156119b05760405163ac38930b60e01b815260040160405180910390fd5b61ffff8260c0013511156119d757604051634dba795160e01b815260040160405180910390fd5b81608001358260a001351115611a005760405163207ea56d60e01b815260040160405180910390fd5b8160c001358260e001351115611a2957604051636d403ec760e11b815260040160405180910390fd5b6009611a386020830183612745565b6009811115611a4957611a49611e2c565b60ff161115611a6b5760405163f37f7b5d60e01b815260040160405180910390fd5b80602001355f03611a8f57604051634f9233a560e01b815260040160405180910390fd5b6040810135611ab157604051635e32eadd60e01b815260040160405180910390fd5b611abe60608201826125d1565b90505f03611adf57604051630f8b932160e11b815260040160405180910390fd5b60048581811115611af257611af2611e2c565b60ff161180611b2f57505f856004811115611b0f57611b0f611e2c565b14158015611b2f57506003856004811115611b2c57611b2c611e2c565b14155b15611b4d576040516307a92f1960e51b815260040160405180910390fd5b425f859003611b5a578094505b80851015611b7b57604051632ca4094f60e21b815260040160405180910390fd5b80611b868587612760565b11611ba457604051637616640160e01b815260040160405180910390fd5b5050505050505050565b5f826004811115611bc157611bc1611e2c565b826004811115611bd357611bd3611e2c565b03611bdf57505f61099f565b6002836004811115611bf357611bf3611e2c565b1480611c1057506004836004811115611c0e57611c0e611e2c565b145b80611c2c57506001836004811115611c2a57611c2a611e2c565b145b15611c3857505f61099f565b5f836004811115611c4b57611c4b611e2c565b03611ca55760035b826004811115611c6557611c65611e2c565b1480611c8257506002826004811115611c8057611c80611e2c565b145b80611c9e57506001826004811115611c9c57611c9c611e2c565b145b905061099f565b6003836004811115611cb957611cb9611e2c565b03611cc4575f611c53565b505f92915050565b604080516101c08101909152805f81526020015f6001600160a01b03168152602001611d0960405180604001604052805f81526020015f81525090565b81526020015f8152602001606081526020015f81526020015f81526020015f81526020015f81526020015f81526020015f815260200160608152602001611d906040518061010001604052805f151581526020015f151581526020015f60ff1681526020015f60ff1681526020015f81526020015f81526020015f81526020015f81525090565b8152604080516080810182525f80825260208281018290529282015260608082015291015290565b828054828255905f5260205f20908101928215611df1579160200282015b82811115611df1578251825591602001919060010190611dd6565b50611dfd929150611e01565b5090565b5b80821115611dfd575f8155600101611e02565b5f60208284031215611e25575f5ffd5b5035919050565b634e487b7160e01b5f52602160045260245ffd5b60058110611e5057611e50611e2c565b9052565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b80511515825260208101511515602083015260ff60408201511660408301526060810151611eb5606084018260ff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b5f8151600a8110611ef557611ef5611e2c565b808452506020820151602084015260408201516040840152606082015160806060850152611f266080850182611e54565b949350505050565b611f38818f611e40565b6001600160a01b038d166020820152611f5e604082018d80518252602090810151910152565b8a60808201528960a08201528860c08201528760e08201528661010082015285610120820152846101408201526102a06101608201525f611fa36102a0830186611e54565b611fb1610180840186611e82565b828103610280840152611fc48185611ee2565b9150509e9d5050505050505050505050505050565b803560058110611fe7575f5ffd5b919050565b5f60808284031215611ffc575f5ffd5b50919050565b5f5f83601f840112612012575f5ffd5b5081356001600160401b03811115612028575f5ffd5b60208301915083602082850101111561203f575f5ffd5b9250929050565b5f60408284031215611ffc575f5ffd5b5f5f5f5f5f5f5f5f5f898b03610200811215612070575f5ffd5b6120798b611fd9565b995060208b0135985060408b01359750610100605f198201121561209b575f5ffd5b5060608a0195506101608a01356001600160401b038111156120bb575f5ffd5b6120c78c828d01611fec565b9550506101808a01356001600160401b038111156120e3575f5ffd5b6120ef8c828d01612002565b909550935061210490508b6101a08c01612046565b989b979a5095989497939692955090936101e00135919050565b5f5f6040838503121561212f575f5ffd5b8235915061213f60208401611fd9565b90509250929050565b5f60208284031215612158575f5ffd5b81356001600160a01b03811681146114df575f5ffd5b5f5f6040838503121561217f575f5ffd5b8235915060208301356001600160401b0381111561219b575f5ffd5b6121a785828601611fec565b9150509250929050565b5f8151808452602084019350602083015f5b828110156121e15781518652602095860195909101906001016121c3565b5093949350505050565b602081526121fd602082018351611e40565b5f602083015161221860408401826001600160a01b03169052565b506040830151805160608401526020810151608084015250606083015160a083015260808301516102c060c08401526122556102e08401826121b1565b905060a084015160e084015260c084015161010084015260e0840151610120840152610100840151610140840152610120840151610160840152610140840151610180840152610160840151601f19848303016101a08501526122b88282611e54565b9150506101808401516122cf6101c0850182611e82565b506101a0840151838203601f19016102c08501526122ed8282611ee2565b95945050505050565b5f5f5f5f5f6060868803121561230a575f5ffd5b8535945060208601356001600160401b03811115612326575f5ffd5b61233288828901612002565b90955093505060408601356001600160401b03811115612350575f5ffd5b61235c88828901612002565b969995985093965092949392505050565b5f5f6040838503121561237e575f5ffd5b50508035926020909101359150565b600181811c908216806123a157607f821691505b602082108103611ffc57634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f82111561241a57805f5260205f20601f840160051c810160208510156123f85750805b601f840160051c820191505b81811015612417575f8155600101612404565b50505b505050565b6001600160401b03831115612436576124366123bf565b61244a83612444835461238d565b836123d3565b5f601f84116001811461247b575f85156124645750838201355b5f19600387901b1c1916600186901b178355612417565b5f83815260208120601f198716915b828110156124aa578685013582556020948501946001909201910161248a565b50868210156124c6575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f8135801515811461099f575f5ffd5b60ff811681146124f6575f5ffd5b50565b5f813561099f816124e8565b61250e826124d8565b151560ff1982541660ff821681178355505061254961252f602084016124d8565b82805461ff00191691151560081b61ff0016919091179055565b612570612558604084016124f9565b825462ff0000191660109190911b62ff000016178255565b61259961257f606084016124f9565b825463ff000000191660189190911b63ff00000016178255565b6080820135600182015560a0820135600282015560c0820135600382015560e090910135600490910155565b600a81106124f6575f5ffd5b5f5f8335601e198436030181126125e6575f5ffd5b8301803591506001600160401b038211156125ff575f5ffd5b60200191503681900382131561203f575f5ffd5b813561261e816125c5565b600a811061262e5761262e611e2c565b815460ff191660ff9190911617815560208201356001820155604082013560028201556060820135601e1936849003018112612668575f5ffd5b820180356001600160401b0381111561267f575f5ffd5b602082019150803603821315612693575f5ffd5b6126a181836003860161241f565b50505050565b634e487b7160e01b5f52601160045260245ffd5b5f63ffffffff821663ffffffff81036126d6576126d66126a7565b60010192915050565b5f6001600160401b0382166001600160401b0381036126d6576126d66126a7565b5f60208284031215612710575f5ffd5b5051919050565b8181038181111561099f5761099f6126a7565b604081016127388285611e40565b6114df6020830184611e40565b5f60208284031215612755575f5ffd5b81356114df816125c5565b8082018082111561099f5761099f6126a7565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b848152606060208201525f6127b4606083018587612773565b905082604083015295945050505050565b604081525f6127d8604083018688612773565b82810360208401526127eb818587612773565b979650505050505050565b5f6101208284031215612807575f5ffd5b82601f830112612815575f5ffd5b60405161012081018181106001600160401b0382111715612838576128386123bf565b6040528061012084018581111561284d575f5ffd5b845b8181101561286757803583526020928301920161284f565b509195945050505050565b634e487b7160e01b5f52603260045260245ffd5b602080825282518282018190525f918401906040840190835b818110156128bd57835183526020938401939092019160010161289f565b509095945050505050565b5f600182016128d9576128d96126a7565b5060010190565b5f602082840312156128f0575f5ffd5b81356114df816124e856fea26469706673582212209b7a1c107e3e06f6787609af368d4d4c2f904a612424cdbf3992d8a459b004fe64736f6c634300081c0033";

type ProcessRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProcessRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProcessRegistry__factory extends ContractFactory {
  constructor(...args: ProcessRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    );
  }
  override deploy(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    ) as Promise<
      ProcessRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProcessRegistry__factory {
    return super.connect(runner) as ProcessRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProcessRegistryInterface {
    return new Interface(_abi) as ProcessRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProcessRegistry {
    return new Contract(address, _abi, runner) as unknown as ProcessRegistry;
  }
}
