/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  StateTransitionVerifierBaseGroth16,
  StateTransitionVerifierBaseGroth16Interface,
} from "../../../src/verifiers/StateTransitionVerifierBaseGroth16";

const _abi = [
  {
    inputs: [],
    name: "CommitmentInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611ae28061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063b1c3a00e14610046578063d148354c14610071578063e33974a814610086575b600080fd5b610059610054366004611857565b610099565b604051610068939291906118a0565b60405180910390f35b61008461007f366004611914565b610122565b005b610084610094366004611970565b6105c8565b6100a16117bb565b6100a96117d9565b60006100be86358760015b6020020135610b34565b83526100dc6060870135604088013560a089013560808a0135610c29565b602085015260408401526100f660c08701358760076100b4565b606084015261010885358660016100b4565b825261011784358560016100b4565b905093509350939050565b61012a6117d9565b6040805160018082528183019092526060916020808301908036833701905050905060208082019060408501823750604051600080516020611a8d83398151915290610182908735906020808a0135918691016119d0565b6040516020818303038152906040528051906020012060001c6101a59190611a29565b8252604080516000918782377f30148ac98b38340ea3df7b2509421876d539c8d5a706e7418eb9c728518a919360408201527f05bc72d03ceb815239658bcf5285402acd0d63357239203015f6a39404cb837a60608201527f16902c490644f39ddb873f9be2a10c284244bab8ea9330a9313b1b2e2364351e60808201527f2a7029abbcaa3c273b979a89d05eb591eb1caa0d3880ca07461cb0e8d8205f3b60a082015260408660c08301377f1c64fbbe2d9aa3a90be62835ae2936ad08e04bb7925f46cd6495adca928659566101008201527f296138b16b75bde18f26b066ee934b9575cec93bc695c4a10b2cfa659ef14c4d6101208201527f055bb3fb7b1d161c9f33d5f0c268f9916448c6d62abc708ae359aff9bbc544396101408201527f136109e307d864dc8c393ca3b91d1fbf35cc3cfd079bbb4f1672db0d2718c5796101608201526020816101808360085afa90511690508061031b576040516351d49ff760e11b815260040160405180910390fd5b60008061035286868a6002806020026040519081016040528092919082600260200280828437600092019190915250610f20915050565b915091506040516101008a82377f1f2cf3298acd35aba9cb486fe25a070e72565ef4a08b557fa2e6717b975921c06101008201527f1dc8c59979445fb67e3607f2a45d6650becf0587eba624cec4e9647e030f23ce6101208201527f13c10bef2c37665ef80a0a86397567ab58577ff4577b7b372d4234c80530117c6101408201527f0ac67e124b75d98fa4dbec1caa88681d975b5f2337e7a7a4674bb20878aa646f6101608201527f20195bf4fbf643a922f27614fdce693f08e5f86aa68483a8a38e34acc907b19b6101808201527f28d89faa6e3df77f037f448b6b76110e4c25f23d5bbe3dd267cb10a331cf128a6101a08201527f199a5b9949c90c2646393a47c94abefa06ae0d0a986d36bf5f0856d09b0123d96101c08201527f21c8b48ccb59951a65fd47ca5600ee14867f4589f1096b2b7a3968554702ec496101e08201527f2f9bd41fd911f1dcfa7ab79f906a4321d52178bece597203b61af9ec130570386102008201527f0260760c30e0f4d243cbdeaa8a547c83f592cbde53d4edc81b36769008ec902261022082015282610240820152816102608201527f1eb53983464946dee0e6f63bf8c8e09c3074b13bb39e05afadde10c888c4ffc46102808201527f199e5ee8a9ff9936e30c980707630d7403b5d522538b3abc74bdf5499ec87e9f6102a08201527f16bf9e1aa0934c7caf48d2d75a42dabc860bb4140420a9840001926c6b6e6f076102c08201527f104d998f3c42185167c76bfb38ce79a6925d54b1767c4010cac5be6cc86a61e86102e08201526020816103008360085afa9051169250826105bd57604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050565b6105d06117d9565b6105d86117f7565b6105e0611815565b6105f18660005b6020020135611265565b6020840152825260008061060487611265565b6040805160018082528183019092529294509092506060919060208083019080368337019050509050602080820190604089018237508451602080870151604051600080516020611a8d83398151915293610664939092918691016119d0565b6040516020818303038152906040528051906020012060001c6106879190611a29565b865284518452602085810151858201527f30148ac98b38340ea3df7b2509421876d539c8d5a706e7418eb9c728518a91936040808701919091527f05bc72d03ceb815239658bcf5285402acd0d63357239203015f6a39404cb837a60608701527f16902c490644f39ddb873f9be2a10c284244bab8ea9330a9313b1b2e2364351e60808701527f2a7029abbcaa3c273b979a89d05eb591eb1caa0d3880ca07461cb0e8d8205f3b60a087015260c0860185905260e086018490527f1c64fbbe2d9aa3a90be62835ae2936ad08e04bb7925f46cd6495adca928659566101008701527f296138b16b75bde18f26b066ee934b9575cec93bc695c4a10b2cfa659ef14c4d6101208701527f055bb3fb7b1d161c9f33d5f0c268f9916448c6d62abc708ae359aff9bbc544396101408701527f136109e307d864dc8c393ca3b91d1fbf35cc3cfd079bbb4f1672db0d2718c57961016087015251600091816101808860085afa90511690508061080d576040516351d49ff760e11b815260040160405180910390fd5b5050505060008061082a896000600481106105e7576105e76119ba565b9092509050600080808061084660408e013560208f013561130b565b9296509094509250905060008061085e8f60036105e7565b915091506000806108708e8e8e610f20565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f1f2cf3298acd35aba9cb486fe25a070e72565ef4a08b557fa2e6717b975921c06101008e01527f1dc8c59979445fb67e3607f2a45d6650becf0587eba624cec4e9647e030f23ce6101208e01527f13c10bef2c37665ef80a0a86397567ab58577ff4577b7b372d4234c80530117c6101408e01527f0ac67e124b75d98fa4dbec1caa88681d975b5f2337e7a7a4674bb20878aa646f6101608e01527f20195bf4fbf643a922f27614fdce693f08e5f86aa68483a8a38e34acc907b19b6101808e01527f28d89faa6e3df77f037f448b6b76110e4c25f23d5bbe3dd267cb10a331cf128a6101a08e01527f199a5b9949c90c2646393a47c94abefa06ae0d0a986d36bf5f0856d09b0123d96101c08e01527f21c8b48ccb59951a65fd47ca5600ee14867f4589f1096b2b7a3968554702ec496101e08e01527f2f9bd41fd911f1dcfa7ab79f906a4321d52178bece597203b61af9ec130570386102008e01527f0260760c30e0f4d243cbdeaa8a547c83f592cbde53d4edc81b36769008ec90226102208e01526102408d018290526102608d018190527f1eb53983464946dee0e6f63bf8c8e09c3074b13bb39e05afadde10c888c4ffc46102808e01527f199e5ee8a9ff9936e30c980707630d7403b5d522538b3abc74bdf5499ec87e9f6102a08e01527f16bf9e1aa0934c7caf48d2d75a42dabc860bb4140420a9840001926c6b6e6f076102c08e01527f104d998f3c42185167c76bfb38ce79a6925d54b1767c4010cac5be6cc86a61e86102e08e015290925090506000610ae56117d9565b6020816103008f60085afa9150811580610b0157508051600114155b15610b1f57604051631ff3747d60e21b815260040160405180910390fd5b50505050505050505050505050505050505050565b6000600080516020611a6d83398151915283101580610b615750600080516020611a6d8339815191528210155b15610b7f57604051631ff3747d60e21b815260040160405180910390fd5b82158015610b8b575081155b15610b9857506000610c23565b6000610bd7600080516020611a6d8339815191526003600080516020611a6d83398151915287600080516020611a6d833981519152898a0909086114f1565b9050808303610bec575050600182901b610c23565b610bf581611555565b8303610c08575050600182811b17610c23565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b600080600080516020611a6d83398151915286101580610c575750600080516020611a6d8339815191528510155b80610c705750600080516020611a6d8339815191528410155b80610c895750600080516020611a6d8339815191528310155b15610ca757604051631ff3747d60e21b815260040160405180910390fd5b82848688171717600003610cc057506000905080610f17565b60008080600080516020611a6d833981519152610cec6003600080516020611a6d833981519152611a4b565b600080516020611a6d8339815191528a8c090990506000600080516020611a6d8339815191528a600080516020611a6d8339815191528c8d090990506000600080516020611a6d8339815191528a600080516020611a6d8339815191528c8d09099050600080516020611a6d83398151915280600080516020611a6d8339815191528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089450610de5600080516020611a6d83398151915280600080516020611a6d8339815191528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611555565b9350505050600080610e36600080516020611a6d83398151915280610e0c57610e0c611a13565b600080516020611a6d833981519152858609600080516020611a6d833981519152878809086114f1565b9050610e83600080516020611a6d8339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611a6d8339815191528488080961156e565b15915050610e928383836115b8565b90935091508683148015610ea557508186145b15610ecf5780610eb6576000610eb9565b60025b60ff1660028a901b176000179450879350610f13565b610ed883611555565b87148015610eed5750610eea82611555565b86145b15610c085780610efe576000610f01565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b6000806000600190506040516040810160007f0fcbbb8f45abfbac0c0209e9ed5ddeecc15acdf5c3a920bfd34914d4107f530883527f0bee7a252ef256aff979a2e139b7bb1eef53a0bf161c90904124fcb1b6ba577c6020840152865182526020870151602083015260408360808560065afa841693507f19cc345ec89904961764fe85e4465dddecbd818e6d6473c4f5f5d72fd8070bb782527f0580970b7f146e488d8ac43fcb73331a32fbffb1d7542e1ded1a37cd1661275f602083015288359050806040830152600080516020611a8d83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f0f88839a5995a7aef2c06bd4bdc86d21edc1fd3839357f514cdaa135341335c482527f152a5984304a9c7dc136f9d2bb1eab16f36c817ea5b566b5c8d14d5a9cde6e1c602083015260208901359050806040830152600080516020611a8d83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f2e146a2a3be78bf1c2d98a48f47b847a349b8ebdb8b5ffadf08b2f330c95930982527e7264d883d77beb76d9b6efacc0176a681f9c44d0724327ef6e3adad7666b0e602083015260408901359050806040830152600080516020611a8d83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f1b875431ffa5a64a3c8eba3c39d2c1e7d0609e3e78403e3d6aa13619ea5de42282527f0da8fa1460e8120941c216cab387d138813c94b6c880e5f37ccf0ecda5a4f5bb602083015260608901359050806040830152600080516020611a8d83398151915281108416935060408260608460075afa8416935060408360808560065afa7f0fda093354ec5350fd7b7dc9b464e5439f752955ba4e5046ff92edcc79429c7283527f25b35c53ea73bc4860479561349b53d4301501ed1c32b9f31321d92029895b15602084015288516040808501829052600080516020611a8d83398151915290911091909516169390508160608160075afa831692505060408160808360065afa8151602090920151919450909250168061125c5760405163a54f8e2760e01b815260040160405180910390fd5b50935093915050565b6000808260000361127b57506000928392509050565b600183811c925080841614600080516020611a6d83398151915283106112b457604051631ff3747d60e21b815260040160405180910390fd5b6112f1600080516020611a6d8339815191526003600080516020611a6d83398151915286600080516020611a6d83398151915288890909086114f1565b915080156113055761130282611555565b91505b50915091565b60008080808515801561131c575084155b15611332575060009250829150819050806114e8565b600286811c94508593506001808816149080881614600080516020611a6d833981519152861015806113725750600080516020611a6d8339815191528510155b1561139057604051631ff3747d60e21b815260040160405180910390fd5b6000600080516020611a6d8339815191526113ba6003600080516020611a6d833981519152611a4b565b600080516020611a6d833981519152888a090990506000600080516020611a6d83398151915288600080516020611a6d8339815191528a8b090990506000600080516020611a6d83398151915288600080516020611a6d8339815191528a8b09099050600080516020611a6d83398151915280600080516020611a6d8339815191528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50896506114b3600080516020611a6d83398151915280600080516020611a6d8339815191528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611555565b95506114c08787866115b8565b909750955084156114e2576114d487611555565b96506114df86611555565b95505b50505050505b92959194509250565b600061151d827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526116f6565b905081600080516020611a6d8339815191528283091461155057604051631ff3747d60e21b815260040160405180910390fd5b919050565b600080516020611a6d8339815191529081900681030690565b60008061159b837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526116f6565b905082600080516020611a6d833981519152828309149392505050565b600080806115ea600080516020611a6d83398151915280878809600080516020611a6d833981519152898a09086114f1565b905083156115fe576115fb81611555565b90505b611649600080516020611a6d8339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611a6d833981519152848a08096114f1565b9250600080516020611a6d833981519152611675600080516020611a6d8339815191526002860961175b565b86099150600080516020611a6d8339815191526116a2600080516020611a6d833981519152848509611555565b600080516020611a6d83398151915285860908861415806116d85750600080516020611a6d833981519152808385096002098514155b1561125c57604051631ff3747d60e21b815260040160405180910390fd5b6000806040516020815260208082015260206040820152846060820152836080820152600080516020611a6d83398151915260a082015260208160c08360055afa90519250905080610c2157604051631ff3747d60e21b815260040160405180910390fd5b6000611787827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd456116f6565b9050600080516020611a6d83398151915281830960011461155057604051631ff3747d60e21b815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b806101008101831015610c2357600080fd5b8060408101831015610c2357600080fd5b6000806000610180848603121561186d57600080fd5b6118778585611834565b9250611887856101008601611846565b9150611897856101408601611846565b90509250925092565b60c08101818560005b60048110156118c85781518352602092830192909101906001016118a9565b505050608082018460005b60018110156118f25781518352602092830192909101906001016118d3565b5050508260a0830152949350505050565b8060808101831015610c2357600080fd5b600080600080610200858703121561192b57600080fd5b6119358686611834565b9350611945866101008701611846565b9250611955866101408701611846565b9150611965866101808701611903565b905092959194509250565b600080600080610140858703121561198757600080fd5b6119918686611903565b935060a08501868111156119a457600080fd5b6080860193503591506119658660c08701611903565b634e487b7160e01b600052603260045260246000fd5b83815282602082015260006040820183516020850160005b82811015611a065781518452602093840193909101906001016119e8565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611a4657634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610c2357634e487b7160e01b600052601160045260246000fdfe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212204235afa6ff3b9f8404a8a1efd7dac70394b52c3600268c5ddbe729b74c52712464736f6c634300081c0033";

type StateTransitionVerifierBaseGroth16ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StateTransitionVerifierBaseGroth16ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StateTransitionVerifierBaseGroth16__factory extends ContractFactory {
  constructor(...args: StateTransitionVerifierBaseGroth16ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StateTransitionVerifierBaseGroth16 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StateTransitionVerifierBaseGroth16__factory {
    return super.connect(runner) as StateTransitionVerifierBaseGroth16__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StateTransitionVerifierBaseGroth16Interface {
    return new Interface(_abi) as StateTransitionVerifierBaseGroth16Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StateTransitionVerifierBaseGroth16 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StateTransitionVerifierBaseGroth16;
  }
}
