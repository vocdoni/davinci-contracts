/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OrganizationRegistry,
  OrganizationRegistryInterface,
} from "../../src/OrganizationRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyAdministrator",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMetadataURI",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOrganizationID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOrganizationName",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAdministrator",
    type: "error",
  },
  {
    inputs: [],
    name: "OrganizationAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "OrganizationNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "administrator",
        type: "address",
      },
    ],
    name: "AdministratorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "administrator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "remover",
        type: "address",
      },
    ],
    name: "AdministratorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "OrganizationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "OrganizationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "address",
        name: "administrator",
        type: "address",
      },
    ],
    name: "addAdministrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "administrators",
        type: "address[]",
      },
    ],
    name: "createOrganization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "deleteOrganization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "getOrganization",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "administrators",
            type: "address[]",
          },
        ],
        internalType: "struct IOrganizationRegistry.Organization",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAdministrator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "organizationCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "organizations",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "address",
        name: "administrator",
        type: "address",
      },
    ],
    name: "removeAdministrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "updateOrganization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b503380603357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b603a81603f565b50608e565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114a68061009b5f395ff3fe608060405234801561000f575f5ffd5b50600436106100cb575f3560e01c80637acbb8af11610088578063d2c30a6d11610063578063d2c30a6d1461019f578063f1c62104146101bf578063f2fde38b146101e4578063f6a3d24e146101f7575f5ffd5b80637acbb8af1461014f5780638da5cb5b14610162578063c1af6e031461017c575f5ffd5b80631c2e3d82146100cf5780633c10eee5146100e45780635a1f7406146100f75780636cca67bf14610121578063715018a61461013457806375f1373f1461013c575b5f5ffd5b6100e26100dd366004610fbb565b61020a565b005b6100e26100f2366004610fbb565b610378565b61010a610105366004610fec565b61058e565b60405161011892919061103a565b60405180910390f35b6100e261012f3660046110ac565b6106b5565b6100e26107cc565b6100e261014a36600461112c565b6107df565b6100e261015d366004610fec565b610a1a565b5f546040516001600160a01b039091168152602001610118565b61018f61018a366004610fbb565b610af9565b6040519015158152602001610118565b6101b26101ad366004610fec565b610c0d565b60405161011891906111fc565b6002546101cf9063ffffffff1681565b60405163ffffffff9091168152602001610118565b6100e26101f2366004610fec565b610dd9565b61018f610205366004610fec565b610e1b565b336001600160a01b03831614610232576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0382165f90815260016020526040812080546102549061128d565b90501161027457604051639551f8b360e01b815260040160405180910390fd5b6001600160a01b03811661029b5760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b0382165f908152600160205260408120600201905b815481101561031657826001600160a01b03168282815481106102dc576102dc6112c5565b5f918252602090912001546001600160a01b03160361030e5760405163b598ce3d60e01b815260040160405180910390fd5b6001016102b7565b5080546001810182555f8281526020812090910180546001600160a01b0319166001600160a01b038581169182179092556040519092918616917fa2f792d5cab45450daed47916f25d9bd3443d275c51ecbccfbeb727a3b4eda0e91a3505050565b8161038281610e4a565b61039f5760405163e85bbb2160e01b815260040160405180910390fd5b336001600160a01b038416146103b3573391505b6001600160a01b0383165f90815260016020526040812080546103d59061128d565b9050116103f557604051639551f8b360e01b815260040160405180910390fd5b6001600160a01b03821661041c5760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b0383165f908152600160205260408120600201815b815481101561052e57846001600160a01b031682828154811061045d5761045d6112c5565b5f918252602090912001546001600160a01b0316036105265781546001935082906104899085906112ed565b81548110610499576104996112c5565b905f5260205f20015f9054906101000a90046001600160a01b03168282815481106104c6576104c66112c5565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055508180548061050157610501611300565b5f8281526020902081015f1990810180546001600160a01b031916905501905561052e565b600101610438565b508161054d5760405163e85bbb2160e01b815260040160405180910390fd5b60405133906001600160a01b0386811691908816907f9312053150f18090e219209afedf7c42617a23f1202a19d2289891a2aa6d7fd7905f90a45050505050565b60016020525f90815260409020805481906105a89061128d565b80601f01602080910402602001604051908101604052809291908181526020018280546105d49061128d565b801561061f5780601f106105f65761010080835404028352916020019161061f565b820191905f5260205f20905b81548152906001019060200180831161060257829003601f168201915b5050505050908060010180546106349061128d565b80601f01602080910402602001604051908101604052809291908181526020018280546106609061128d565b80156106ab5780601f10610682576101008083540402835291602001916106ab565b820191905f5260205f20905b81548152906001019060200180831161068e57829003601f168201915b5050505050905082565b846106bf81610e4a565b6106dc5760405163e85bbb2160e01b815260040160405180910390fd5b836106fa57604051631b0b678d60e31b815260040160405180910390fd5b8161071857604051630eec403f60e41b815260040160405180910390fd5b6001600160a01b0386165f908152600160205260408120805461073a9061128d565b90501161075a57604051639551f8b360e01b815260040160405180910390fd5b6001600160a01b0386165f9081526001602052604090208061077d868883611374565b506001810161078d848683611374565b5060405133906001600160a01b038916907fdcd663553eb7f5f57b83637c17d95d22a764affd6dbcc98f8ce9dcbac3e239f6905f90a350505050505050565b6107d4610ebf565b6107dd5f610eeb565b565b33856107fe57604051631b0b678d60e31b815260040160405180910390fd5b6001600160a01b0381165f90815260016020526040902080546108209061128d565b159050610840576040516369c24f0b60e01b815260040160405180910390fd5b6001600160a01b0381165f90815260016020526040902080610863888a83611374565b5060018101610873868883611374565b508215610979575f5b83811015610977575f858583818110610897576108976112c5565b90506020020160208101906108ac9190610fec565b6001600160a01b0316036108d35760405163e6c4247b60e01b815260040160405180910390fd5b826001600160a01b03168585838181106108ef576108ef6112c5565b90506020020160208101906109049190610fec565b6001600160a01b03161461096f5781600201858583818110610928576109286112c5565b905060200201602081019061093d9190610fec565b81546001810183555f928352602090922090910180546001600160a01b0319166001600160a01b039092169190911790555b60010161087c565b505b600281810180546001810182555f918252602082200180546001600160a01b0319166001600160a01b038616179055815463ffffffff1691906109bb8361142e565b91906101000a81548163ffffffff021916908363ffffffff16021790555050816001600160a01b03167f47b688936cae1ca5de00ac709e05309381fb9f18b4c5adb358a5b542ce67caea60405160405180910390a25050505050505050565b6001600160a01b0381165f9081526001602052604081208054610a3c9061128d565b905011610a5c57604051639551f8b360e01b815260040160405180910390fd5b336001600160a01b03821614610a84576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0381165f90815260016020526040812090610aa68282610f3a565b610ab3600183015f610f3a565b610ac0600283015f610f71565b50506002805463ffffffff16905f610ad783611452565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6001600160a01b0382165f9081526001602052604081208054829190610b1e9061128d565b905011610b3e57604051639551f8b360e01b815260040160405180910390fd5b6001600160a01b0383165f90815260016020908152604080832060020180548251818502810185019093528083529192909190830182828015610ba857602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610b8a575b509394505f93505050505b8151811015610c0157836001600160a01b0316828281518110610bd857610bd86112c5565b60200260200101516001600160a01b031603610bf957600192505050610c07565b600101610bb3565b505f9150505b92915050565b610c3160405180606001604052806060815260200160608152602001606081525090565b6001600160a01b0382165f9081526001602052604090819020815160608101909252805482908290610c629061128d565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8e9061128d565b8015610cd95780601f10610cb057610100808354040283529160200191610cd9565b820191905f5260205f20905b815481529060010190602001808311610cbc57829003601f168201915b50505050508152602001600182018054610cf29061128d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1e9061128d565b8015610d695780601f10610d4057610100808354040283529160200191610d69565b820191905f5260205f20905b815481529060010190602001808311610d4c57829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610dc957602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610dab575b5050505050815250509050919050565b610de1610ebf565b6001600160a01b038116610e0f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b610e1881610eeb565b50565b6001600160a01b0381165f9081526001602052604081208054829190610e409061128d565b9050119050919050565b6001600160a01b0381165f908152600160205260408120600201815b8154811015610eb657336001600160a01b0316828281548110610e8b57610e8b6112c5565b5f918252602090912001546001600160a01b031603610eae575060019392505050565b600101610e66565b505f9392505050565b5f546001600160a01b031633146107dd5760405163118cdaa760e01b8152336004820152602401610e06565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b508054610f469061128d565b5f825580601f10610f55575050565b601f0160209004905f5260205f2090810190610e189190610f88565b5080545f8255905f5260205f2090810190610e1891905b5b80821115610f9c575f8155600101610f89565b5090565b80356001600160a01b0381168114610fb6575f5ffd5b919050565b5f5f60408385031215610fcc575f5ffd5b610fd583610fa0565b9150610fe360208401610fa0565b90509250929050565b5f60208284031215610ffc575f5ffd5b61100582610fa0565b9392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b604081525f61104c604083018561100c565b828103602084015261105e818561100c565b95945050505050565b5f5f83601f840112611077575f5ffd5b50813567ffffffffffffffff81111561108e575f5ffd5b6020830191508360208285010111156110a5575f5ffd5b9250929050565b5f5f5f5f5f606086880312156110c0575f5ffd5b6110c986610fa0565b9450602086013567ffffffffffffffff8111156110e4575f5ffd5b6110f088828901611067565b909550935050604086013567ffffffffffffffff81111561110f575f5ffd5b61111b88828901611067565b969995985093965092949392505050565b5f5f5f5f5f5f60608789031215611141575f5ffd5b863567ffffffffffffffff811115611157575f5ffd5b61116389828a01611067565b909750955050602087013567ffffffffffffffff811115611182575f5ffd5b61118e89828a01611067565b909550935050604087013567ffffffffffffffff8111156111ad575f5ffd5b8701601f810189136111bd575f5ffd5b803567ffffffffffffffff8111156111d3575f5ffd5b8960208260051b84010111156111e7575f5ffd5b60208201935080925050509295509295509295565b602081525f825160606020840152611217608084018261100c565b90506020840151601f19848303016040850152611234828261100c565b6040860151858203601f190160608701528051808352602091820194505f93509101905b808310156112835783516001600160a01b031682526020938401936001939093019290910190611258565b5095945050505050565b600181811c908216806112a157607f821691505b6020821081036112bf57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610c0757610c076112d9565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f82111561136f57805f5260205f20601f840160051c8101602085101561134d5750805b601f840160051c820191505b8181101561136c575f8155600101611359565b50505b505050565b67ffffffffffffffff83111561138c5761138c611314565b6113a08361139a835461128d565b83611328565b5f601f8411600181146113d1575f85156113ba5750838201355b5f19600387901b1c1916600186901b17835561136c565b5f83815260208120601f198716915b8281101561140057868501358255602094850194600190920191016113e0565b508682101561141c575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f63ffffffff821663ffffffff8103611449576114496112d9565b60010192915050565b5f63ffffffff821680611467576114676112d9565b5f19019291505056fea26469706673582212205096a929c68aed395836bb7130f4070b341574015cf909f0d08c490c59ce749d64736f6c634300081c0033";

type OrganizationRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrganizationRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrganizationRegistry__factory extends ContractFactory {
  constructor(...args: OrganizationRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OrganizationRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OrganizationRegistry__factory {
    return super.connect(runner) as OrganizationRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrganizationRegistryInterface {
    return new Interface(_abi) as OrganizationRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OrganizationRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OrganizationRegistry;
  }
}
