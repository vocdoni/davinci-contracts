/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  StateTransitionVerifierGroth16,
  StateTransitionVerifierGroth16Interface,
} from "../../../src/verifiers/StateTransitionVerifierGroth16";

const _abi = [
  {
    inputs: [],
    name: "CommitmentInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provingKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_input",
        type: "bytes",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611ee78061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063233ace111461005c578063b1c3a00e1461008f578063b8e72af6146100b1578063d148354c146100c6578063e33974a8146100d9575b600080fd5b6040517f6e78292593a9d496edd390c83bdb9c37be2a8d46e981efaa45d8a940d00b9d7481526020015b60405180910390f35b6100a261009d366004611995565b6100ec565b60405161008693929190611a07565b6100c46100bf366004611a96565b610175565b005b6100c46100d4366004611b18565b6101f6565b6100c46100e7366004611b74565b61069b565b6100f46118da565b6100fc6118f8565b600061011186358760015b6020020135610c06565b835261012f6060870135604088013560a089013560808a0135610cfb565b6020850152604084015261014960c0870135876007610107565b606084015261015b8535866001610107565b825261016a8435856001610107565b905093509350939050565b60008060006101848787610ff2565b919450925090503063d148354c84848461019e8a8a611023565b6040518563ffffffff1660e01b81526004016101bd9493929190611bf7565b60006040518083038186803b1580156101d557600080fd5b505afa1580156101e9573d6000803e3d6000fd5b5050505050505050505050565b6101fe6118f8565b6040805160018082528183019092526060916020808301908036833701905050905060208082019060408501823750604051600080516020611e9283398151915290610256908735906020808a013591869101611c56565b6040516020818303038152906040528051906020012060001c6102799190611caf565b8252604080516000918782377f0ceb9e454064cc92ede2b2c137e80af097c84957b0e24582e45d5ef8e31a635760408201527f301814d4147e862bcb19187fd535a0f4f34918fa74c2b85db36d3c41a4df78a560608201527f15f470582be3595277f254a39876b70a20d617ccd22e07027f24602273ee13b660808201527f2c6b8ce7e274809d24a7febb3579bf6bc90534572e891f251046e0df346ac06260a082015260408660c08301377f20dbc27e44fa52de05e8b2a6bd29762751e73b6a3496f9a31c2930f693e417536101008201527f2facc43d3073cd5d765e14fe1a9c80170b91f2d65fc6e8de1c8b652050c4c4b36101208201527f0cb14253bf645d0ba9b4b6f79a12629e4ddd29dbafbb156f66ebfc5dd257d27e6101408201527f1d45966458cf2aab7bdbb741f3ef5d38de5a2ba408143d0160e04191017ee0ef6101608201526020816101808360085afa9051169050806103ef576040516351d49ff760e11b815260040160405180910390fd5b60008061042686868a600280602002604051908101604052809291908260026020028082843760009201919091525061103e915050565b915091506040516101008a82377f29041431ef86687513d317b4bf3715dc7ccb60fa6e33f889f957b2cc229290c86101008201527f13605310065e6e53cb23c83559a62b717956a2bfca7d08322896df71d6df570e6101208201527f2e78845c51ffccd8662275351812c05c6b2e237ba1bbd4b1e165562e85724d1e6101408201527f2d8ecf6f8183b4bfa9e2fa99467ec00c3c9c46c4a46b423046c9eaf0c47e74a16101608201527f23fc30841e5056b8acd973bef720b6b262ed7cd65d96c8d6f4fd5e1916fbf7376101808201527f17d6872ffbad2e4566656a753820c90194f088d2356b16d39df11fd0c9d317db6101a08201527e731416b2440436221174b9a671bd83727dbeb6d569efc038b0d2cd5379ac546101c08201527f2eaf4553917f3cb19420b8f8853da5220267e29ee812533e2992d7584a2d1a3c6101e08201527f14f58395d956e5bf0547ba67f3b5131d00ac3dff00c77b0cfcf771dc45d2713f6102008201527f2cd1d4625e1d1271649983299943ea638039ffef0bfbe09d6834f017950aa69761022082015282610240820152816102608201527f26e4bfd3a8fa9f8a7b45ae0f13c02b90818bf9a4989637dea252357f34f8b2696102808201527f18e41bbccd09026305f797f0b13ee0ca0be47c4471217a35125d062f407ca7e66102a08201527f11f8707ce51ffca95fa784bdf3075bb5f15be23c2d571a4af5b3f342c83d0f4a6102c08201527f177f3720a4921dc794833f427f888d0a9bee5a86dca6f04e9d660499cd0e8b9e6102e08201526020816103008360085afa90511692508261069057604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050565b6106a36118f8565b6106ab611916565b6106b3611934565b6106c48660005b6020020135611384565b602084015282526000806106d787611384565b6040805160018082528183019092529294509092506060919060208083019080368337019050509050602080820190604089018237508451602080870151604051600080516020611e928339815191529361073793909291869101611c56565b6040516020818303038152906040528051906020012060001c61075a9190611caf565b865284518452602085810151858201527f0ceb9e454064cc92ede2b2c137e80af097c84957b0e24582e45d5ef8e31a63576040808701919091527f301814d4147e862bcb19187fd535a0f4f34918fa74c2b85db36d3c41a4df78a560608701527f15f470582be3595277f254a39876b70a20d617ccd22e07027f24602273ee13b660808701527f2c6b8ce7e274809d24a7febb3579bf6bc90534572e891f251046e0df346ac06260a087015260c0860185905260e086018490527f20dbc27e44fa52de05e8b2a6bd29762751e73b6a3496f9a31c2930f693e417536101008701527f2facc43d3073cd5d765e14fe1a9c80170b91f2d65fc6e8de1c8b652050c4c4b36101208701527f0cb14253bf645d0ba9b4b6f79a12629e4ddd29dbafbb156f66ebfc5dd257d27e6101408701527f1d45966458cf2aab7bdbb741f3ef5d38de5a2ba408143d0160e04191017ee0ef61016087015251600091816101808860085afa9051169050806108e0576040516351d49ff760e11b815260040160405180910390fd5b505050506000806108fd896000600481106106ba576106ba611bbe565b9092509050600080808061091960408e013560208f013561142a565b929650909450925090506000806109318f60036106ba565b915091506000806109438e8e8e61103e565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f29041431ef86687513d317b4bf3715dc7ccb60fa6e33f889f957b2cc229290c86101008e01527f13605310065e6e53cb23c83559a62b717956a2bfca7d08322896df71d6df570e6101208e01527f2e78845c51ffccd8662275351812c05c6b2e237ba1bbd4b1e165562e85724d1e6101408e01527f2d8ecf6f8183b4bfa9e2fa99467ec00c3c9c46c4a46b423046c9eaf0c47e74a16101608e01527f23fc30841e5056b8acd973bef720b6b262ed7cd65d96c8d6f4fd5e1916fbf7376101808e01527f17d6872ffbad2e4566656a753820c90194f088d2356b16d39df11fd0c9d317db6101a08e01527e731416b2440436221174b9a671bd83727dbeb6d569efc038b0d2cd5379ac546101c08e01527f2eaf4553917f3cb19420b8f8853da5220267e29ee812533e2992d7584a2d1a3c6101e08e01527f14f58395d956e5bf0547ba67f3b5131d00ac3dff00c77b0cfcf771dc45d2713f6102008e01527f2cd1d4625e1d1271649983299943ea638039ffef0bfbe09d6834f017950aa6976102208e01526102408d018290526102608d018190527f26e4bfd3a8fa9f8a7b45ae0f13c02b90818bf9a4989637dea252357f34f8b2696102808e01527f18e41bbccd09026305f797f0b13ee0ca0be47c4471217a35125d062f407ca7e66102a08e01527f11f8707ce51ffca95fa784bdf3075bb5f15be23c2d571a4af5b3f342c83d0f4a6102c08e01527f177f3720a4921dc794833f427f888d0a9bee5a86dca6f04e9d660499cd0e8b9e6102e08e015290925090506000610bb76118f8565b6020816103008f60085afa9150811580610bd357508051600114155b15610bf157604051631ff3747d60e21b815260040160405180910390fd5b50505050505050505050505050505050505050565b6000600080516020611e7283398151915283101580610c335750600080516020611e728339815191528210155b15610c5157604051631ff3747d60e21b815260040160405180910390fd5b82158015610c5d575081155b15610c6a57506000610cf5565b6000610ca9600080516020611e728339815191526003600080516020611e7283398151915287600080516020611e72833981519152898a090908611610565b9050808303610cbe575050600182901b610cf5565b610cc781611674565b8303610cda575050600182811b17610cf5565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b600080600080516020611e7283398151915286101580610d295750600080516020611e728339815191528510155b80610d425750600080516020611e728339815191528410155b80610d5b5750600080516020611e728339815191528310155b15610d7957604051631ff3747d60e21b815260040160405180910390fd5b82848688171717600003610d9257506000905080610fe9565b60008080600080516020611e72833981519152610dbe6003600080516020611e72833981519152611cd1565b600080516020611e728339815191528a8c090990506000600080516020611e728339815191528a600080516020611e728339815191528c8d090990506000600080516020611e728339815191528a600080516020611e728339815191528c8d09099050600080516020611e7283398151915280600080516020611e728339815191528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089450610eb7600080516020611e7283398151915280600080516020611e728339815191528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611674565b9350505050600080610f08600080516020611e7283398151915280610ede57610ede611c99565b600080516020611e72833981519152858609600080516020611e7283398151915287880908611610565b9050610f55600080516020611e728339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611e728339815191528488080961168d565b15915050610f648383836116d7565b90935091508683148015610f7757508186145b15610fa15780610f88576000610f8b565b60025b60ff1660028a901b176000179450879350610fe5565b610faa83611674565b87148015610fbf5750610fbc82611674565b86145b15610cda5780610fd0576000610fd3565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b610ffa611953565b611002611916565b61100a611916565b61101684860186611d87565b9250925092509250925092565b61102b6118da565b61103782840184611e09565b9392505050565b6000806000600190506040516040810160007f23a6b4bcbc013c625447dfd2a8f3c8831c945eba3babf6df4eaa91fa93af82eb83527f25d88d132b9ea6aa10f9f2e2e42904c02ee8cf9d32119fa01e1ae5ae383607d06020840152865182526020870151602083015260408360808560065afa841693507f0cb5294d5e4021391651e3ebfc32c08b4a92fa2590fac2f6b1ce228960fab2ff82527f0415986b9fd203f7c07193212682e0ee44896b7a4a20a6cc9eb5e01d2ecc61e1602083015288359050806040830152600080516020611e9283398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f05c313000df7c704704202693122eb9ce692e56a8869e68b03400901351f011682527f0b6ae5b7e30c57d7db492afc5dd6eab4c9251da1d5eec8fcba488cd63258113a602083015260208901359050806040830152600080516020611e9283398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f290a66b9b9e6119629f3633bd576022906ffb55f8b269b7b062bb329e3decc2782527f2b27a9a447493bc403b7ff53888d6a9f6b1c145139fdf13eb01f4e90822b20d3602083015260408901359050806040830152600080516020611e9283398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f21f56e108fba0eb306e50412ec4387ad4c0c695a164d06de1ef9309be32ddce282527f10e619746b90d45ae745b39047d4f11c76c7997de107987d0187ec26586b3fb7602083015260608901359050806040830152600080516020611e9283398151915281108416935060408260608460075afa8416935060408360808560065afa7f115909862a8e577a0b1c6f8f97e33812d949f8ef410b974fd9ffd1b5b24a85c183527f29f896de17b10c42f3769b5f76e92e08f6387436e118c6a73483d55046493601602084015288516040808501829052600080516020611e9283398151915290911091909516169390508160608160075afa831692505060408160808360065afa8151602090920151919450909250168061137b5760405163a54f8e2760e01b815260040160405180910390fd5b50935093915050565b6000808260000361139a57506000928392509050565b600183811c925080841614600080516020611e7283398151915283106113d357604051631ff3747d60e21b815260040160405180910390fd5b611410600080516020611e728339815191526003600080516020611e7283398151915286600080516020611e728339815191528889090908611610565b915080156114245761142182611674565b91505b50915091565b60008080808515801561143b575084155b1561145157506000925082915081905080611607565b600286811c94508593506001808816149080881614600080516020611e72833981519152861015806114915750600080516020611e728339815191528510155b156114af57604051631ff3747d60e21b815260040160405180910390fd5b6000600080516020611e728339815191526114d96003600080516020611e72833981519152611cd1565b600080516020611e72833981519152888a090990506000600080516020611e7283398151915288600080516020611e728339815191528a8b090990506000600080516020611e7283398151915288600080516020611e728339815191528a8b09099050600080516020611e7283398151915280600080516020611e728339815191528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50896506115d2600080516020611e7283398151915280600080516020611e728339815191528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611674565b95506115df8787866116d7565b90975095508415611601576115f387611674565b96506115fe86611674565b95505b50505050505b92959194509250565b600061163c827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611815565b905081600080516020611e728339815191528283091461166f57604051631ff3747d60e21b815260040160405180910390fd5b919050565b600080516020611e728339815191529081900681030690565b6000806116ba837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611815565b905082600080516020611e72833981519152828309149392505050565b60008080611709600080516020611e7283398151915280878809600080516020611e72833981519152898a0908611610565b9050831561171d5761171a81611674565b90505b611768600080516020611e728339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611e72833981519152848a0809611610565b9250600080516020611e72833981519152611794600080516020611e728339815191526002860961187a565b86099150600080516020611e728339815191526117c1600080516020611e72833981519152848509611674565b600080516020611e7283398151915285860908861415806117f75750600080516020611e72833981519152808385096002098514155b1561137b57604051631ff3747d60e21b815260040160405180910390fd5b6000806040516020815260208082015260206040820152846060820152836080820152600080516020611e7283398151915260a082015260208160c08360055afa90519250905080610cf357604051631ff3747d60e21b815260040160405180910390fd5b60006118a6827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd45611815565b9050600080516020611e7283398151915281830960011461166f57604051631ff3747d60e21b815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b6040518061010001604052806008906020820280368337509192915050565b806101008101831015610cf557600080fd5b8060408101831015610cf557600080fd5b600080600061018084860312156119ab57600080fd5b6119b58585611972565b92506119c5856101008601611984565b91506119d5856101408601611984565b90509250925092565b8060005b6004811015611a015781518452602093840193909101906001016119e2565b50505050565b60c08101611a1582866119de565b608082018460005b6001811015611a3c578151835260209283019290910190600101611a1d565b5050508260a0830152949350505050565b60008083601f840112611a5f57600080fd5b50813567ffffffffffffffff811115611a7757600080fd5b602083019150836020828501011115611a8f57600080fd5b9250929050565b60008060008060408587031215611aac57600080fd5b843567ffffffffffffffff811115611ac357600080fd5b611acf87828801611a4d565b909550935050602085013567ffffffffffffffff811115611aef57600080fd5b611afb87828801611a4d565b95989497509550505050565b8060808101831015610cf557600080fd5b6000806000806102008587031215611b2f57600080fd5b611b398686611972565b9350611b49866101008701611984565b9250611b59866101408701611984565b9150611b69866101808701611b07565b905092959194509250565b6000806000806101408587031215611b8b57600080fd5b611b958686611b07565b935060a0850186811115611ba857600080fd5b608086019350359150611b698660c08701611b07565b634e487b7160e01b600052603260045260246000fd5b8060005b6002811015611a01578151845260209384019390910190600101611bd8565b6102008101818660005b6008811015611c20578151835260209283019290910190600101611c01565b505050611c31610100830186611bd4565b611c3f610140830185611bd4565b611c4d6101808301846119de565b95945050505050565b83815282602082015260006040820183516020850160005b82811015611c8c578151845260209384019390910190600101611c6e565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611ccc57634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610cf557634e487b7160e01b600052601160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d2957634e487b7160e01b600052604160045260246000fd5b604052919050565b600082601f830112611d4257600080fd5b6000611d4e6040611cf2565b9050806040840185811115611d6257600080fd5b845b81811015611d7c578035835260209283019201611d64565b509195945050505050565b60008060006101808486031215611d9d57600080fd5b600085601f860112611dad578081fd5b80610100611dba81611cf2565b9250829150860187811115611dce57600080fd5b865b81811015611de8578035845260209384019301611dd0565b50819550611df68882611d31565b94505050506119d5856101408601611d31565b600060808284031215611e1b57600080fd5b600083601f840112611e2b578081fd5b80611e366080611cf2565b90508091506080840185811115611e4c57600080fd5b845b81811015611e66578035845260209384019301611e4e565b50909594505050505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220ed97e43b88b9e94370f882b3a4f544ee2e6baabe55595999a8ddb13fd62f236264736f6c634300081c0033";

type StateTransitionVerifierGroth16ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StateTransitionVerifierGroth16ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StateTransitionVerifierGroth16__factory extends ContractFactory {
  constructor(...args: StateTransitionVerifierGroth16ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StateTransitionVerifierGroth16 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StateTransitionVerifierGroth16__factory {
    return super.connect(runner) as StateTransitionVerifierGroth16__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StateTransitionVerifierGroth16Interface {
    return new Interface(_abi) as StateTransitionVerifierGroth16Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StateTransitionVerifierGroth16 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StateTransitionVerifierGroth16;
  }
}
