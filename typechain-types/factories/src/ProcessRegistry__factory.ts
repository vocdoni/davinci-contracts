/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProcessRegistry,
  ProcessRegistryInterface,
} from "../../src/ProcessRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotAcceptResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusOrigin",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusURI",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxMinValueBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxTotalCost",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxVotes",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinTotalCost",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProcessId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimeBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTotalCostBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUniqueValues",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "censusRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "censusURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    name: "CensusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProcessCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "ProcessDurationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    name: "ProcessResultsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newStateRoot",
        type: "uint256",
      },
    ],
    name: "ProcessStateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "oldStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProcessStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_CENSUS_ORIGIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_STATUS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
    ],
    name: "getNextProcessId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcess",
    outputs: [
      {
        components: [
          {
            internalType: "enum IProcessRegistry.ProcessStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "organizationId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.EncryptionKey",
            name: "encryptionKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "latestStateRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "result",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteOverwriteCount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "costFromWeight",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "forceUniqueness",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "maxCount",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "costExponent",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minTotalCost",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.BallotMode",
            name: "ballotMode",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IProcessRegistry.CensusOrigin",
                name: "censusOrigin",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "censusRoot",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "censusURI",
                type: "string",
              },
            ],
            internalType: "struct IProcessRegistry.Census",
            name: "census",
            type: "tuple",
          },
        ],
        internalType: "struct IProcessRegistry.Process",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcessEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSTVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_chainID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_stVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rVerifier",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "initStateRoot",
        type: "uint256",
      },
    ],
    name: "newProcess",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "processNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processes",
    outputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "latestStateRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteOverwriteCount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    name: "setProcessCensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProcessDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "setProcessResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "setProcessStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "submitStateTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015601357600080fd5b506080516133ec61003d60003960008181611ffb01528181612024015261216a01526133ec6000f3fe6080604052600436106101815760003560e01c806372c628ef116100d1578063a5f01e191161008a578063c718c01f11610064578063c718c01f146104ec578063d71d072e1461050c578063f2fde38b1461052c578063f9aa44991461054c57600080fd5b8063a5f01e1914610469578063ad3cb1cc14610489578063adc879e9146104c757600080fd5b806372c628ef14610378578063848df5401461038d5780638da5cb5b146103bf578063992bc45b146103fc5780639c18deaf14610429578063a5b110de1461044957600080fd5b806352d1902d1161013e578063647c576c11610118578063647c576c1461030357806368141f2c146103235780636bae04ea14610343578063715018a61461036357600080fd5b806352d1902d1461028057806356a6f1e21461029557806362fa11fc146102b557600080fd5b806302cc919a146101865780630535fece146101b257806309706392146101e95780633365133c146102285780634c0acc56146102565780634f1ef2861461026b575b600080fd5b34801561019257600080fd5b5061019b600981565b60405160ff90911681526020015b60405180910390f35b3480156101be57600080fd5b506101d26101cd366004612729565b610561565b6040516101a99b9a99989796959493929190612869565b3480156101f557600080fd5b5060025461021090600160401b90046001600160a01b031681565b6040516001600160a01b0390911681526020016101a9565b34801561023457600080fd5b5061024861024336600461298a565b6107a3565b6040519081526020016101a9565b34801561026257600080fd5b50610248610965565b61027e610279366004612ab8565b6109e3565b005b34801561028c57600080fd5b50610248610a02565b3480156102a157600080fd5b5061027e6102b0366004612b61565b610a1f565b3480156102c157600080fd5b506102eb6102d0366004612b8d565b6001602052600090815260409020546001600160401b031681565b6040516001600160401b0390911681526020016101a9565b34801561030f57600080fd5b5061027e61031e366004612ba8565b610bd6565b34801561032f57600080fd5b5061024861033e366004612b8d565b610d53565b34801561034f57600080fd5b5061027e61035e366004612bf6565b610d9b565b34801561036f57600080fd5b5061027e611006565b34801561038457600080fd5b5061019b600481565b34801561039957600080fd5b506002546103aa9063ffffffff1681565b60405163ffffffff90911681526020016101a9565b3480156103cb57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610210565b34801561040857600080fd5b5061041c610417366004612729565b61101a565b6040516101a99190612c78565b34801561043557600080fd5b50600354610210906001600160a01b031681565b34801561045557600080fd5b5061027e610464366004612d63565b61131d565b34801561047557600080fd5b50610248610484366004612729565b6115cb565b34801561049557600080fd5b506104ba604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101a99190612de0565b3480156104d357600080fd5b506002546103aa90640100000000900463ffffffff1681565b3480156104f857600080fd5b5061027e610507366004612df3565b6118e0565b34801561051857600080fd5b5061027e610527366004612d63565b611a5d565b34801561053857600080fd5b5061027e610547366004612b8d565b611c4d565b34801561055857600080fd5b50610248611c90565b6000602081815291815260409081902080548251808401909352600182015483526002820154938301939093526003810154600582015460068301546007840154600885015460098601805460ff8a169961010090046001600160a01b0316989791906105cd90612e15565b80601f01602080910402602001604051908101604052809291908181526020018280546105f990612e15565b80156106465780601f1061061b57610100808354040283529160200191610646565b820191906000526020600020905b81548152906001019060200180831161062957829003601f168201915b5050604080516101008082018352600a88015460ff808216151584529181048216151560208401526201000081048216838501526301000000900481166060830152600b880154608080840191909152600c89015460a0840152600d89015460c0840152600e89015460e08401528351908101909352600f880180549798929792965092945091925083911660098111156106e3576106e3612742565b60098111156106f4576106f4612742565b8152602001600182015481526020016002820154815260200160038201805461071c90612e15565b80601f016020809104026020016040519081016040528092919081815260200182805461074890612e15565b80156107955780601f1061076a57610100808354040283529160200191610795565b820191906000526020600020905b81548152906001019060200180831161077857829003601f168201915b50505050508152505090508b565b60025433600081815260016020526040812054909283916107dd91640100000000900463ffffffff169084906001600160401b0316611cda565b90506107ee81838e8e8e8e8e611d6a565b600081815260208190526040902080548d90829060ff1916600183600481111561081a5761081a612742565b0217905550600581018c9055600681018b90558054610100600160a81b0319166101006001600160a01b0385160217815585356001820155602086013560028201556003810185905560098101610872888a83612e97565b5089600a82016108828282612f84565b50899050600f82016108948282613097565b50506002805463ffffffff169060006108ac83613144565b825463ffffffff9182166101009390930a9283029190920219909116179055506001600160a01b038316600090815260016020526040812080546001600160401b0316916108f983613169565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050826001600160a01b0316827fada6f87a2a16a0c9c169ca36754c5f33f7c1a973b575d068f888a549ed4faefa60405160405180910390a3509b9a5050505050505050505050565b6000600260089054906101000a90046001600160a01b03166001600160a01b031663233ace116040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de919061318b565b905090565b6109eb611ff0565b6109f482612095565b6109fe828261209d565b5050565b6000610a0c61215f565b5060008051602061339783398151915290565b81610a3d5760405163cbf4a64560e01b815260040160405180910390fd5b60048181811115610a5057610a50612742565b60ff161115610a72576040516307a92f1960e51b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b0316610aad57604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610adb576040516282b42960e81b815260040160405180910390fd5b805460ff16610aea81846121a8565b610b07576040516307a92f1960e51b815260040160405180910390fd5b81548390839060ff19166001836004811115610b2557610b25612742565b02179055506001836004811115610b3e57610b3e612742565b03610b96576000826005015442610b5591906131a4565b6006840181905560405181815290915085907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505b837f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c8285604051610bc89291906131b7565b60405180910390a250505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b0316600081158015610c1b5750825b90506000826001600160401b03166001148015610c375750303b155b905081158015610c45575080155b15610c635760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c8d57845460ff60401b1916600160401b1785555b610c96336122cc565b610c9e6122dd565b60028054640100000000600160e01b03191664010000000063ffffffff8b160268010000000000000000600160e01b03191617600160401b6001600160a01b038a81169190910291909117909155600380546001600160a01b0319169188169190911790558315610d4957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6002546001600160a01b0382166000908152600160205260408120549091610d959164010000000090910463ffffffff169084906001600160401b0316611cda565b92915050565b81610db95760405163cbf4a64560e01b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b0316610df457604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610e22576040516282b42960e81b815260040160405180910390fd5b610e2f60208301836131d2565b6009811115610e4057610e40612742565b600f82015460ff166009811115610e5957610e59612742565b14610e775760405163f37f7b5d60e01b815260040160405180910390fd5b601081015460208301351015610ea057604051634f9233a560e01b815260040160405180910390fd5b6040820135610ec257604051635e32eadd60e01b815260040160405180910390fd5b610ecf6060830183613051565b9050600003610ef157604051630f8b932160e11b815260040160405180910390fd5b6000815460ff166004811115610f0957610f09612742565b14158015610f2d57506003815460ff166004811115610f2a57610f2a612742565b14155b15610f4b576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154610f6091906131ef565b11610f7e5760405163e843c5eb60e01b815260040160405180910390fd5b6020820135601082015560408201356011820155610f9f6060830183613051565b6012830191610faf919083612e97565b50827f35947a8913e2156f19b018078c9f0667e49cb3dc24af3434a4d0b16b82675b1b6040840135610fe46060860186613051565b8660200135604051610ff9949392919061322b565b60405180910390a2505050565b61100e6122e5565b6110186000612340565b565b6110226125d7565b60008281526020819052604090819020815161018081019092528054829060ff16600481111561105457611054612742565b600481111561106557611065612742565b8152815461010090046001600160a01b031660208083019190915260408051808201825260018501548152600285015481840152818401526003840154606084015260048401805482518185028101850190935280835260809094019391929091908301828280156110f657602002820191906000526020600020905b8154815260200190600101908083116110e2575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201805461113790612e15565b80601f016020809104026020016040519081016040528092919081815260200182805461116390612e15565b80156111b05780601f10611185576101008083540402835291602001916111b0565b820191906000526020600020905b81548152906001019060200180831161119357829003601f168201915b5050509183525050604080516101008082018352600a85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600b860154608080850191909152600c87015460a0850152600d87015460c0850152600e87015460e08501529085019290925282519182018352600f8501805493909401939192839116600981111561125857611258612742565b600981111561126957611269612742565b8152602001600182015481526020016002820154815260200160038201805461129190612e15565b80601f01602080910402602001604051908101604052809291908181526020018280546112bd90612e15565b801561130a5780601f106112df5761010080835404028352916020019161130a565b820191906000526020600020905b8154815290600101906020018083116112ed57829003601f168201915b5050509190925250505090525092915050565b8461133b5760405163cbf4a64560e01b815260040160405180910390fd5b6000858152602081905260409020805461010090046001600160a01b031661137657604051634d36eb6960e01b815260040160405180910390fd5b6001815460ff16600481111561138e5761138e612742565b146113ac576040516307a92f1960e51b815260040160405180910390fd5b42816006015482600501546113c191906131ef565b11156113e05760405163e843c5eb60e01b815260040160405180910390fd5b600354604051635c73957b60e11b81526001600160a01b039091169063b8e72af690611416908890889088908890600401613256565b60006040518083038186803b15801561142e57600080fd5b505afa158015611442573d6000803e3d6000fd5b506000925061145691505083850185613288565b600383015481519192501461147e57604051630b6fac0360e41b815260040160405180910390fd5b600061148c600160096131a4565b6001600160401b038111156114a3576114a3612a72565b6040519080825280602002602001820160405280156114cc578160200160208202803683370190505b50905060015b6009811015611521578281600981106114ed576114ed6132f1565b6020020151826114fe6001846131a4565b8151811061150e5761150e6132f1565b60209081029190910101526001016114d2565b50825460ff19166004908117845581516115429185019060208401906126c9565b50877f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c600160046040516115779291906131b7565b60405180910390a2336001600160a01b0316887f5da8009aeb11de7ef64598b0de897a03d2f93efabda8507a70e29cca4530cf5d836040516115b99190613307565b60405180910390a35050505050505050565b60008181526020819052604080822081516101808101909252805483929190829060ff16600481111561160057611600612742565b600481111561161157611611612742565b8152815461010090046001600160a01b031660208083019190915260408051808201825260018501548152600285015481840152818401526003840154606084015260048401805482518185028101850190935280835260809094019391929091908301828280156116a257602002820191906000526020600020905b81548152602001906001019080831161168e575b50505050508152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820180546116e390612e15565b80601f016020809104026020016040519081016040528092919081815260200182805461170f90612e15565b801561175c5780601f106117315761010080835404028352916020019161175c565b820191906000526020600020905b81548152906001019060200180831161173f57829003601f168201915b5050509183525050604080516101008082018352600a85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600b860154608080850191909152600c87015460a0850152600d87015460c0850152600e87015460e08501529085019290925282519182018352600f8501805493909401939192839116600981111561180457611804612742565b600981111561181557611815612742565b8152602001600182015481526020016002820154815260200160038201805461183d90612e15565b80601f016020809104026020016040519081016040528092919081815260200182805461186990612e15565b80156118b65780601f1061188b576101008083540402835291602001916118b6565b820191906000526020600020905b81548152906001019060200180831161189957829003601f168201915b5050505050815250508152505090508060c001518160a001516118d991906131ef565b9392505050565b816118fe5760405163cbf4a64560e01b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b031661193957604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314611967576040516282b42960e81b815260040160405180910390fd5b805460ff16600081600481111561198057611980612742565b141580156119a05750600381600481111561199d5761199d612742565b14155b156119be576040516307a92f1960e51b815260040160405180910390fd5b600582015460068301548415806119de5750426119db86846131ef565b11155b806119fb57506119ee81836131ef565b6119f886846131ef565b11155b15611a1957604051637616640160e01b815260040160405180910390fd5b6006840185905560405185815286907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505050505050565b84611a7b5760405163cbf4a64560e01b815260040160405180910390fd5b6000858152602081905260409020805461010090046001600160a01b0316611ab657604051634d36eb6960e01b815260040160405180910390fd5b6000815460ff166004811115611ace57611ace612742565b14611aec576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154611b0191906131ef565b11611b1f5760405163e843c5eb60e01b815260040160405180910390fd5b600254604051635c73957b60e11b8152600160401b9091046001600160a01b03169063b8e72af690611b5b908890889088908890600401613256565b60006040518083038186803b158015611b7357600080fd5b505afa158015611b87573d6000803e3d6000fd5b5060009250611b9b9150508385018561331a565b6003830154815191925014611bc357604051630b6fac0360e41b815260040160405180910390fd5b602081015160038301556040810151600783018054600090611be69084906131ef565b90915550506060810151600883018054600090611c049084906131ef565b9091555050602080820151604051908152339189917fdc9b2774f92abfeee93d8b2ef67d59cd90c2d6d740b01c24fd9ec109a71865fc910160405180910390a350505050505050565b611c556122e5565b6001600160a01b038116611c8457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b611c8d81612340565b50565b6003546040805163233ace1160e01b815290516000926001600160a01b03169163233ace119160048083019260209291908290030181865afa1580156109ba573d6000803e3d6000fd5b6001600160f81b031960e09390931b92831660ff60f01b84161760ff60e81b84161760ff60e01b939093169290921760409190911b68010000000000000000600160e01b03161767ff0000000000000082161766ff00000000000082161765ff000000000082161764ff0000000082161763ff00000082161762ff000082161761ff0082161760ff919091161790565b6000878152602081905260409020546001600160a01b038088166101009092041603611da957604051635040c4d360e11b815260040160405180910390fd5b611db9606083016040840161335d565b60ff161580611dda57506008611dd5606084016040850161335d565b60ff16115b15611df85760405163ac38930b60e01b815260040160405180910390fd5b61ffff8260c001351115611e1f57604051630ac929fb60e41b815260040160405180910390fd5b81608001358260a001351115611e485760405163207ea56d60e01b815260040160405180910390fd5b8160c001358260e001351115611e715760405163a159c01160e01b815260040160405180910390fd5b6009611e8060208301836131d2565b6009811115611e9157611e91612742565b60ff161115611eb35760405163f37f7b5d60e01b815260040160405180910390fd5b8060200135600003611ed857604051634f9233a560e01b815260040160405180910390fd5b6040810135611efa57604051635e32eadd60e01b815260040160405180910390fd5b611f076060820182613051565b9050600003611f2957604051630f8b932160e11b815260040160405180910390fd5b60048581811115611f3c57611f3c612742565b60ff161180611f7a57506000856004811115611f5a57611f5a612742565b14158015611f7a57506003856004811115611f7757611f77612742565b14155b15611f98576040516307a92f1960e51b815260040160405180910390fd5b426000859003611fa6578094505b80851015611fc757604051632ca4094f60e21b815260040160405180910390fd5b80611fd285876131ef565b11610d4957604051637616640160e01b815260040160405180910390fd5b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061207757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661206b600080516020613397833981519152546001600160a01b031690565b6001600160a01b031614155b156110185760405163703e46dd60e11b815260040160405180910390fd5b611c8d6122e5565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156120f7575060408051601f3d908101601f191682019092526120f49181019061318b565b60015b61211f57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401611c7b565b600080516020613397833981519152811461215057604051632a87526960e21b815260048101829052602401611c7b565b61215a83836123b1565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110185760405163703e46dd60e11b815260040160405180910390fd5b60008260048111156121bc576121bc612742565b8260048111156121ce576121ce612742565b036121db57506000610d95565b60028360048111156121ef576121ef612742565b148061220c5750600483600481111561220a5761220a612742565b145b806122285750600183600481111561222657612226612742565b145b1561223557506000610d95565b600083600481111561224957612249612742565b036122a35760035b82600481111561226357612263612742565b14806122805750600282600481111561227e5761227e612742565b145b8061229c5750600182600481111561229a5761229a612742565b145b9050610d95565b60038360048111156122b7576122b7612742565b036122c3576000612251565b50600092915050565b6122d4612407565b611c8d81612450565b611018612407565b336123177f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146110185760405163118cdaa760e01b8152336004820152602401611c7b565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6123ba82612458565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156123ff5761215a82826124bd565b6109fe612533565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661101857604051631afcd79f60e31b815260040160405180910390fd5b611c55612407565b806001600160a01b03163b60000361248e57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401611c7b565b60008051602061339783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516124da919061337a565b600060405180830381855af49150503d8060008114612515576040519150601f19603f3d011682016040523d82523d6000602084013e61251a565b606091505b509150915061252a858383612552565b95945050505050565b34156110185760405163b398979f60e01b815260040160405180910390fd5b60608261256757612562826125ae565b6118d9565b815115801561257e57506001600160a01b0384163b155b156125a757604051639996b31560e01b81526001600160a01b0385166004820152602401611c7b565b5092915050565b8051156125be5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b604080516101808101909152806000815260200160006001600160a01b03168152602001612618604051806040016040528060008152602001600081525090565b8152602001600081526020016060815260200160008152602001600081526020016000815260200160008152602001606081526020016126a0604051806101000160405280600015158152602001600015158152602001600060ff168152602001600060ff168152602001600081526020016000815260200160008152602001600081525090565b815260408051608081018252600080825260208281018290529282015260608082015291015290565b828054828255906000526020600020908101928215612704579160200282015b828111156127045782518255916020019190600101906126e9565b50612710929150612714565b5090565b5b808211156127105760008155600101612715565b60006020828403121561273b57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6005811061276857612768612742565b9052565b60005b8381101561278757818101518382015260200161276f565b50506000910152565b600081518084526127a881602086016020860161276c565b601f01601f19169290920160200192915050565b80511515825260208101511515602083015260ff604082015116604083015260608101516127ef606084018260ff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b60008151600a811061283057612830612742565b8084525060208201516020840152604082015160408401526060820151608060608501526128616080850182612790565b949350505050565b612873818d612758565b6001600160a01b038b166020820152612899604082018b80518252602090810151910152565b8860808201528760a08201528660c08201528560e08201528461010082015261026061012082015260006128d1610260830186612790565b6128df6101408401866127bc565b8281036102408401526128f2818561281c565b9e9d5050505050505050505050505050565b80356005811061291357600080fd5b919050565b60006080828403121561292a57600080fd5b50919050565b60008083601f84011261294257600080fd5b5081356001600160401b0381111561295957600080fd5b60208301915083602082850101111561297157600080fd5b9250929050565b60006040828403121561292a57600080fd5b6000806000806000806000806000898b036102008112156129aa57600080fd5b6129b38b612904565b995060208b0135985060408b01359750610100605f19820112156129d657600080fd5b5060608a0195506101608a01356001600160401b038111156129f757600080fd5b612a038c828d01612918565b9550506101808a01356001600160401b03811115612a2057600080fd5b612a2c8c828d01612930565b9095509350612a4190508b6101a08c01612978565b989b979a5095989497939692955090936101e00135919050565b80356001600160a01b038116811461291357600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612ab057612ab0612a72565b604052919050565b60008060408385031215612acb57600080fd5b612ad483612a5b565b915060208301356001600160401b03811115612aef57600080fd5b8301601f81018513612b0057600080fd5b80356001600160401b03811115612b1957612b19612a72565b612b2c601f8201601f1916602001612a88565b818152866020838501011115612b4157600080fd5b816020840160208301376000602083830101528093505050509250929050565b60008060408385031215612b7457600080fd5b82359150612b8460208401612904565b90509250929050565b600060208284031215612b9f57600080fd5b6118d982612a5b565b600080600060608486031215612bbd57600080fd5b833563ffffffff81168114612bd157600080fd5b9250612bdf60208501612a5b565b9150612bed60408501612a5b565b90509250925092565b60008060408385031215612c0957600080fd5b8235915060208301356001600160401b03811115612c2657600080fd5b612c3285828601612918565b9150509250929050565b600081518084526020840193506020830160005b82811015612c6e578151865260209586019590910190600101612c50565b5093949350505050565b60208152612c8a602082018351612758565b60006020830151612ca660408401826001600160a01b03169052565b506040830151805160608401526020810151608084015250606083015160a0830152608083015161028060c0840152612ce36102a0840182612c3c565b905060a084015160e084015260c084015161010084015260e0840151610120840152610100840151610140840152610120840151601f1984830301610160850152612d2e8282612790565b915050610140840151612d456101808501826127bc565b50610160840151838203601f190161028085015261252a828261281c565b600080600080600060608688031215612d7b57600080fd5b8535945060208601356001600160401b03811115612d9857600080fd5b612da488828901612930565b90955093505060408601356001600160401b03811115612dc357600080fd5b612dcf88828901612930565b969995985093965092949392505050565b6020815260006118d96020830184612790565b60008060408385031215612e0657600080fd5b50508035926020909101359150565b600181811c90821680612e2957607f821691505b60208210810361292a57634e487b7160e01b600052602260045260246000fd5b601f82111561215a57806000526020600020601f840160051c81016020851015612e705750805b601f840160051c820191505b81811015612e905760008155600101612e7c565b5050505050565b6001600160401b03831115612eae57612eae612a72565b612ec283612ebc8354612e15565b83612e49565b6000601f841160018114612ef65760008515612ede5750838201355b600019600387901b1c1916600186901b178355612e90565b600083815260209020601f19861690835b82811015612f275786850135825560209485019460019092019101612f07565b5086821015612f445760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b600081358015158114610d9557600080fd5b60ff81168114611c8d57600080fd5b60008135610d9581612f68565b612f8d82612f56565b151560ff1982541660ff8216811783555050612fc8612fae60208401612f56565b82805461ff00191691151560081b61ff0016919091179055565b612fef612fd760408401612f77565b825462ff0000191660109190911b62ff000016178255565b613018612ffe60608401612f77565b825463ff000000191660189190911b63ff00000016178255565b6080820135600182015560a0820135600282015560c0820135600382015560e090910135600490910155565b600a8110611c8d57600080fd5b6000808335601e1984360301811261306857600080fd5b8301803591506001600160401b0382111561308257600080fd5b60200191503681900382131561297157600080fd5b81356130a281613044565b600a81106130b2576130b2612742565b815460ff191660ff9190911617815560208201356001820155604082013560028201556060820135601e19368490030181126130ed57600080fd5b820180356001600160401b0381111561310557600080fd5b60208201915080360382131561311a57600080fd5b613128818360038601612e97565b50505050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff821663ffffffff81036131605761316061312e565b60010192915050565b60006001600160401b0382166001600160401b0381036131605761316061312e565b60006020828403121561319d57600080fd5b5051919050565b81810381811115610d9557610d9561312e565b604081016131c58285612758565b6118d96020830184612758565b6000602082840312156131e457600080fd5b81356118d981613044565b80820180821115610d9557610d9561312e565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b848152606060208201526000613245606083018587613202565b905082604083015295945050505050565b60408152600061326a604083018688613202565b828103602084015261327d818587613202565b979650505050505050565b6000610120828403121561329b57600080fd5b600083601f8401126132ab578081fd5b806101206132b881612a88565b92508291508401858111156132cc57600080fd5b845b818110156132e65780358452602093840193016132ce565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b6020815260006118d96020830184612c3c565b60006080828403121561332c57600080fd5b600083601f84011261333c578081fd5b806133476080612a88565b905080915060808401858111156132cc57600080fd5b60006020828403121561336f57600080fd5b81356118d981612f68565b6000825161338c81846020870161276c565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220046ba338da9477fe4d4203d5e462239504ad1528ef4fc2bf761343b5b6c4bc4764736f6c634300081c0033";

type ProcessRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProcessRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProcessRegistry__factory extends ContractFactory {
  constructor(...args: ProcessRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ProcessRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProcessRegistry__factory {
    return super.connect(runner) as ProcessRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProcessRegistryInterface {
    return new Interface(_abi) as ProcessRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProcessRegistry {
    return new Contract(address, _abi, runner) as unknown as ProcessRegistry;
  }
}
