/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  StateTransitionVerifierBaseGroth16,
  StateTransitionVerifierBaseGroth16Interface,
} from "../../../src/verifiers/StateTransitionVerifierBaseGroth16";

const _abi = [
  {
    inputs: [],
    name: "CommitmentInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611ae18061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063b1c3a00e14610046578063d148354c14610071578063e33974a814610086575b600080fd5b610059610054366004611856565b610099565b6040516100689392919061189f565b60405180910390f35b61008461007f366004611913565b610122565b005b61008461009436600461196f565b6105c7565b6100a16117ba565b6100a96117d8565b60006100be86358760015b6020020135610b32565b83526100dc6060870135604088013560a089013560808a0135610c27565b602085015260408401526100f660c08701358760076100b4565b606084015261010885358660016100b4565b825261011784358560016100b4565b905093509350939050565b61012a6117d8565b6040805160018082528183019092526060916020808301908036833701905050905060208082019060408501823750604051600080516020611a8c83398151915290610182908735906020808a0135918691016119cf565b6040516020818303038152906040528051906020012060001c6101a59190611a28565b8252604080516000918782377f0ceb9e454064cc92ede2b2c137e80af097c84957b0e24582e45d5ef8e31a635760408201527f301814d4147e862bcb19187fd535a0f4f34918fa74c2b85db36d3c41a4df78a560608201527f15f470582be3595277f254a39876b70a20d617ccd22e07027f24602273ee13b660808201527f2c6b8ce7e274809d24a7febb3579bf6bc90534572e891f251046e0df346ac06260a082015260408660c08301377f20dbc27e44fa52de05e8b2a6bd29762751e73b6a3496f9a31c2930f693e417536101008201527f2facc43d3073cd5d765e14fe1a9c80170b91f2d65fc6e8de1c8b652050c4c4b36101208201527f0cb14253bf645d0ba9b4b6f79a12629e4ddd29dbafbb156f66ebfc5dd257d27e6101408201527f1d45966458cf2aab7bdbb741f3ef5d38de5a2ba408143d0160e04191017ee0ef6101608201526020816101808360085afa90511690508061031b576040516351d49ff760e11b815260040160405180910390fd5b60008061035286868a6002806020026040519081016040528092919082600260200280828437600092019190915250610f1e915050565b915091506040516101008a82377f29041431ef86687513d317b4bf3715dc7ccb60fa6e33f889f957b2cc229290c86101008201527f13605310065e6e53cb23c83559a62b717956a2bfca7d08322896df71d6df570e6101208201527f2e78845c51ffccd8662275351812c05c6b2e237ba1bbd4b1e165562e85724d1e6101408201527f2d8ecf6f8183b4bfa9e2fa99467ec00c3c9c46c4a46b423046c9eaf0c47e74a16101608201527f23fc30841e5056b8acd973bef720b6b262ed7cd65d96c8d6f4fd5e1916fbf7376101808201527f17d6872ffbad2e4566656a753820c90194f088d2356b16d39df11fd0c9d317db6101a08201527e731416b2440436221174b9a671bd83727dbeb6d569efc038b0d2cd5379ac546101c08201527f2eaf4553917f3cb19420b8f8853da5220267e29ee812533e2992d7584a2d1a3c6101e08201527f14f58395d956e5bf0547ba67f3b5131d00ac3dff00c77b0cfcf771dc45d2713f6102008201527f2cd1d4625e1d1271649983299943ea638039ffef0bfbe09d6834f017950aa69761022082015282610240820152816102608201527f26e4bfd3a8fa9f8a7b45ae0f13c02b90818bf9a4989637dea252357f34f8b2696102808201527f18e41bbccd09026305f797f0b13ee0ca0be47c4471217a35125d062f407ca7e66102a08201527f11f8707ce51ffca95fa784bdf3075bb5f15be23c2d571a4af5b3f342c83d0f4a6102c08201527f177f3720a4921dc794833f427f888d0a9bee5a86dca6f04e9d660499cd0e8b9e6102e08201526020816103008360085afa9051169250826105bc57604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050565b6105cf6117d8565b6105d76117f6565b6105df611814565b6105f08660005b6020020135611264565b6020840152825260008061060387611264565b6040805160018082528183019092529294509092506060919060208083019080368337019050509050602080820190604089018237508451602080870151604051600080516020611a8c83398151915293610663939092918691016119cf565b6040516020818303038152906040528051906020012060001c6106869190611a28565b865284518452602085810151858201527f0ceb9e454064cc92ede2b2c137e80af097c84957b0e24582e45d5ef8e31a63576040808701919091527f301814d4147e862bcb19187fd535a0f4f34918fa74c2b85db36d3c41a4df78a560608701527f15f470582be3595277f254a39876b70a20d617ccd22e07027f24602273ee13b660808701527f2c6b8ce7e274809d24a7febb3579bf6bc90534572e891f251046e0df346ac06260a087015260c0860185905260e086018490527f20dbc27e44fa52de05e8b2a6bd29762751e73b6a3496f9a31c2930f693e417536101008701527f2facc43d3073cd5d765e14fe1a9c80170b91f2d65fc6e8de1c8b652050c4c4b36101208701527f0cb14253bf645d0ba9b4b6f79a12629e4ddd29dbafbb156f66ebfc5dd257d27e6101408701527f1d45966458cf2aab7bdbb741f3ef5d38de5a2ba408143d0160e04191017ee0ef61016087015251600091816101808860085afa90511690508061080c576040516351d49ff760e11b815260040160405180910390fd5b50505050600080610829896000600481106105e6576105e66119b9565b9092509050600080808061084560408e013560208f013561130a565b9296509094509250905060008061085d8f60036105e6565b9150915060008061086f8e8e8e610f1e565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f29041431ef86687513d317b4bf3715dc7ccb60fa6e33f889f957b2cc229290c86101008e01527f13605310065e6e53cb23c83559a62b717956a2bfca7d08322896df71d6df570e6101208e01527f2e78845c51ffccd8662275351812c05c6b2e237ba1bbd4b1e165562e85724d1e6101408e01527f2d8ecf6f8183b4bfa9e2fa99467ec00c3c9c46c4a46b423046c9eaf0c47e74a16101608e01527f23fc30841e5056b8acd973bef720b6b262ed7cd65d96c8d6f4fd5e1916fbf7376101808e01527f17d6872ffbad2e4566656a753820c90194f088d2356b16d39df11fd0c9d317db6101a08e01527e731416b2440436221174b9a671bd83727dbeb6d569efc038b0d2cd5379ac546101c08e01527f2eaf4553917f3cb19420b8f8853da5220267e29ee812533e2992d7584a2d1a3c6101e08e01527f14f58395d956e5bf0547ba67f3b5131d00ac3dff00c77b0cfcf771dc45d2713f6102008e01527f2cd1d4625e1d1271649983299943ea638039ffef0bfbe09d6834f017950aa6976102208e01526102408d018290526102608d018190527f26e4bfd3a8fa9f8a7b45ae0f13c02b90818bf9a4989637dea252357f34f8b2696102808e01527f18e41bbccd09026305f797f0b13ee0ca0be47c4471217a35125d062f407ca7e66102a08e01527f11f8707ce51ffca95fa784bdf3075bb5f15be23c2d571a4af5b3f342c83d0f4a6102c08e01527f177f3720a4921dc794833f427f888d0a9bee5a86dca6f04e9d660499cd0e8b9e6102e08e015290925090506000610ae36117d8565b6020816103008f60085afa9150811580610aff57508051600114155b15610b1d57604051631ff3747d60e21b815260040160405180910390fd5b50505050505050505050505050505050505050565b6000600080516020611a6c83398151915283101580610b5f5750600080516020611a6c8339815191528210155b15610b7d57604051631ff3747d60e21b815260040160405180910390fd5b82158015610b89575081155b15610b9657506000610c21565b6000610bd5600080516020611a6c8339815191526003600080516020611a6c83398151915287600080516020611a6c833981519152898a0909086114f0565b9050808303610bea575050600182901b610c21565b610bf381611554565b8303610c06575050600182811b17610c21565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b600080600080516020611a6c83398151915286101580610c555750600080516020611a6c8339815191528510155b80610c6e5750600080516020611a6c8339815191528410155b80610c875750600080516020611a6c8339815191528310155b15610ca557604051631ff3747d60e21b815260040160405180910390fd5b82848688171717600003610cbe57506000905080610f15565b60008080600080516020611a6c833981519152610cea6003600080516020611a6c833981519152611a4a565b600080516020611a6c8339815191528a8c090990506000600080516020611a6c8339815191528a600080516020611a6c8339815191528c8d090990506000600080516020611a6c8339815191528a600080516020611a6c8339815191528c8d09099050600080516020611a6c83398151915280600080516020611a6c8339815191528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089450610de3600080516020611a6c83398151915280600080516020611a6c8339815191528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611554565b9350505050600080610e34600080516020611a6c83398151915280610e0a57610e0a611a12565b600080516020611a6c833981519152858609600080516020611a6c833981519152878809086114f0565b9050610e81600080516020611a6c8339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611a6c8339815191528488080961156d565b15915050610e908383836115b7565b90935091508683148015610ea357508186145b15610ecd5780610eb4576000610eb7565b60025b60ff1660028a901b176000179450879350610f11565b610ed683611554565b87148015610eeb5750610ee882611554565b86145b15610c065780610efc576000610eff565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b6000806000600190506040516040810160007f23a6b4bcbc013c625447dfd2a8f3c8831c945eba3babf6df4eaa91fa93af82eb83527f25d88d132b9ea6aa10f9f2e2e42904c02ee8cf9d32119fa01e1ae5ae383607d06020840152865182526020870151602083015260408360808560065afa841693507f0cb5294d5e4021391651e3ebfc32c08b4a92fa2590fac2f6b1ce228960fab2ff82527f0415986b9fd203f7c07193212682e0ee44896b7a4a20a6cc9eb5e01d2ecc61e1602083015288359050806040830152600080516020611a8c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f05c313000df7c704704202693122eb9ce692e56a8869e68b03400901351f011682527f0b6ae5b7e30c57d7db492afc5dd6eab4c9251da1d5eec8fcba488cd63258113a602083015260208901359050806040830152600080516020611a8c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f290a66b9b9e6119629f3633bd576022906ffb55f8b269b7b062bb329e3decc2782527f2b27a9a447493bc403b7ff53888d6a9f6b1c145139fdf13eb01f4e90822b20d3602083015260408901359050806040830152600080516020611a8c83398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f21f56e108fba0eb306e50412ec4387ad4c0c695a164d06de1ef9309be32ddce282527f10e619746b90d45ae745b39047d4f11c76c7997de107987d0187ec26586b3fb7602083015260608901359050806040830152600080516020611a8c83398151915281108416935060408260608460075afa8416935060408360808560065afa7f115909862a8e577a0b1c6f8f97e33812d949f8ef410b974fd9ffd1b5b24a85c183527f29f896de17b10c42f3769b5f76e92e08f6387436e118c6a73483d55046493601602084015288516040808501829052600080516020611a8c83398151915290911091909516169390508160608160075afa831692505060408160808360065afa8151602090920151919450909250168061125b5760405163a54f8e2760e01b815260040160405180910390fd5b50935093915050565b6000808260000361127a57506000928392509050565b600183811c925080841614600080516020611a6c83398151915283106112b357604051631ff3747d60e21b815260040160405180910390fd5b6112f0600080516020611a6c8339815191526003600080516020611a6c83398151915286600080516020611a6c83398151915288890909086114f0565b915080156113045761130182611554565b91505b50915091565b60008080808515801561131b575084155b15611331575060009250829150819050806114e7565b600286811c94508593506001808816149080881614600080516020611a6c833981519152861015806113715750600080516020611a6c8339815191528510155b1561138f57604051631ff3747d60e21b815260040160405180910390fd5b6000600080516020611a6c8339815191526113b96003600080516020611a6c833981519152611a4a565b600080516020611a6c833981519152888a090990506000600080516020611a6c83398151915288600080516020611a6c8339815191528a8b090990506000600080516020611a6c83398151915288600080516020611a6c8339815191528a8b09099050600080516020611a6c83398151915280600080516020611a6c8339815191528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50896506114b2600080516020611a6c83398151915280600080516020611a6c8339815191528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611554565b95506114bf8787866115b7565b909750955084156114e1576114d387611554565b96506114de86611554565b95505b50505050505b92959194509250565b600061151c827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526116f5565b905081600080516020611a6c8339815191528283091461154f57604051631ff3747d60e21b815260040160405180910390fd5b919050565b600080516020611a6c8339815191529081900681030690565b60008061159a837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526116f5565b905082600080516020611a6c833981519152828309149392505050565b600080806115e9600080516020611a6c83398151915280878809600080516020611a6c833981519152898a09086114f0565b905083156115fd576115fa81611554565b90505b611648600080516020611a6c8339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611a6c833981519152848a08096114f0565b9250600080516020611a6c833981519152611674600080516020611a6c8339815191526002860961175a565b86099150600080516020611a6c8339815191526116a1600080516020611a6c833981519152848509611554565b600080516020611a6c83398151915285860908861415806116d75750600080516020611a6c833981519152808385096002098514155b1561125b57604051631ff3747d60e21b815260040160405180910390fd5b6000806040516020815260208082015260206040820152846060820152836080820152600080516020611a6c83398151915260a082015260208160c08360055afa90519250905080610c1f57604051631ff3747d60e21b815260040160405180910390fd5b6000611786827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd456116f5565b9050600080516020611a6c83398151915281830960011461154f57604051631ff3747d60e21b815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b806101008101831015610c2157600080fd5b8060408101831015610c2157600080fd5b6000806000610180848603121561186c57600080fd5b6118768585611833565b9250611886856101008601611845565b9150611896856101408601611845565b90509250925092565b60c08101818560005b60048110156118c75781518352602092830192909101906001016118a8565b505050608082018460005b60018110156118f15781518352602092830192909101906001016118d2565b5050508260a0830152949350505050565b8060808101831015610c2157600080fd5b600080600080610200858703121561192a57600080fd5b6119348686611833565b9350611944866101008701611845565b9250611954866101408701611845565b9150611964866101808701611902565b905092959194509250565b600080600080610140858703121561198657600080fd5b6119908686611902565b935060a08501868111156119a357600080fd5b6080860193503591506119648660c08701611902565b634e487b7160e01b600052603260045260246000fd5b83815282602082015260006040820183516020850160005b82811015611a055781518452602093840193909101906001016119e7565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611a4557634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610c2157634e487b7160e01b600052601160045260246000fdfe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212204bcfcd7510b2b26e5d9eecbc6edbf56f6f8e233109492899e9497dadfeca38d764736f6c634300081c0033";

type StateTransitionVerifierBaseGroth16ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StateTransitionVerifierBaseGroth16ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StateTransitionVerifierBaseGroth16__factory extends ContractFactory {
  constructor(...args: StateTransitionVerifierBaseGroth16ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StateTransitionVerifierBaseGroth16 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StateTransitionVerifierBaseGroth16__factory {
    return super.connect(runner) as StateTransitionVerifierBaseGroth16__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StateTransitionVerifierBaseGroth16Interface {
    return new Interface(_abi) as StateTransitionVerifierBaseGroth16Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StateTransitionVerifierBaseGroth16 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StateTransitionVerifierBaseGroth16;
  }
}
