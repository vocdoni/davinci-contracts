/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProcessRegistry,
  ProcessRegistryInterface,
} from "../../src/ProcessRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_chainID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_stVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BlobVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotAcceptResult",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBlobHash",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusOrigin",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusURI",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxMinValueBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValueSum",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxVotes",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinTotalCost",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProcessId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimeBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUniqueValues",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValueSumBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnknownProcessIdPrefix",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "censusRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "censusURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    name: "CensusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProcessCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "ProcessDurationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    name: "ProcessResultsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newStateRoot",
        type: "uint256",
      },
    ],
    name: "ProcessStateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "oldStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProcessStatusChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "BLOB_INDEX",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CENSUS_ORIGIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_STATUS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
    ],
    name: "getNextProcessId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcess",
    outputs: [
      {
        components: [
          {
            internalType: "enum IProcessRegistry.ProcessStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "organizationId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.EncryptionKey",
            name: "encryptionKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "latestStateRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "result",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteOverwriteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "creationBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "costFromWeight",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "uniqueValues",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "numFields",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "costExponent",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxValueSum",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValueSum",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.BallotMode",
            name: "ballotMode",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IProcessRegistry.CensusOrigin",
                name: "censusOrigin",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "censusRoot",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "censusURI",
                type: "string",
              },
            ],
            internalType: "struct IProcessRegistry.Census",
            name: "census",
            type: "tuple",
          },
        ],
        internalType: "struct IProcessRegistry.Process",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcessEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSTVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "uniqueValues",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "numFields",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValueSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValueSum",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "initStateRoot",
        type: "uint256",
      },
    ],
    name: "newProcess",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pidPrefix",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "processNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processes",
    outputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "latestStateRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteOverwriteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creationBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchNumber",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "uniqueValues",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "numFields",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxValueSum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValueSum",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    name: "setProcessCensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProcessDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "setProcessResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "setProcessStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "submitStateTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051612bc9380380612bc983398101604081905261002e91610121565b60028054600380546001600160a01b0319166001600160a01b0385811691909117909155600160201b600160e01b0319909116680100000000000000009185169190910263ffffffff60201b19161764010000000063ffffffff8616021790556100de83306040805160e09390931b6001600160e01b03191660208085019190915260609290921b6001600160601b03191660248401528051601881850301815260389093019052815191012090565b600360146101000a81548163ffffffff021916908363ffffffff16021790555050505061016b565b80516001600160a01b038116811461011c575f5ffd5b919050565b5f5f5f60608486031215610133575f5ffd5b835163ffffffff81168114610146575f5ffd5b925061015460208501610106565b915061016260408501610106565b90509250925092565b612a51806101785f395ff3fe608060405234801561000f575f5ffd5b5060043610610132575f3560e01c806372c628ef116100b4578063a5f01e1911610079578063a5f01e19146102d1578063adc879e9146102e4578063c718c01f146102fc578063cddf08bc1461030f578063d71d072e14610326578063f9aa449914610339575f5ffd5b806372c628ef1461025e578063848df54014610266578063992bc45b1461028b5780639c18deaf146102ab578063a5b110de146102be575f5ffd5b80634c0acc56116100fa5780634c0acc56146101db57806356a6f1e2146101e357806362fa11fc146101f857806368141f2c146102385780636bae04ea1461024b575f5ffd5b806302cc919a146101365780630535fece14610155578063097063921461018157806326795bc3146101b35780633365133c146101ba575b5f5ffd5b61013e600981565b60405160ff90911681526020015b60405180910390f35b610168610163366004611f35565b610341565b60405161014c9d9c9b9a9998979695949392919061204e565b60025461019b90600160401b90046001600160a01b031681565b6040516001600160a01b03909116815260200161014c565b61013e5f81565b6101cd6101c8366004612176565b610588565b60405190815260200161014c565b6101cd61074b565b6101f66101f136600461223e565b6107c6565b005b610220610206366004612268565b60016020525f90815260409020546001600160401b031681565b6040516001600160401b03909116815260200161014c565b6101cd610246366004612268565b6109c3565b6101f661025936600461228e565b610a1c565b61013e600481565b6002546102769063ffffffff1681565b60405163ffffffff909116815260200161014c565b61029e610299366004611f35565b610cbb565b60405161014c919061230b565b60035461019b906001600160a01b031681565b6101f66102cc366004612416565b610fcb565b6101cd6102df366004611f35565b6112f4565b60025461027690640100000000900463ffffffff1681565b6101f661030a36600461248d565b611616565b60035461027690600160a01b900463ffffffff1681565b6101f6610334366004612416565b6117c8565b6101cd6119fc565b5f60208181529181526040908190208054825180840190935260018201548352600282015493830193909352600381015460058201546006830154600784015460088501546009860154600a870154600b8801805460ff8c169b61010090046001600160a01b03169a9991906103b6906124ad565b80601f01602080910402602001604051908101604052809291908181526020018280546103e2906124ad565b801561042d5780601f106104045761010080835404028352916020019161042d565b820191905f5260205f20905b81548152906001019060200180831161041057829003601f168201915b5050604080516101008082018352600c88015460ff808216151584529181048216151560208401526201000081048216838501526301000000900481166060830152600d880154608080840191909152600e89015460a0840152600f89015460c0840152601089015460e084015283519081019093526011880180549798929792965092945091925083911660098111156104ca576104ca611f4c565b60098111156104db576104db611f4c565b81526020016001820154815260200160028201548152602001600382018054610503906124ad565b80601f016020809104026020016040519081016040528092919081815260200182805461052f906124ad565b801561057a5780601f106105515761010080835404028352916020019161057a565b820191905f5260205f20905b81548152906001019060200180831161055d57829003601f168201915b50505050508152505090508d565b600354335f818152600160205260408082205491936001600160401b03909216600160a01b909204901b63ffffffff60401b16606083901b17176105d181838e8e8e8e8e611a43565b5f81815260208190526040902080548d90829060ff191660018360048111156105fc576105fc611f4c565b0217905550600581018c9055600681018b90558054610100600160a81b0319166101006001600160a01b03851602178155853560018201556020860135600282015560038101859055600b8101610654888a8361253f565b5089600c82016106648282612625565b50899050601182016106768282612733565b50504360098201556002805463ffffffff16905f610693836127db565b825463ffffffff9182166101009390930a9283029190920219909116179055506001600160a01b0383165f90815260016020526040812080546001600160401b0316916106df836127ff565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050826001600160a01b0316827fada6f87a2a16a0c9c169ca36754c5f33f7c1a973b575d068f888a549ed4faefa60405160405180910390a3509b9a5050505050505050505050565b5f600260089054906101000a90046001600160a01b03166001600160a01b031663233ace116040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107c19190612820565b905090565b816107e45760405163cbf4a64560e01b815260040160405180910390fd5b600354604083901c63ffffffff908116600160a01b909204161461081b57604051632299770d60e11b815260040160405180910390fd5b6004818181111561082e5761082e611f4c565b60ff161115610850576040516307a92f1960e51b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b031661088a57604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b031633146108b8576040516282b42960e81b815260040160405180910390fd5b805460ff166108c78184611cce565b6108e4576040516307a92f1960e51b815260040160405180910390fd5b81548390839060ff1916600183600481111561090257610902611f4c565b0217905550600183600481111561091b5761091b611f4c565b03610983575f8260050154421061094257600583015461093b9042612837565b9050610945565b505f5b6006830181905560405181815285907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505b837f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c82856040516109b592919061284a565b60405180910390a250505050565b6003546001600160a01b0382165f908152600160205260408082205491926001600160401b03909216600160a01b909204901b63ffffffff60401b16606084901b6bffffffffffffffffffffffff191617175b92915050565b81610a3a5760405163cbf4a64560e01b815260040160405180910390fd5b600354604083901c63ffffffff908116600160a01b9092041614610a7157604051632299770d60e11b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b0316610aab57604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610ad9576040516282b42960e81b815260040160405180910390fd5b610ae66020830183612865565b6009811115610af757610af7611f4c565b601182015460ff166009811115610b1057610b10611f4c565b14610b2e5760405163f37f7b5d60e01b815260040160405180910390fd5b601281015460208301351015610b5757604051634f9233a560e01b815260040160405180910390fd5b6040820135610b7957604051635e32eadd60e01b815260040160405180910390fd5b610b8660608301836126f1565b90505f03610ba757604051630f8b932160e11b815260040160405180910390fd5b5f815460ff166004811115610bbe57610bbe611f4c565b14158015610be257506003815460ff166004811115610bdf57610bdf611f4c565b14155b15610c00576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154610c159190612880565b11610c335760405163e843c5eb60e01b815260040160405180910390fd5b6020820135601282015560408201356013820155610c5460608301836126f1565b6014830191610c6491908361253f565b50827f35947a8913e2156f19b018078c9f0667e49cb3dc24af3434a4d0b16b82675b1b6040840135610c9960608601866126f1565b8660200135604051610cae94939291906128bb565b60405180910390a2505050565b610cc3611dec565b5f828152602081905260409081902081516101c081019092528054829060ff166004811115610cf457610cf4611f4c565b6004811115610d0557610d05611f4c565b8152815461010090046001600160a01b03166020808301919091526040805180820182526001850154815260028501548184015281840152600384015460608401526004840180548251818502810185019093528083526080909401939192909190830182828015610d9457602002820191905f5260205f20905b815481526020019060010190808311610d80575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b82018054610de9906124ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610e15906124ad565b8015610e605780601f10610e3757610100808354040283529160200191610e60565b820191905f5260205f20905b815481529060010190602001808311610e4357829003601f168201915b5050509183525050604080516101008082018352600c85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600d860154608080850191909152600e87015460a0850152600f87015460c0850152601087015460e08501529085019290925282519182018352601185018054939094019391928391166009811115610f0857610f08611f4c565b6009811115610f1957610f19611f4c565b81526020016001820154815260200160028201548152602001600382018054610f41906124ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6d906124ad565b8015610fb85780601f10610f8f57610100808354040283529160200191610fb8565b820191905f5260205f20905b815481529060010190602001808311610f9b57829003601f168201915b5050509190925250505090525092915050565b84610fe95760405163cbf4a64560e01b815260040160405180910390fd5b600354604086901c63ffffffff908116600160a01b909204161461102057604051632299770d60e11b815260040160405180910390fd5b5f858152602081905260409020805461010090046001600160a01b031661105a57604051634d36eb6960e01b815260040160405180910390fd5b6002815460ff16600481111561107257611072611f4c565b148061109357506004815460ff16600481111561109157611091611f4c565b145b156110b1576040516307a92f1960e51b815260040160405180910390fd5b6001815460ff1660048111156110c9576110c9611f4c565b141580156110e9575042816006015482600501546110e79190612880565b115b156111075760405163e843c5eb60e01b815260040160405180910390fd5b8054600354604051635c73957b60e11b815260ff909216916001600160a01b039091169063b8e72af6906111459089908990899089906004016128e5565b5f6040518083038186803b15801561115b575f5ffd5b505afa15801561116d573d5f5f3e3d5ffd5b505f925061118091505084860186612916565b60038401548151919250146111a857604051630b6fac0360e41b815260040160405180910390fd5b5f6111b560016009612837565b6001600160401b038111156111cc576111cc6124df565b6040519080825280602002602001820160405280156111f5578160200160208202803683370190505b50905060015b600981101561124a5782816009811061121657611216612992565b602002015182611227600184612837565b8151811061123757611237612992565b60209081029190910101526001016111fb565b50835460ff191660049081178555815161126b918601906020840190611ed8565b50887f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c84600460405161129f92919061284a565b60405180910390a2336001600160a01b0316897f5da8009aeb11de7ef64598b0de897a03d2f93efabda8507a70e29cca4530cf5d836040516112e191906129a6565b60405180910390a3505050505050505050565b5f8181526020819052604080822081516101c08101909252805483929190829060ff16600481111561132857611328611f4c565b600481111561133957611339611f4c565b8152815461010090046001600160a01b031660208083019190915260408051808201825260018501548152600285015481840152818401526003840154606084015260048401805482518185028101850190935280835260809094019391929091908301828280156113c857602002820191905f5260205f20905b8154815260200190600101908083116113b4575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201805461141d906124ad565b80601f0160208091040260200160405190810160405280929190818152602001828054611449906124ad565b80156114945780601f1061146b57610100808354040283529160200191611494565b820191905f5260205f20905b81548152906001019060200180831161147757829003601f168201915b5050509183525050604080516101008082018352600c85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600d860154608080850191909152600e87015460a0850152600f87015460c0850152601087015460e0850152908501929092528251918201835260118501805493909401939192839116600981111561153c5761153c611f4c565b600981111561154d5761154d611f4c565b81526020016001820154815260200160028201548152602001600382018054611575906124ad565b80601f01602080910402602001604051908101604052809291908181526020018280546115a1906124ad565b80156115ec5780601f106115c3576101008083540402835291602001916115ec565b820191905f5260205f20905b8154815290600101906020018083116115cf57829003601f168201915b5050505050815250508152505090508060c001518160a0015161160f9190612880565b9392505050565b816116345760405163cbf4a64560e01b815260040160405180910390fd5b600354604083901c63ffffffff908116600160a01b909204161461166b57604051632299770d60e11b815260040160405180910390fd5b5f828152602081905260409020805461010090046001600160a01b03166116a557604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b031633146116d3576040516282b42960e81b815260040160405180910390fd5b805460ff165f8160048111156116eb576116eb611f4c565b1415801561170b5750600381600481111561170857611708611f4c565b14155b15611729576040516307a92f1960e51b815260040160405180910390fd5b600582015460068301548415806117495750426117468684612880565b11155b8061176657506117598183612880565b6117638684612880565b11155b1561178457604051637616640160e01b815260040160405180910390fd5b6006840185905560405185815286907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505050505050565b846117e65760405163cbf4a64560e01b815260040160405180910390fd5b600354604086901c63ffffffff908116600160a01b909204161461181d57604051632299770d60e11b815260040160405180910390fd5b5f858152602081905260409020805461010090046001600160a01b031661185757604051634d36eb6960e01b815260040160405180910390fd5b5f815460ff16600481111561186e5761186e611f4c565b1461188c576040516307a92f1960e51b815260040160405180910390fd5b42816006015482600501546118a19190612880565b116118bf5760405163e843c5eb60e01b815260040160405180910390fd5b600254604051635c73957b60e11b8152600160401b9091046001600160a01b03169063b8e72af6906118fb9088908890889088906004016128e5565b5f6040518083038186803b158015611911575f5ffd5b505afa158015611923573d5f5f3e3d5ffd5b505f925061193691505083850185612916565b600383015481519192501461195e57604051630b6fac0360e41b815260040160405180910390fd5b6020810151600383015560408101516007830180545f90611980908490612880565b909155505060608101516008830180545f9061199d908490612880565b9091555050600a82018054905f6119b3836129e8565b9091555050602080820151604051908152339189917fdc9b2774f92abfeee93d8b2ef67d59cd90c2d6d740b01c24fd9ec109a71865fc910160405180910390a350505050505050565b6003546040805163233ace1160e01b815290515f926001600160a01b03169163233ace119160048083019260209291908290030181865afa15801561079d573d5f5f3e3d5ffd5b5f878152602081905260409020546001600160a01b038088166101009092041603611a8157604051635040c4d360e11b815260040160405180910390fd5b611a916060830160408401612a00565b60ff161580611ab257506008611aad6060840160408501612a00565b60ff16115b15611ad05760405163ac38930b60e01b815260040160405180910390fd5b61ffff8260c001351115611af757604051634dba795160e01b815260040160405180910390fd5b81608001358260a001351115611b205760405163207ea56d60e01b815260040160405180910390fd5b8160c001358260e001351115611b4957604051636d403ec760e11b815260040160405180910390fd5b6009611b586020830183612865565b6009811115611b6957611b69611f4c565b60ff161115611b8b5760405163f37f7b5d60e01b815260040160405180910390fd5b80602001355f03611baf57604051634f9233a560e01b815260040160405180910390fd5b6040810135611bd157604051635e32eadd60e01b815260040160405180910390fd5b611bde60608201826126f1565b90505f03611bff57604051630f8b932160e11b815260040160405180910390fd5b60048581811115611c1257611c12611f4c565b60ff161180611c4f57505f856004811115611c2f57611c2f611f4c565b14158015611c4f57506003856004811115611c4c57611c4c611f4c565b14155b15611c6d576040516307a92f1960e51b815260040160405180910390fd5b425f859003611c7a578094505b80851015611c9b57604051632ca4094f60e21b815260040160405180910390fd5b80611ca68587612880565b11611cc457604051637616640160e01b815260040160405180910390fd5b5050505050505050565b5f826004811115611ce157611ce1611f4c565b826004811115611cf357611cf3611f4c565b03611cff57505f610a16565b6002836004811115611d1357611d13611f4c565b1480611d3057506004836004811115611d2e57611d2e611f4c565b145b80611d4c57506001836004811115611d4a57611d4a611f4c565b145b15611d5857505f610a16565b5f836004811115611d6b57611d6b611f4c565b03611dc55760035b826004811115611d8557611d85611f4c565b1480611da257506002826004811115611da057611da0611f4c565b145b80611dbe57506001826004811115611dbc57611dbc611f4c565b145b9050610a16565b6003836004811115611dd957611dd9611f4c565b03611de4575f611d73565b505f92915050565b604080516101c08101909152805f81526020015f6001600160a01b03168152602001611e2960405180604001604052805f81526020015f81525090565b81526020015f8152602001606081526020015f81526020015f81526020015f81526020015f81526020015f81526020015f815260200160608152602001611eb06040518061010001604052805f151581526020015f151581526020015f60ff1681526020015f60ff1681526020015f81526020015f81526020015f81526020015f81525090565b8152604080516080810182525f80825260208281018290529282015260608082015291015290565b828054828255905f5260205f20908101928215611f11579160200282015b82811115611f11578251825591602001919060010190611ef6565b50611f1d929150611f21565b5090565b5b80821115611f1d575f8155600101611f22565b5f60208284031215611f45575f5ffd5b5035919050565b634e487b7160e01b5f52602160045260245ffd5b60058110611f7057611f70611f4c565b9052565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b80511515825260208101511515602083015260ff60408201511660408301526060810151611fd5606084018260ff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b5f8151600a811061201557612015611f4c565b8084525060208201516020840152604082015160408401526060820151608060608501526120466080850182611f74565b949350505050565b612058818f611f60565b6001600160a01b038d16602082015261207e604082018d80518252602090810151910152565b8a60808201528960a08201528860c08201528760e08201528661010082015285610120820152846101408201526102a06101608201525f6120c36102a0830186611f74565b6120d1610180840186611fa2565b8281036102808401526120e48185612002565b9150509e9d5050505050505050505050505050565b803560058110612107575f5ffd5b919050565b5f6080828403121561211c575f5ffd5b50919050565b5f5f83601f840112612132575f5ffd5b5081356001600160401b03811115612148575f5ffd5b60208301915083602082850101111561215f575f5ffd5b9250929050565b5f6040828403121561211c575f5ffd5b5f5f5f5f5f5f5f5f5f898b03610200811215612190575f5ffd5b6121998b6120f9565b995060208b0135985060408b01359750610100605f19820112156121bb575f5ffd5b5060608a0195506101608a01356001600160401b038111156121db575f5ffd5b6121e78c828d0161210c565b9550506101808a01356001600160401b03811115612203575f5ffd5b61220f8c828d01612122565b909550935061222490508b6101a08c01612166565b989b979a5095989497939692955090936101e00135919050565b5f5f6040838503121561224f575f5ffd5b8235915061225f602084016120f9565b90509250929050565b5f60208284031215612278575f5ffd5b81356001600160a01b038116811461160f575f5ffd5b5f5f6040838503121561229f575f5ffd5b8235915060208301356001600160401b038111156122bb575f5ffd5b6122c78582860161210c565b9150509250929050565b5f8151808452602084019350602083015f5b828110156123015781518652602095860195909101906001016122e3565b5093949350505050565b6020815261231d602082018351611f60565b5f602083015161233860408401826001600160a01b03169052565b506040830151805160608401526020810151608084015250606083015160a083015260808301516102c060c08401526123756102e08401826122d1565b905060a084015160e084015260c084015161010084015260e0840151610120840152610100840151610140840152610120840151610160840152610140840151610180840152610160840151601f19848303016101a08501526123d88282611f74565b9150506101808401516123ef6101c0850182611fa2565b506101a0840151838203601f19016102c085015261240d8282612002565b95945050505050565b5f5f5f5f5f6060868803121561242a575f5ffd5b8535945060208601356001600160401b03811115612446575f5ffd5b61245288828901612122565b90955093505060408601356001600160401b03811115612470575f5ffd5b61247c88828901612122565b969995985093965092949392505050565b5f5f6040838503121561249e575f5ffd5b50508035926020909101359150565b600181811c908216806124c157607f821691505b60208210810361211c57634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f82111561253a57805f5260205f20601f840160051c810160208510156125185750805b601f840160051c820191505b81811015612537575f8155600101612524565b50505b505050565b6001600160401b03831115612556576125566124df565b61256a8361256483546124ad565b836124f3565b5f601f84116001811461259b575f85156125845750838201355b5f19600387901b1c1916600186901b178355612537565b5f83815260208120601f198716915b828110156125ca57868501358255602094850194600190920191016125aa565b50868210156125e6575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b5f81358015158114610a16575f5ffd5b60ff81168114612616575f5ffd5b50565b5f8135610a1681612608565b61262e826125f8565b151560ff1982541660ff821681178355505061266961264f602084016125f8565b82805461ff00191691151560081b61ff0016919091179055565b61269061267860408401612619565b825462ff0000191660109190911b62ff000016178255565b6126b961269f60608401612619565b825463ff000000191660189190911b63ff00000016178255565b6080820135600182015560a0820135600282015560c0820135600382015560e090910135600490910155565b600a8110612616575f5ffd5b5f5f8335601e19843603018112612706575f5ffd5b8301803591506001600160401b0382111561271f575f5ffd5b60200191503681900382131561215f575f5ffd5b813561273e816126e5565b600a811061274e5761274e611f4c565b815460ff191660ff9190911617815560208201356001820155604082013560028201556060820135601e1936849003018112612788575f5ffd5b820180356001600160401b0381111561279f575f5ffd5b6020820191508036038213156127b3575f5ffd5b6127c181836003860161253f565b50505050565b634e487b7160e01b5f52601160045260245ffd5b5f63ffffffff821663ffffffff81036127f6576127f66127c7565b60010192915050565b5f6001600160401b0382166001600160401b0381036127f6576127f66127c7565b5f60208284031215612830575f5ffd5b5051919050565b81810381811115610a1657610a166127c7565b604081016128588285611f60565b61160f6020830184611f60565b5f60208284031215612875575f5ffd5b813561160f816126e5565b80820180821115610a1657610a166127c7565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b848152606060208201525f6128d4606083018587612893565b905082604083015295945050505050565b604081525f6128f8604083018688612893565b828103602084015261290b818587612893565b979650505050505050565b5f6101208284031215612927575f5ffd5b82601f830112612935575f5ffd5b60405161012081018181106001600160401b0382111715612958576129586124df565b6040528061012084018581111561296d575f5ffd5b845b8181101561298757803583526020928301920161296f565b509195945050505050565b634e487b7160e01b5f52603260045260245ffd5b602080825282518282018190525f918401906040840190835b818110156129dd5783518352602093840193909201916001016129bf565b509095945050505050565b5f600182016129f9576129f96127c7565b5060010190565b5f60208284031215612a10575f5ffd5b813561160f8161260856fea26469706673582212201f9ffaa94bda2424b3edfe54f648a2c0f0e88e85a9f69b345a6f75f4156fa43664736f6c634300081c0033";

type ProcessRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProcessRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProcessRegistry__factory extends ContractFactory {
  constructor(...args: ProcessRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    );
  }
  override deploy(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    ) as Promise<
      ProcessRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProcessRegistry__factory {
    return super.connect(runner) as ProcessRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProcessRegistryInterface {
    return new Interface(_abi) as ProcessRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProcessRegistry {
    return new Contract(address, _abi, runner) as unknown as ProcessRegistry;
  }
}
