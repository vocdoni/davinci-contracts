/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ResultsVerifierGroth16,
  ResultsVerifierGroth16Interface,
} from "../../../src/verifiers/ResultsVerifierGroth16";

const _abi = [
  {
    inputs: [],
    name: "CommitmentInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provingKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
      {
        internalType: "uint256[9]",
        name: "input",
        type: "uint256[9]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[9]",
        name: "input",
        type: "uint256[9]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_input",
        type: "bytes",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506120c58061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c8063233ace11146100595780635d26278e1461008c57806360e58346146100a1578063b1c3a00e146100b4578063b8e72af6146100d6575b5f5ffd5b6040517ffa5a8dbbf97d096938ce009351617ddd8d5b666c2555445beda7691dc9bc86e181526020015b60405180910390f35b61009f61009a366004611b75565b6100e9565b005b61009f6100af366004611beb565b61061d565b6100c76100c2366004611c39565b610a92565b60405161008393929190611c7f565b61009f6100e4366004611d25565b610b1a565b6100f1611aad565b6100f9611acb565b610101611ae9565b610111865f5b6020020135610b95565b602084015282525f8061012387610b95565b85516020808801516040519496509294506060935f5160206120705f395f51905f529361015593929091869101611da5565b604051602081830303815290604052805190602001205f1c6101779190611dfa565b865284518452602085810151858201527f19eb044e2c85491c384b76edc896f2b52f488013f0c60bf19dd420e1aaaa952d6040808701919091527f08978b8df169b614eb9a9d7af3558f8fffb90265c4afb8b9eec2cab344928d8860608701527f03d31fcecfb5e8277e0fd52226c7be465ce5cc1f917bc603f0d4b6b88b5cc37e60808701527f1e266ae54ec2a87c930e345a5518eeb782244a6f01ec648dc7518ff4e2563c5160a087015260c0860185905260e086018490527f2fd0451d0a271e4499737e0f791d495a7cbb4bc8e78888f5bd2bccb648b2a29f6101008701527f2b4a9077a1f1f0f489d16657d1928ac02a33c6d9bab3f7b15ba3d80ae66f14b16101208701527f256a392582988f4dee83a43b4091ab14b6112b86ef5b02bc20e7ab7aba3eb6096101408701527f09100d9feeea9ebdb6e353984639fab92f3a7628c3bd28fbcad7d9b77860dcfd610160870152515f91816101808860085afa9051169050806102fc576040516351d49ff760e11b815260040160405180910390fd5b505050505f5f610317895f6004811061010757610107611d91565b90925090505f80808061033260408e013560208f0135610c34565b929650909450925090505f806103498f6003610107565b915091505f5f61035a8e8e8e610e08565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f24661f202e49a0d65271ef898c50218ad776a144706246a3112b4e5654573b6a6101008e01527f2fa5d310e5d20476242391aa4fadabf546ceb259818b2d94f764ff486f2cc38f6101208e01527f21c413ea3687d4bd2c8d28b10e52550f0b223374c215b9a35aab3c72e851448d6101408e01527f18ed4f12fc79b313e899b90f02d322136e2a0603cb4e99a9568c9b27af5a27c96101608e01527f24cb8bbc16572a3266fe5d741fa8ab51794d268643401d14c5ce198a6285cc0a6101808e01527f213e61f0ffe099b893a5e5264b314cf310b949c8c5b8b0af033cf57571b634bb6101a08e01527f0344482d1021ad818de4f2f3c9acdd90a215fba6c3ad890e8da43c5d8145b9846101c08e01527f2ceca38cf641cae6e710ec701610859b7017fc090e7f4dcfb8f0f23cead258216101e08e01527f1a67f5b91e66ff377a5f164665eca47989c08be9769945e9761e970f1d3034276102008e01527f10a9b984b6934673ef6394e7bfb6d0c76fdc6e0bdf1ed900e6bce781cd3cc8bd6102208e01526102408d018290526102608d018190527f26c13ab8e0601c2ff49051d0d3c2fb129d043a92971a18b0c64909d0b52ba9b46102808e01527f11416a10eac139cc46dcf4ae5421f23a5da3cc2af52de8d41465429002e0a21a6102a08e01527f25481f4e9a2dee079701522d9e5a9e92fd4dc99ef6e23570f1a8cf25a1c305396102c08e01527f2bfbaa1c8dba1c3af7f5e322681dc5c226d9010562774abc2eebdf92046462e56102e08e015290925090505f6105ce611aad565b6020816103008f60085afa91508115806105ea57508051600114155b1561060857604051631ff3747d60e21b815260040160405180910390fd5b50505050505050505050505050505050505050565b610625611aad565b6040516060905f5160206120705f395f51905f5290610650908735906020808a013591869101611da5565b604051602081830303815290604052805190602001205f1c6106729190611dfa565b8252604080515f918782377f19eb044e2c85491c384b76edc896f2b52f488013f0c60bf19dd420e1aaaa952d60408201527f08978b8df169b614eb9a9d7af3558f8fffb90265c4afb8b9eec2cab344928d8860608201527f03d31fcecfb5e8277e0fd52226c7be465ce5cc1f917bc603f0d4b6b88b5cc37e60808201527f1e266ae54ec2a87c930e345a5518eeb782244a6f01ec648dc7518ff4e2563c5160a082015260408660c08301377f2fd0451d0a271e4499737e0f791d495a7cbb4bc8e78888f5bd2bccb648b2a29f6101008201527f2b4a9077a1f1f0f489d16657d1928ac02a33c6d9bab3f7b15ba3d80ae66f14b16101208201527f256a392582988f4dee83a43b4091ab14b6112b86ef5b02bc20e7ab7aba3eb6096101408201527f09100d9feeea9ebdb6e353984639fab92f3a7628c3bd28fbcad7d9b77860dcfd6101608201526020816101808360085afa9051169050806107e7576040516351d49ff760e11b815260040160405180910390fd5b5f5f61081c86868a60028060200260405190810160405280929190826002602002808284375f92019190915250610e08915050565b915091506040516101008a82377f24661f202e49a0d65271ef898c50218ad776a144706246a3112b4e5654573b6a6101008201527f2fa5d310e5d20476242391aa4fadabf546ceb259818b2d94f764ff486f2cc38f6101208201527f21c413ea3687d4bd2c8d28b10e52550f0b223374c215b9a35aab3c72e851448d6101408201527f18ed4f12fc79b313e899b90f02d322136e2a0603cb4e99a9568c9b27af5a27c96101608201527f24cb8bbc16572a3266fe5d741fa8ab51794d268643401d14c5ce198a6285cc0a6101808201527f213e61f0ffe099b893a5e5264b314cf310b949c8c5b8b0af033cf57571b634bb6101a08201527f0344482d1021ad818de4f2f3c9acdd90a215fba6c3ad890e8da43c5d8145b9846101c08201527f2ceca38cf641cae6e710ec701610859b7017fc090e7f4dcfb8f0f23cead258216101e08201527f1a67f5b91e66ff377a5f164665eca47989c08be9769945e9761e970f1d3034276102008201527f10a9b984b6934673ef6394e7bfb6d0c76fdc6e0bdf1ed900e6bce781cd3cc8bd61022082015282610240820152816102608201527f26c13ab8e0601c2ff49051d0d3c2fb129d043a92971a18b0c64909d0b52ba9b46102808201527f11416a10eac139cc46dcf4ae5421f23a5da3cc2af52de8d41465429002e0a21a6102a08201527f25481f4e9a2dee079701522d9e5a9e92fd4dc99ef6e23570f1a8cf25a1c305396102c08201527f2bfbaa1c8dba1c3af7f5e322681dc5c226d9010562774abc2eebdf92046462e56102e08201526020816103008360085afa905116925082610a8757604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050565b610a9a611b08565b610aa2611aad565b5f610ab686358760015b60200201356113e5565b8352610ad46060870135604088013560a089013560808a01356114d2565b60208501526040840152610aee60c0870135876007610aac565b6060840152610b008535866001610aac565b8252610b0f8435856001610aac565b905093509350939050565b5f5f5f610b2787876117ab565b91945092509050306360e58346848484610b418a8a6117dc565b6040518563ffffffff1660e01b8152600401610b609493929190611e41565b5f6040518083038186803b158015610b76575f5ffd5b505afa158015610b88573d5f5f3e3d5ffd5b5050505050505050505050565b5f5f825f03610ba857505f928392509050565b600183811c9250808416145f5160206120505f395f51905f528310610be057604051631ff3747d60e21b815260040160405180910390fd5b610c1a5f5160206120505f395f51905f5260035f5160206120505f395f51905f52865f5160206120505f395f51905f5288890909086117f7565b91508015610c2e57610c2b82611859565b91505b50915091565b5f80808085158015610c44575084155b15610c5957505f925082915081905080610dff565b600286811c945085935060018088161490808816145f5160206120505f395f51905f5286101580610c9757505f5160206120505f395f51905f528510155b15610cb557604051631ff3747d60e21b815260040160405180910390fd5b5f5f5160206120505f395f51905f52610cdc60035f5160206120505f395f51905f52611ebb565b5f5160206120505f395f51905f52888a090990505f5f5160206120505f395f51905f52885f5160206120505f395f51905f528a8b090990505f5f5160206120505f395f51905f52885f5160206120505f395f51905f528a8b090990505f5160206120505f395f51905f52805f5160206120505f395f51905f528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089650610dca5f5160206120505f395f51905f52805f5160206120505f395f51905f528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611859565b9550610dd7878786611871565b90975095508415610df957610deb87611859565b9650610df686611859565b95505b50505050505b92959194509250565b5f5f5f60019050604051604081015f7f23c328cef1bfd5134da807ff59394679beb7c7be14f0f479055b99d20ae9706283527f25416dfd12ffb16bce51902370889cf8b6eff190f0a592f6ab404aee8f0cda6b6020840152865182526020870151602083015260408360808560065afa841693507f2a9e0d835b0f7dab5af368ef064ebd625de5c640bdf48651a4fc99c4fa0fdf9982527f1b62b22d0f37a07e8860bcc90bf2890d78ee8ab486ef35277e5d2fdd564c44636020830152883590508060408301525f5160206120705f395f51905f5281108416935060408260608460075afa8416935060408360808560065afa841693507f1252f45938f2dc195150f13ac77f42b96325ba813de4633c2f7e542f2ee9e5b182527f10ebe14c291ca187452ae7fb5367a44d06cb628400482b9dceae1d4043afbb4f6020830152602089013590508060408301525f5160206120705f395f51905f5281108416935060408260608460075afa8416935060408360808560065afa841693507f0872ba846dc3353b156b466a19ca4f53bd808db958361ac6be51e8dd0148cd9e82527f2004884787ac8090f945a13a416619648805188da5bf695efeb562b5569fdb9a6020830152604089013590508060408301525f5160206120705f395f51905f5281108416935060408260608460075afa8416935060408360808560065afa841693507f0f6b0a019715416e8e6459ca81f2af0f57642036d20d738f01b0c457220f5af082527f21d3570aa5ba0b0fadf0bb037bae61460bf8ea88bee16169794949982e29667e6020830152606089013590508060408301525f5160206120705f395f51905f5281108416935060408260608460075afa8416935060408360808560065afa841693507f2e245e1c0f6f1a90c088cf549cfb182d3e70bca020d284f181b51dd3ff96c08f82527f084261badfb9fbc239b3316d85416572ed6512626290de5b9a1cf856088831dc6020830152608089013590508060408301525f5160206120705f395f51905f5281108416935060408260608460075afa8416935060408360808560065afa841693507f249a43a86bc5a0bbe84173fdd68329b0485e3611e0ad5b4ce07e1dd3c0fbef4882527f1948ecc101daa9ab9eb2a0164a5aeb2e4e862abac3117a1603643352c5c4d536602083015260a089013590508060408301525f5160206120705f395f51905f5281108416935060408260608460075afa8416935060408360808560065afa841693507f09558c91c69f504b301879574643fdd466f106122bbf9218010bf11ca2b61ff582527f0669707945c000f1c1cb31eee0525a88a0f52a75015c2fee4aef736b9c23f421602083015260c089013590508060408301525f5160206120705f395f51905f5281108416935060408260608460075afa8416935060408360808560065afa841693507f3000744b322fb560e13a80929ff2f565455e3794d92869917a696d3375c5af9882527f11e48f39fecc68cc0891092479f1c15357ec92fe3b68bf8f9bebfbb6a9f66747602083015260e089013590508060408301525f5160206120705f395f51905f5281108416935060408260608460075afa8416935060408360808560065afa841693507f13ad9532d9ad40d9447c310ecf065edd4ec8cb2fd29dae4aac88568ae5c3cbba82527f040cb32e8c3c74a978c84f8d6d0b558dd52548c16a88e382095755a477e2d8f9602083015261010089013590508060408301525f5160206120705f395f51905f5281108416935060408260608460075afa8416935060408360808560065afa7f14d95f3e1d7142c8974684f849ee0db313e09157556bf841ab3ce6cdae11d2da83527f202c45cdfb4780d0d206aa0b6c281b326c2cedbfb915da815df8643b1afb94786020840152885160408085018290525f5160206120705f395f51905f5290911091909516169390508160608160075afa831692505060408160808360065afa815160209092015191945090925016806113dc5760405163a54f8e2760e01b815260040160405180910390fd5b50935093915050565b5f5f5160206120505f395f51905f528310158061140f57505f5160206120505f395f51905f528210155b1561142d57604051631ff3747d60e21b815260040160405180910390fd5b82158015611439575081155b1561144557505f6114cc565b5f6114805f5160206120505f395f51905f5260035f5160206120505f395f51905f52875f5160206120505f395f51905f52898a0909086117f7565b9050808303611495575050600182901b6114cc565b61149e81611859565b83036114b1575050600182811b176114cc565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b5f5f5f5160206120505f395f51905f52861015806114fd57505f5160206120505f395f51905f528510155b8061151557505f5160206120505f395f51905f528410155b8061152d57505f5160206120505f395f51905f528310155b1561154b57604051631ff3747d60e21b815260040160405180910390fd5b828486881717175f0361156257505f9050806117a2565b5f80805f5160206120505f395f51905f5261158b60035f5160206120505f395f51905f52611ebb565b5f5160206120505f395f51905f528a8c090990505f5f5160206120505f395f51905f528a5f5160206120505f395f51905f528c8d090990505f5f5160206120505f395f51905f528a5f5160206120505f395f51905f528c8d090990505f5160206120505f395f51905f52805f5160206120505f395f51905f528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50894506116795f5160206120505f395f51905f52805f5160206120505f395f51905f528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611859565b93505050505f5f6116c65f5160206120505f395f51905f528061169e5761169e611de6565b5f5160206120505f395f51905f528586095f5160206120505f395f51905f52878809086117f7565b90506117115f5160206120505f395f51905f527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea45f5160206120505f395f51905f52848808096119a4565b15915050611720838383611871565b9093509150868314801561173357508186145b1561175b5780611743575f611746565b60025b60ff1660028a901b175f17945087935061179e565b61176483611859565b87148015611779575061177682611859565b86145b156114b15780611789575f61178c565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b6117b3611b26565b6117bb611acb565b6117c3611acb565b6117cf84860186611f69565b9250925092509250925092565b6117e4611b45565b6117f082840184611fe8565b9392505050565b5f611822827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526119ec565b9050815f5160206120505f395f51905f528283091461185457604051631ff3747d60e21b815260040160405180910390fd5b919050565b5f5160206120505f395f51905f529081900681030690565b5f80806118a05f5160206120505f395f51905f52808788095f5160206120505f395f51905f52898a09086117f7565b905083156118b4576118b181611859565b90505b6118fd5f5160206120505f395f51905f527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea45f5160206120505f395f51905f52848a08096117f7565b92505f5160206120505f395f51905f526119275f5160206120505f395f51905f5260028609611a4f565b860991505f5160206120505f395f51905f526119525f5160206120505f395f51905f52848509611859565b5f5160206120505f395f51905f52858609088614158061198657505f5160206120505f395f51905f52808385096002098514155b156113dc57604051631ff3747d60e21b815260040160405180910390fd5b5f5f6119d0837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526119ec565b9050825f5160206120505f395f51905f52828309149392505050565b5f5f60405160208152602080820152602060408201528460608201528360808201525f5160206120505f395f51905f5260a082015260208160c08360055afa905192509050806114ca57604051631ff3747d60e21b815260040160405180910390fd5b5f611a7a827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd456119ec565b90505f5160206120505f395f51905f5281830960011461185457604051631ff3747d60e21b815260040160405180910390fd5b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518061010001604052806008906020820280368337509192915050565b6040518061012001604052806009906020820280368337509192915050565b8061012081018310156114cc575f5ffd5b5f5f5f5f6101e08587031215611b89575f5ffd5b6080850186811115611b99575f5ffd5b85945060a0860187811115611bac575f5ffd5b909350359150611bbf8660c08701611b64565b905092959194509250565b8061010081018310156114cc575f5ffd5b80604081018310156114cc575f5ffd5b5f5f5f5f6102a08587031215611bff575f5ffd5b611c098686611bca565b9350611c19866101008701611bdb565b9250611c29866101408701611bdb565b9150611bbf866101808701611b64565b5f5f5f6101808486031215611c4c575f5ffd5b611c568585611bca565b9250611c66856101008601611bdb565b9150611c76856101408601611bdb565b90509250925092565b60c0810181855f5b6004811015611ca6578151835260209283019290910190600101611c87565b50505060808201845f5b6001811015611ccf578151835260209283019290910190600101611cb0565b5050508260a0830152949350505050565b5f5f83601f840112611cf0575f5ffd5b50813567ffffffffffffffff811115611d07575f5ffd5b602083019150836020828501011115611d1e575f5ffd5b9250929050565b5f5f5f5f60408587031215611d38575f5ffd5b843567ffffffffffffffff811115611d4e575f5ffd5b611d5a87828801611ce0565b909550935050602085013567ffffffffffffffff811115611d79575f5ffd5b611d8587828801611ce0565b95989497509550505050565b634e487b7160e01b5f52603260045260245ffd5b8381528260208201525f604082018351602085015f5b82811015611dd9578151845260209384019390910190600101611dbb565b5091979650505050505050565b634e487b7160e01b5f52601260045260245ffd5b5f82611e1457634e487b7160e01b5f52601260045260245ffd5b500690565b805f5b6002811015611e3b578151845260209384019390910190600101611e1c565b50505050565b6102a0810181865f5b6008811015611e69578151835260209283019290910190600101611e4a565b505050611e7a610100830186611e19565b611e88610140830185611e19565b6101808201835f5b6009811015611eaf578151835260209283019290910190600101611e90565b50505095945050505050565b818103818111156114cc57634e487b7160e01b5f52601160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f0f57634e487b7160e01b5f52604160045260245ffd5b604052919050565b5f82601f830112611f26575f5ffd5b5f611f316040611eda565b9050806040840185811115611f44575f5ffd5b845b81811015611f5e578035835260209283019201611f46565b509195945050505050565b5f5f5f6101808486031215611f7c575f5ffd5b5f85601f860112611f8b575f5ffd5b505f80610100611f9a81611eda565b9250829150860187811115611fad575f5ffd5b865b81811015611fc7578035845260209384019301611faf565b50819550611fd58882611f17565b9450505050611c76856101408601611f17565b5f6101208284031215611ff9575f5ffd5b5f83601f840112612008575f5ffd5b505f8061012061201781611eda565b925082915084018581111561202a575f5ffd5b845b8181101561204457803584526020938401930161202c565b50909594505050505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212201d3fcdcc8329cedbf7af789d75eeb15669ff9b912e5a9f4c8650eac6cbd2564664736f6c634300081c0033";

type ResultsVerifierGroth16ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResultsVerifierGroth16ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResultsVerifierGroth16__factory extends ContractFactory {
  constructor(...args: ResultsVerifierGroth16ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ResultsVerifierGroth16 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ResultsVerifierGroth16__factory {
    return super.connect(runner) as ResultsVerifierGroth16__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResultsVerifierGroth16Interface {
    return new Interface(_abi) as ResultsVerifierGroth16Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ResultsVerifierGroth16 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ResultsVerifierGroth16;
  }
}
