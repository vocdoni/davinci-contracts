/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  StateTransitionVerifierGroth16,
  StateTransitionVerifierGroth16Interface,
} from "../../../src/verifiers/StateTransitionVerifierGroth16";

const _abi = [
  {
    inputs: [],
    name: "CommitmentInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provingKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_input",
        type: "bytes",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611ee68061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063233ace111461005c578063b1c3a00e1461008f578063b8e72af6146100b1578063d148354c146100c6578063e33974a8146100d9575b600080fd5b6040517fc24c7a8fbc73518ddccd1f1755a777eacdf49bb5322ee835c25c385719920f9d81526020015b60405180910390f35b6100a261009d366004611994565b6100ec565b60405161008693929190611a06565b6100c46100bf366004611a95565b610175565b005b6100c46100d4366004611b17565b6101f6565b6100c46100e7366004611b73565b61069b565b6100f46118d9565b6100fc6118f7565b600061011186358760015b6020020135610c06565b835261012f6060870135604088013560a089013560808a0135610cfb565b6020850152604084015261014960c0870135876007610107565b606084015261015b8535866001610107565b825261016a8435856001610107565b905093509350939050565b60008060006101848787610ff2565b919450925090503063d148354c84848461019e8a8a611023565b6040518563ffffffff1660e01b81526004016101bd9493929190611bf6565b60006040518083038186803b1580156101d557600080fd5b505afa1580156101e9573d6000803e3d6000fd5b5050505050505050505050565b6101fe6118f7565b6040805160018082528183019092526060916020808301908036833701905050905060208082019060408501823750604051600080516020611e9183398151915290610256908735906020808a013591869101611c55565b6040516020818303038152906040528051906020012060001c6102799190611cae565b8252604080516000918782377f2c87740c0b58775ee740f2d3cad1b69c535016106b0da75112cdfcda8fa87ceb60408201527f2562994cbbbc48428e8e059e045cd2d9d1ab14a87655c7a0f0d526fbc2f21f9660608201527f102ec505a5b006156e9df6e32a54fef28cdc99e971920509187e295d9e8ad62f60808201527f15bffa3fd5500f8ec6b1f0254409266cbdb16b04489230e44d05b432c90481d260a082015260408660c08301377ecfdea963f3a0c07b0aca983bc1258734a5390739bceab47ee7ed5ff3751eb86101008201527f16567f28ad7b525c759e4d12aef1efe6a01d55a7f51973971ee23b4fdceebd5a6101208201527f094b683984e621b3199b7034b8afe3963a4b509c8a002286531123e47a897e746101408201527f0dfbea335676b03e53696b740904b1bc875b343b99da59eec616e6c6891f20416101608201526020816101808360085afa9051169050806103ee576040516351d49ff760e11b815260040160405180910390fd5b60008061042586868a600280602002604051908101604052809291908260026020028082843760009201919091525061103e915050565b915091506040516101008a82377f01069cfa82db91cf003e4882db178cf6a0bd46be6574b9a4d7667a3b9d3715856101008201527f18ae3f182b79e640b709e14eddcf0038c397730ab9c23288958ee8b0b5218ed16101208201527f0f21ebf69d2a3f106bf6dea523c3deccce037f54c8bdc68ddaf054f4df59ff6a6101408201527f0c33e73f299ceb7500b874e689eb447ff59781bb0ea2ce9a622da92d2cece7856101608201527f1f640e794fafab7927e97f4f0e46fc842774480c7ee6fb707a93ef2362c28c1a6101808201527f21e15d567d5fabc5ee5c3f7a4cdc20f987bdaa8e55c2aa16b8223625c017e9786101a08201527f0e1be9a494f7ddab7e30bee70c5f178d71e619debc3fd20e70a96790815b5b986101c08201527f0b4248091a15f7d675907961cc4499fa9abe2a916dd971a31f2c7922d04771cd6101e08201527f02d746708b17b34dc835c89488c37879c8f06c148f8fdc4495397e704192e6f06102008201527f1e83c0acd886b86e0319cca2e6018bd80d32fba54cd4f207169fdc805cba806561022082015282610240820152816102608201527f2e39e97df59a84f285f8a17139ff01cf498d9841414f9f8bc1b452698c935c486102808201527f2c3c4d206eb9889f23cb19f8e179e50edef4cb50b77e293480c493359e53b3b96102a08201527f0170362264ac29691c37062aff8a873990e7586f238b8ec7e5b8e9d98b9512406102c08201527f168680183a866b44fe624a08add2feedf9528f3775da14ccdbea5100607939d36102e08201526020816103008360085afa90511692508261069057604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050565b6106a36118f7565b6106ab611915565b6106b3611933565b6106c48660005b6020020135611383565b602084015282526000806106d787611383565b6040805160018082528183019092529294509092506060919060208083019080368337019050509050602080820190604089018237508451602080870151604051600080516020611e918339815191529361073793909291869101611c55565b6040516020818303038152906040528051906020012060001c61075a9190611cae565b865284518452602085810151858201527f2c87740c0b58775ee740f2d3cad1b69c535016106b0da75112cdfcda8fa87ceb6040808701919091527f2562994cbbbc48428e8e059e045cd2d9d1ab14a87655c7a0f0d526fbc2f21f9660608701527f102ec505a5b006156e9df6e32a54fef28cdc99e971920509187e295d9e8ad62f60808701527f15bffa3fd5500f8ec6b1f0254409266cbdb16b04489230e44d05b432c90481d260a087015260c0860185905260e086018490527ecfdea963f3a0c07b0aca983bc1258734a5390739bceab47ee7ed5ff3751eb86101008701527f16567f28ad7b525c759e4d12aef1efe6a01d55a7f51973971ee23b4fdceebd5a6101208701527f094b683984e621b3199b7034b8afe3963a4b509c8a002286531123e47a897e746101408701527f0dfbea335676b03e53696b740904b1bc875b343b99da59eec616e6c6891f204161016087015251600091816101808860085afa9051169050806108df576040516351d49ff760e11b815260040160405180910390fd5b505050506000806108fc896000600481106106ba576106ba611bbd565b9092509050600080808061091860408e013560208f0135611429565b929650909450925090506000806109308f60036106ba565b915091506000806109428e8e8e61103e565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f01069cfa82db91cf003e4882db178cf6a0bd46be6574b9a4d7667a3b9d3715856101008e01527f18ae3f182b79e640b709e14eddcf0038c397730ab9c23288958ee8b0b5218ed16101208e01527f0f21ebf69d2a3f106bf6dea523c3deccce037f54c8bdc68ddaf054f4df59ff6a6101408e01527f0c33e73f299ceb7500b874e689eb447ff59781bb0ea2ce9a622da92d2cece7856101608e01527f1f640e794fafab7927e97f4f0e46fc842774480c7ee6fb707a93ef2362c28c1a6101808e01527f21e15d567d5fabc5ee5c3f7a4cdc20f987bdaa8e55c2aa16b8223625c017e9786101a08e01527f0e1be9a494f7ddab7e30bee70c5f178d71e619debc3fd20e70a96790815b5b986101c08e01527f0b4248091a15f7d675907961cc4499fa9abe2a916dd971a31f2c7922d04771cd6101e08e01527f02d746708b17b34dc835c89488c37879c8f06c148f8fdc4495397e704192e6f06102008e01527f1e83c0acd886b86e0319cca2e6018bd80d32fba54cd4f207169fdc805cba80656102208e01526102408d018290526102608d018190527f2e39e97df59a84f285f8a17139ff01cf498d9841414f9f8bc1b452698c935c486102808e01527f2c3c4d206eb9889f23cb19f8e179e50edef4cb50b77e293480c493359e53b3b96102a08e01527f0170362264ac29691c37062aff8a873990e7586f238b8ec7e5b8e9d98b9512406102c08e01527f168680183a866b44fe624a08add2feedf9528f3775da14ccdbea5100607939d36102e08e015290925090506000610bb76118f7565b6020816103008f60085afa9150811580610bd357508051600114155b15610bf157604051631ff3747d60e21b815260040160405180910390fd5b50505050505050505050505050505050505050565b6000600080516020611e7183398151915283101580610c335750600080516020611e718339815191528210155b15610c5157604051631ff3747d60e21b815260040160405180910390fd5b82158015610c5d575081155b15610c6a57506000610cf5565b6000610ca9600080516020611e718339815191526003600080516020611e7183398151915287600080516020611e71833981519152898a09090861160f565b9050808303610cbe575050600182901b610cf5565b610cc781611673565b8303610cda575050600182811b17610cf5565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b600080600080516020611e7183398151915286101580610d295750600080516020611e718339815191528510155b80610d425750600080516020611e718339815191528410155b80610d5b5750600080516020611e718339815191528310155b15610d7957604051631ff3747d60e21b815260040160405180910390fd5b82848688171717600003610d9257506000905080610fe9565b60008080600080516020611e71833981519152610dbe6003600080516020611e71833981519152611cd0565b600080516020611e718339815191528a8c090990506000600080516020611e718339815191528a600080516020611e718339815191528c8d090990506000600080516020611e718339815191528a600080516020611e718339815191528c8d09099050600080516020611e7183398151915280600080516020611e718339815191528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089450610eb7600080516020611e7183398151915280600080516020611e718339815191528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611673565b9350505050600080610f08600080516020611e7183398151915280610ede57610ede611c98565b600080516020611e71833981519152858609600080516020611e718339815191528788090861160f565b9050610f55600080516020611e718339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611e718339815191528488080961168c565b15915050610f648383836116d6565b90935091508683148015610f7757508186145b15610fa15780610f88576000610f8b565b60025b60ff1660028a901b176000179450879350610fe5565b610faa83611673565b87148015610fbf5750610fbc82611673565b86145b15610cda5780610fd0576000610fd3565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b610ffa611952565b611002611915565b61100a611915565b61101684860186611d86565b9250925092509250925092565b61102b6118d9565b61103782840184611e08565b9392505050565b6000806000600190506040516040810160007f295697e6bfcee701f0ee2a8036169715880fb9bd40161954b9ad6b21750a4d5183527f14f044e6961d30b274144effaa57b4260c47b87477eee0cbcee66c999d8ed59f6020840152865182526020870151602083015260408360808560065afa841693507f04ef729391127701fd071a5bd8fb40d178abaeca8f3001a36e273cf500cb71de82527f11f777e49339a300f090645345ebca8a4c57777af052b2594e2aefb575f57669602083015288359050806040830152600080516020611e9183398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f07d879a4c469f3254f91cef2d4b84f6ee6a3c28bbf576db55af1c8a25525760b82527f0bbca1b6815bca3cd7167401722e6998b07808fe6075b3dd7fe5a8369cb38106602083015260208901359050806040830152600080516020611e9183398151915281108416935060408260608460075afa8416935060408360808560065afa841693507e97581fa60f43ca46714e73ef1932437c6500485332718d2ce017cb1b782a1382527f2ba2264b5175d7eeedc3aca7f2da3723fb891d012b2482cc4b09bdf8121d829d602083015260408901359050806040830152600080516020611e9183398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f0adcd1cf1c0610d7ea8d882ac8b02ecd8f390f8cefee0e8e4f81f882fbf847da82527f20a06f3bba8ebc3ffac18d99dbcd7ad8692622f9c412e6358af867a82015870d602083015260608901359050806040830152600080516020611e9183398151915281108416935060408260608460075afa8416935060408360808560065afa7f201905504c0c43c1263b3714f00a95b03e4552fb35c8e998681ed84185e2146083527f06f09e921b954dc71a4a7852f234e29a83566198b8c37844bf59a6d069e4e57e602084015288516040808501829052600080516020611e9183398151915290911091909516169390508160608160075afa831692505060408160808360065afa8151602090920151919450909250168061137a5760405163a54f8e2760e01b815260040160405180910390fd5b50935093915050565b6000808260000361139957506000928392509050565b600183811c925080841614600080516020611e7183398151915283106113d257604051631ff3747d60e21b815260040160405180910390fd5b61140f600080516020611e718339815191526003600080516020611e7183398151915286600080516020611e71833981519152888909090861160f565b915080156114235761142082611673565b91505b50915091565b60008080808515801561143a575084155b1561145057506000925082915081905080611606565b600286811c94508593506001808816149080881614600080516020611e71833981519152861015806114905750600080516020611e718339815191528510155b156114ae57604051631ff3747d60e21b815260040160405180910390fd5b6000600080516020611e718339815191526114d86003600080516020611e71833981519152611cd0565b600080516020611e71833981519152888a090990506000600080516020611e7183398151915288600080516020611e718339815191528a8b090990506000600080516020611e7183398151915288600080516020611e718339815191528a8b09099050600080516020611e7183398151915280600080516020611e718339815191528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50896506115d1600080516020611e7183398151915280600080516020611e718339815191528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611673565b95506115de8787866116d6565b90975095508415611600576115f287611673565b96506115fd86611673565b95505b50505050505b92959194509250565b600061163b827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611814565b905081600080516020611e718339815191528283091461166e57604051631ff3747d60e21b815260040160405180910390fd5b919050565b600080516020611e718339815191529081900681030690565b6000806116b9837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611814565b905082600080516020611e71833981519152828309149392505050565b60008080611708600080516020611e7183398151915280878809600080516020611e71833981519152898a090861160f565b9050831561171c5761171981611673565b90505b611767600080516020611e718339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611e71833981519152848a080961160f565b9250600080516020611e71833981519152611793600080516020611e7183398151915260028609611879565b86099150600080516020611e718339815191526117c0600080516020611e71833981519152848509611673565b600080516020611e7183398151915285860908861415806117f65750600080516020611e71833981519152808385096002098514155b1561137a57604051631ff3747d60e21b815260040160405180910390fd5b6000806040516020815260208082015260206040820152846060820152836080820152600080516020611e7183398151915260a082015260208160c08360055afa90519250905080610cf357604051631ff3747d60e21b815260040160405180910390fd5b60006118a5827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd45611814565b9050600080516020611e7183398151915281830960011461166e57604051631ff3747d60e21b815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b6040518061010001604052806008906020820280368337509192915050565b806101008101831015610cf557600080fd5b8060408101831015610cf557600080fd5b600080600061018084860312156119aa57600080fd5b6119b48585611971565b92506119c4856101008601611983565b91506119d4856101408601611983565b90509250925092565b8060005b6004811015611a005781518452602093840193909101906001016119e1565b50505050565b60c08101611a1482866119dd565b608082018460005b6001811015611a3b578151835260209283019290910190600101611a1c565b5050508260a0830152949350505050565b60008083601f840112611a5e57600080fd5b50813567ffffffffffffffff811115611a7657600080fd5b602083019150836020828501011115611a8e57600080fd5b9250929050565b60008060008060408587031215611aab57600080fd5b843567ffffffffffffffff811115611ac257600080fd5b611ace87828801611a4c565b909550935050602085013567ffffffffffffffff811115611aee57600080fd5b611afa87828801611a4c565b95989497509550505050565b8060808101831015610cf557600080fd5b6000806000806102008587031215611b2e57600080fd5b611b388686611971565b9350611b48866101008701611983565b9250611b58866101408701611983565b9150611b68866101808701611b06565b905092959194509250565b6000806000806101408587031215611b8a57600080fd5b611b948686611b06565b935060a0850186811115611ba757600080fd5b608086019350359150611b688660c08701611b06565b634e487b7160e01b600052603260045260246000fd5b8060005b6002811015611a00578151845260209384019390910190600101611bd7565b6102008101818660005b6008811015611c1f578151835260209283019290910190600101611c00565b505050611c30610100830186611bd3565b611c3e610140830185611bd3565b611c4c6101808301846119dd565b95945050505050565b83815282602082015260006040820183516020850160005b82811015611c8b578151845260209384019390910190600101611c6d565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611ccb57634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610cf557634e487b7160e01b600052601160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d2857634e487b7160e01b600052604160045260246000fd5b604052919050565b600082601f830112611d4157600080fd5b6000611d4d6040611cf1565b9050806040840185811115611d6157600080fd5b845b81811015611d7b578035835260209283019201611d63565b509195945050505050565b60008060006101808486031215611d9c57600080fd5b600085601f860112611dac578081fd5b80610100611db981611cf1565b9250829150860187811115611dcd57600080fd5b865b81811015611de7578035845260209384019301611dcf565b50819550611df58882611d30565b94505050506119d4856101408601611d30565b600060808284031215611e1a57600080fd5b600083601f840112611e2a578081fd5b80611e356080611cf1565b90508091506080840185811115611e4b57600080fd5b845b81811015611e65578035845260209384019301611e4d565b50909594505050505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122051beecc1a729fac3b0b6ae79615fe1b517577c1ab290f91e2b8cab37cb75abc864736f6c634300081c0033";

type StateTransitionVerifierGroth16ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StateTransitionVerifierGroth16ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StateTransitionVerifierGroth16__factory extends ContractFactory {
  constructor(...args: StateTransitionVerifierGroth16ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StateTransitionVerifierGroth16 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StateTransitionVerifierGroth16__factory {
    return super.connect(runner) as StateTransitionVerifierGroth16__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StateTransitionVerifierGroth16Interface {
    return new Interface(_abi) as StateTransitionVerifierGroth16Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StateTransitionVerifierGroth16 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StateTransitionVerifierGroth16;
  }
}
