/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  StateTransitionVerifierGroth16,
  StateTransitionVerifierGroth16Interface,
} from "../../../src/verifiers/StateTransitionVerifierGroth16";

const _abi = [
  {
    inputs: [],
    name: "CommitmentInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputNotInField",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
    ],
    name: "compressProof",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "compressed",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provingKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "compressedProof",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[1]",
        name: "compressedCommitments",
        type: "uint256[1]",
      },
      {
        internalType: "uint256",
        name: "compressedCommitmentPok",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyCompressedProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_input",
        type: "bytes",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitmentPok",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "input",
        type: "uint256[4]",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611ee98061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063233ace111461005c578063b1c3a00e1461008f578063b8e72af6146100b1578063d148354c146100c6578063e33974a8146100d9575b600080fd5b6040517ff758bb66af633cf1a109c6ba72cf00979ff7d3a7171afeba15f06d3533c1382381526020015b60405180910390f35b6100a261009d366004611997565b6100ec565b60405161008693929190611a09565b6100c46100bf366004611a98565b610175565b005b6100c46100d4366004611b1a565b6101f6565b6100c46100e7366004611b76565b61069c565b6100f46118dc565b6100fc6118fa565b600061011186358760015b6020020135610c08565b835261012f6060870135604088013560a089013560808a0135610cfd565b6020850152604084015261014960c0870135876007610107565b606084015261015b8535866001610107565b825261016a8435856001610107565b905093509350939050565b60008060006101848787610ff4565b919450925090503063d148354c84848461019e8a8a611025565b6040518563ffffffff1660e01b81526004016101bd9493929190611bf9565b60006040518083038186803b1580156101d557600080fd5b505afa1580156101e9573d6000803e3d6000fd5b5050505050505050505050565b6101fe6118fa565b6040805160018082528183019092526060916020808301908036833701905050905060208082019060408501823750604051600080516020611e9483398151915290610256908735906020808a013591869101611c58565b6040516020818303038152906040528051906020012060001c6102799190611cb1565b8252604080516000918782377f1fe3bbbd4c264a7356e5a9cabb604dac47b7f6c96064f10300fae1bf51c57f7160408201527f20a629648cc18cc931b723bfcc7465795d58bdc19f01721e7617330bc830623060608201527f070e139dff21a64c7338bb8f2b58f92a2224e0938a2ce5fd44537b3f641592ae60808201527f1f423ffa0c0b20c342f5c45237a8fd6954dd570f004db6c9531692030793fff960a082015260408660c08301377f2ce3e6b63fec0eb029b41c7b5256f2cae4798c6caef40cac361fe5e0b15a768a6101008201527f1d162565a66a467bb7d1ef939495ea35aacd0861ae954a425dcd68d1d79f73506101208201527f111a561efb30ac57d9adb96e9e4733b90a8049d1baa6d126c32420ace80e061e6101408201527f1efb64acbcebe1bc3cb462f07053674a9b4829702293a13e8f583e2ec8b6bcb86101608201526020816101808360085afa9051169050806103ef576040516351d49ff760e11b815260040160405180910390fd5b60008061042686868a6002806020026040519081016040528092919082600260200280828437600092019190915250611040915050565b915091506040516101008a82377f07861b9a725739bec7898ee1a1ae740998a648e260585f488657a949a6af91e06101008201527f099e5a34de5326315e8d76b6c362bd11a7af1295b0560b35044b9c81579809356101208201527f1f0a76bc580fdda8b11c11b1a2ba12f18283bc2f85f0db881431caeec6e0d2da6101408201527f0118f358def87b3e6810127a815b8c8ae444651c4308215062c4bce8739dec306101608201527f0fa43fdb07ad3dba56e08c74fc16c47d88e81b8652075ea4d863ffb01ecc59bc6101808201527f2d9099d5ec5a3cf16df5a2c49da87a06ce4957266d289cc384926deb5dbd1d666101a08201527f22d19782b54da9b683706b30bb3c035f5131caa923f65c7e78efff4961cb436b6101c08201527f2752070ddda866f7d6685be826c1e1dad2719825943ded64008c4922b6fb6c226101e08201527f1cf2b3a189ba20e48963b06fdc4b2bf038994880948c5c87002954e8fef0f8ee6102008201527f1b04f51602fd41a602f78be1c0b2f4618c4917fcbbb8cc1f7b4da6e044c13f8f61022082015282610240820152816102608201527f12eaf06a583c5fd24d5fb45b5704d623dfd09398ea09e5716c2732707870afff6102808201527f0a04a619df82f365bb9610b4ba1b9c17d44927b274348aaec603b2bb559839c76102a08201527f1df50330a733ecd78700f7bf6d0f3bf71fbd2b3634abf3ef0c3cd32378419b236102c08201527f1cafe56c0f2bd4bc3c78cbb406379957b2ed69ae44167ad4dff279d4db8dc3d06102e08201526020816103008360085afa90511692508261069157604051631ff3747d60e21b815260040160405180910390fd5b505050505050505050565b6106a46118fa565b6106ac611918565b6106b4611936565b6106c58660005b6020020135611386565b602084015282526000806106d887611386565b6040805160018082528183019092529294509092506060919060208083019080368337019050509050602080820190604089018237508451602080870151604051600080516020611e948339815191529361073893909291869101611c58565b6040516020818303038152906040528051906020012060001c61075b9190611cb1565b865284518452602085810151858201527f1fe3bbbd4c264a7356e5a9cabb604dac47b7f6c96064f10300fae1bf51c57f716040808701919091527f20a629648cc18cc931b723bfcc7465795d58bdc19f01721e7617330bc830623060608701527f070e139dff21a64c7338bb8f2b58f92a2224e0938a2ce5fd44537b3f641592ae60808701527f1f423ffa0c0b20c342f5c45237a8fd6954dd570f004db6c9531692030793fff960a087015260c0860185905260e086018490527f2ce3e6b63fec0eb029b41c7b5256f2cae4798c6caef40cac361fe5e0b15a768a6101008701527f1d162565a66a467bb7d1ef939495ea35aacd0861ae954a425dcd68d1d79f73506101208701527f111a561efb30ac57d9adb96e9e4733b90a8049d1baa6d126c32420ace80e061e6101408701527f1efb64acbcebe1bc3cb462f07053674a9b4829702293a13e8f583e2ec8b6bcb861016087015251600091816101808860085afa9051169050806108e1576040516351d49ff760e11b815260040160405180910390fd5b505050506000806108fe896000600481106106bb576106bb611bc0565b9092509050600080808061091a60408e013560208f013561142c565b929650909450925090506000806109328f60036106bb565b915091506000806109448e8e8e611040565b8b8d5260208d018b905260408d0189905260608d018a905260808d0187905260a08d0188905260c08d0186905260e08d018590527f07861b9a725739bec7898ee1a1ae740998a648e260585f488657a949a6af91e06101008e01527f099e5a34de5326315e8d76b6c362bd11a7af1295b0560b35044b9c81579809356101208e01527f1f0a76bc580fdda8b11c11b1a2ba12f18283bc2f85f0db881431caeec6e0d2da6101408e01527f0118f358def87b3e6810127a815b8c8ae444651c4308215062c4bce8739dec306101608e01527f0fa43fdb07ad3dba56e08c74fc16c47d88e81b8652075ea4d863ffb01ecc59bc6101808e01527f2d9099d5ec5a3cf16df5a2c49da87a06ce4957266d289cc384926deb5dbd1d666101a08e01527f22d19782b54da9b683706b30bb3c035f5131caa923f65c7e78efff4961cb436b6101c08e01527f2752070ddda866f7d6685be826c1e1dad2719825943ded64008c4922b6fb6c226101e08e01527f1cf2b3a189ba20e48963b06fdc4b2bf038994880948c5c87002954e8fef0f8ee6102008e01527f1b04f51602fd41a602f78be1c0b2f4618c4917fcbbb8cc1f7b4da6e044c13f8f6102208e01526102408d018290526102608d018190527f12eaf06a583c5fd24d5fb45b5704d623dfd09398ea09e5716c2732707870afff6102808e01527f0a04a619df82f365bb9610b4ba1b9c17d44927b274348aaec603b2bb559839c76102a08e01527f1df50330a733ecd78700f7bf6d0f3bf71fbd2b3634abf3ef0c3cd32378419b236102c08e01527f1cafe56c0f2bd4bc3c78cbb406379957b2ed69ae44167ad4dff279d4db8dc3d06102e08e015290925090506000610bb96118fa565b6020816103008f60085afa9150811580610bd557508051600114155b15610bf357604051631ff3747d60e21b815260040160405180910390fd5b50505050505050505050505050505050505050565b6000600080516020611e7483398151915283101580610c355750600080516020611e748339815191528210155b15610c5357604051631ff3747d60e21b815260040160405180910390fd5b82158015610c5f575081155b15610c6c57506000610cf7565b6000610cab600080516020611e748339815191526003600080516020611e7483398151915287600080516020611e74833981519152898a090908611612565b9050808303610cc0575050600182901b610cf7565b610cc981611676565b8303610cdc575050600182811b17610cf7565b604051631ff3747d60e21b815260040160405180910390fd5b505b92915050565b600080600080516020611e7483398151915286101580610d2b5750600080516020611e748339815191528510155b80610d445750600080516020611e748339815191528410155b80610d5d5750600080516020611e748339815191528310155b15610d7b57604051631ff3747d60e21b815260040160405180910390fd5b82848688171717600003610d9457506000905080610feb565b60008080600080516020611e74833981519152610dc06003600080516020611e74833981519152611cd3565b600080516020611e748339815191528a8c090990506000600080516020611e748339815191528a600080516020611e748339815191528c8d090990506000600080516020611e748339815191528a600080516020611e748339815191528c8d09099050600080516020611e7483398151915280600080516020611e748339815191528c860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5089450610eb9600080516020611e7483398151915280600080516020611e748339815191528e870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611676565b9350505050600080610f0a600080516020611e7483398151915280610ee057610ee0611c9b565b600080516020611e74833981519152858609600080516020611e7483398151915287880908611612565b9050610f57600080516020611e748339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611e748339815191528488080961168f565b15915050610f668383836116d9565b90935091508683148015610f7957508186145b15610fa35780610f8a576000610f8d565b60025b60ff1660028a901b176000179450879350610fe7565b610fac83611676565b87148015610fc15750610fbe82611676565b86145b15610cdc5780610fd2576000610fd5565b60025b60ff1660028a901b1760011794508793505b5050505b94509492505050565b610ffc611955565b611004611918565b61100c611918565b61101884860186611d89565b9250925092509250925092565b61102d6118dc565b61103982840184611e0b565b9392505050565b6000806000600190506040516040810160007f0a34b4431c8030f4742baa09e41701a4f1876fb91d7cbbd2b90d8f0f063cc7eb83527f0697bc3913d5224e8f681a64fa94d3c1a4bad752c696678b06721d9fcfb9d5b56020840152865182526020870151602083015260408360808560065afa841693507f27c039e1897cab7f70a7c9d92728ddba8d61091790478401031dcf61bdd37e8182527f0760a129022d8b3815b41b34d7f6a3be5386975057a64c1f2029b9475dd4ef05602083015288359050806040830152600080516020611e9483398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f13bb90e0133fe54b8533471599b44464d3dd2675475cd9d745a905507724988682527f256847778ffdf31461b375f0cfa4747ef89d32dbf5512a227579cb4c3efb1550602083015260208901359050806040830152600080516020611e9483398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f18bad3366b5fb94bc6263affbae80cdc8c8c81ddfd8a3bbff6cf35caf79f02c882527f047d2f96da45dde0c757d3bbdd817bfed19a2886673817fea0e8ff739b69768a602083015260408901359050806040830152600080516020611e9483398151915281108416935060408260608460075afa8416935060408360808560065afa841693507f2947838b23b46b44620d74ce519935594ea6544d775306c12a3140003752da9e82527f2ac5a0bc0c63085b8548529a4a68d5cf51c97a5c88f3a41c5ca9f52450d644e5602083015260608901359050806040830152600080516020611e9483398151915281108416935060408260608460075afa8416935060408360808560065afa7f1bd9baa70df246e96928ab08ec667a7cfb1ddd2a1fdcdaf9bfa0911c94eafeeb83527f0ec06eb4f38439eb3b99ef407afa5791a7c458926d15749091e072eebb4c1542602084015288516040808501829052600080516020611e9483398151915290911091909516169390508160608160075afa831692505060408160808360065afa8151602090920151919450909250168061137d5760405163a54f8e2760e01b815260040160405180910390fd5b50935093915050565b6000808260000361139c57506000928392509050565b600183811c925080841614600080516020611e7483398151915283106113d557604051631ff3747d60e21b815260040160405180910390fd5b611412600080516020611e748339815191526003600080516020611e7483398151915286600080516020611e748339815191528889090908611612565b915080156114265761142382611676565b91505b50915091565b60008080808515801561143d575084155b1561145357506000925082915081905080611609565b600286811c94508593506001808816149080881614600080516020611e74833981519152861015806114935750600080516020611e748339815191528510155b156114b157604051631ff3747d60e21b815260040160405180910390fd5b6000600080516020611e748339815191526114db6003600080516020611e74833981519152611cd3565b600080516020611e74833981519152888a090990506000600080516020611e7483398151915288600080516020611e748339815191528a8b090990506000600080516020611e7483398151915288600080516020611e748339815191528a8b09099050600080516020611e7483398151915280600080516020611e748339815191528a860984087f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e50896506115d4600080516020611e7483398151915280600080516020611e748339815191528c870984087f2fcd3ac2a640a154eb23960892a85a68f031ca0c8344b23a577dcf1052b9e77508611676565b95506115e18787866116d9565b90975095508415611603576115f587611676565b965061160086611676565b95505b50505050505b92959194509250565b600061163e827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611817565b905081600080516020611e748339815191528283091461167157604051631ff3747d60e21b815260040160405180910390fd5b919050565b600080516020611e748339815191529081900681030690565b6000806116bc837f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f52611817565b905082600080516020611e74833981519152828309149392505050565b6000808061170b600080516020611e7483398151915280878809600080516020611e74833981519152898a0908611612565b9050831561171f5761171c81611676565b90505b61176a600080516020611e748339815191527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea4600080516020611e74833981519152848a0809611612565b9250600080516020611e74833981519152611796600080516020611e748339815191526002860961187c565b86099150600080516020611e748339815191526117c3600080516020611e74833981519152848509611676565b600080516020611e7483398151915285860908861415806117f95750600080516020611e74833981519152808385096002098514155b1561137d57604051631ff3747d60e21b815260040160405180910390fd5b6000806040516020815260208082015260206040820152846060820152836080820152600080516020611e7483398151915260a082015260208160c08360055afa90519250905080610cf557604051631ff3747d60e21b815260040160405180910390fd5b60006118a8827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd45611817565b9050600080516020611e7483398151915281830960011461167157604051631ff3747d60e21b815260040160405180910390fd5b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518061030001604052806018906020820280368337509192915050565b6040518061010001604052806008906020820280368337509192915050565b806101008101831015610cf757600080fd5b8060408101831015610cf757600080fd5b600080600061018084860312156119ad57600080fd5b6119b78585611974565b92506119c7856101008601611986565b91506119d7856101408601611986565b90509250925092565b8060005b6004811015611a035781518452602093840193909101906001016119e4565b50505050565b60c08101611a1782866119e0565b608082018460005b6001811015611a3e578151835260209283019290910190600101611a1f565b5050508260a0830152949350505050565b60008083601f840112611a6157600080fd5b50813567ffffffffffffffff811115611a7957600080fd5b602083019150836020828501011115611a9157600080fd5b9250929050565b60008060008060408587031215611aae57600080fd5b843567ffffffffffffffff811115611ac557600080fd5b611ad187828801611a4f565b909550935050602085013567ffffffffffffffff811115611af157600080fd5b611afd87828801611a4f565b95989497509550505050565b8060808101831015610cf757600080fd5b6000806000806102008587031215611b3157600080fd5b611b3b8686611974565b9350611b4b866101008701611986565b9250611b5b866101408701611986565b9150611b6b866101808701611b09565b905092959194509250565b6000806000806101408587031215611b8d57600080fd5b611b978686611b09565b935060a0850186811115611baa57600080fd5b608086019350359150611b6b8660c08701611b09565b634e487b7160e01b600052603260045260246000fd5b8060005b6002811015611a03578151845260209384019390910190600101611bda565b6102008101818660005b6008811015611c22578151835260209283019290910190600101611c03565b505050611c33610100830186611bd6565b611c41610140830185611bd6565b611c4f6101808301846119e0565b95945050505050565b83815282602082015260006040820183516020850160005b82811015611c8e578151845260209384019390910190600101611c70565b5091979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611cce57634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610cf757634e487b7160e01b600052601160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d2b57634e487b7160e01b600052604160045260246000fd5b604052919050565b600082601f830112611d4457600080fd5b6000611d506040611cf4565b9050806040840185811115611d6457600080fd5b845b81811015611d7e578035835260209283019201611d66565b509195945050505050565b60008060006101808486031215611d9f57600080fd5b600085601f860112611daf578081fd5b80610100611dbc81611cf4565b9250829150860187811115611dd057600080fd5b865b81811015611dea578035845260209384019301611dd2565b50819550611df88882611d33565b94505050506119d7856101408601611d33565b600060808284031215611e1d57600080fd5b600083601f840112611e2d578081fd5b80611e386080611cf4565b90508091506080840185811115611e4e57600080fd5b845b81811015611e68578035845260209384019301611e50565b50909594505050505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4730644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220af836251e119ec4ed777b38417c2f43a904ced9f1ec0d1241e4d6cf05d59186164736f6c634300081c0033";

type StateTransitionVerifierGroth16ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StateTransitionVerifierGroth16ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StateTransitionVerifierGroth16__factory extends ContractFactory {
  constructor(...args: StateTransitionVerifierGroth16ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StateTransitionVerifierGroth16 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StateTransitionVerifierGroth16__factory {
    return super.connect(runner) as StateTransitionVerifierGroth16__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StateTransitionVerifierGroth16Interface {
    return new Interface(_abi) as StateTransitionVerifierGroth16Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StateTransitionVerifierGroth16 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StateTransitionVerifierGroth16;
  }
}
