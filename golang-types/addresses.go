package contracts

// This file is auto-generated by helpers/write_contract_addresses.sh
// Do not edit manually - run the script to regenerate
// Generated from commit: e1c83ad911bfc426e0c3cf5bfa68b03cdcfac830

// Network constants
const (
	SepoliaNetwork = "sepolia"
	UzhNetwork     = "uzh"
	MainnetNetwork = "mainnet"
	CeloNetwork    = "celo"
	TestNetwork    = "test"
)

// AvailableNetworksByName contains the list of networks where Davinci is deployed.
var AvailableNetworksByName = map[string]uint32{
	SepoliaNetwork:  11155111,
	UzhNetwork:      710,
	CeloNetwork:     42220,
	MainnetNetwork:  1,
	TestNetwork:     1337, // Local test network
}

// AvailableNetworksByID contains the list of networks where Davinci is deployed.
var AvailableNetworksByID = map[uint32]string{
	11155111: SepoliaNetwork,
	710:      UzhNetwork,
	42220:    CeloNetwork,
	1:        MainnetNetwork,
	1337:     TestNetwork,
}

// Contract name constants
const (
	ProcessRegistryContract                = "processRegistry"
	OrganizationRegistryContract           = "organizationRegistry"
	StateTransitionVerifierGroth16Contract = "stateTransitionVerifierGroth16"
	ResultsVerifierGroth16Contract         = "resultsVerifierGroth16"
	SequencerRegistryContract              = "sequencerRegistry"
)

// Contract addresses by network
const (
	OrganizationRegistryCeloAddress = "0xca08064a83C7Bea0DB7514eE37F6f4a193b2B53c"
	OrganizationRegistryMainnetAddress = "0x0"
	OrganizationRegistrySepoliaAddress = "0x82E02cE6b8d74cd21b0F35b1959a6b396D6F08a9"
	OrganizationRegistryUzhAddress = "0xf7BCE4546805547bE526Ca864d6722Ed193E51Aa"
	ProcessRegistryCeloAddress = "0xd512481d0Fa6d975f9B186a9f6e59ea8E12D2C2b"
	ProcessRegistryMainnetAddress = "0x0"
	ProcessRegistrySepoliaAddress = "0x53448f63A0e93160dbe1Bb1d8859e0c5cb572BD9"
	ProcessRegistryUzhAddress = "0x69B16f67Bd2fB18bD720379E9C1Ef5EaD3872d67"
	ResultsVerifierGroth16CeloAddress = "0xF487f67EcAE4BD893219295Ad850326Ec0E1A6A9"
	ResultsVerifierGroth16MainnetAddress = "0x0"
	ResultsVerifierGroth16SepoliaAddress = "0x74921657da473c613Eff8b36FA6b4cC345EE73d2"
	ResultsVerifierGroth16UzhAddress = "0x00c7F87731346F592197E49A90Ad6EC236Ad9985"
	SequencerRegistryCeloAddress = "0x0"
	SequencerRegistryMainnetAddress = "0x0"
	SequencerRegistrySepoliaAddress = "0x0"
	SequencerRegistryUzhAddress = "0x0"
	StateTransitionVerifierGroth16CeloAddress = "0x3d0b39c0239329955b9F0E8791dF9Aa84133c861"
	StateTransitionVerifierGroth16MainnetAddress = "0x0"
	StateTransitionVerifierGroth16SepoliaAddress = "0xCcB003D161624752c1C1f4F2Ead7D7216bD99756"
	StateTransitionVerifierGroth16UzhAddress = "0x5e4673CD378F05cc3Ae25804539c91E711548741"
)

// GetContractAddress returns the address for a given contract and network
func GetContractAddress(contract, network string) string {
	switch contract {
	case ProcessRegistryContract:
		switch network {
		case SepoliaNetwork:
			return ProcessRegistrySepoliaAddress
		case UzhNetwork:
			return ProcessRegistryUzhAddress
		case MainnetNetwork:
			return ProcessRegistryMainnetAddress
		case CeloNetwork:
			return ProcessRegistryCeloAddress
		}
	case OrganizationRegistryContract:
		switch network {
		case SepoliaNetwork:
			return OrganizationRegistrySepoliaAddress
		case UzhNetwork:
			return OrganizationRegistryUzhAddress
		case MainnetNetwork:
			return OrganizationRegistryMainnetAddress
		case CeloNetwork:
			return OrganizationRegistryCeloAddress
		}
	case StateTransitionVerifierGroth16Contract:
		switch network {
		case SepoliaNetwork:
			return StateTransitionVerifierGroth16SepoliaAddress
		case UzhNetwork:
			return StateTransitionVerifierGroth16UzhAddress
		case MainnetNetwork:
			return StateTransitionVerifierGroth16MainnetAddress
		case CeloNetwork:
			return StateTransitionVerifierGroth16CeloAddress
		}
	case ResultsVerifierGroth16Contract:
		switch network {
		case SepoliaNetwork:
			return ResultsVerifierGroth16SepoliaAddress
		case UzhNetwork:
			return ResultsVerifierGroth16UzhAddress
		case MainnetNetwork:
			return ResultsVerifierGroth16MainnetAddress
		case CeloNetwork:
			return ResultsVerifierGroth16CeloAddress
		}
	case SequencerRegistryContract:
		switch network {
		case SepoliaNetwork:
			return SequencerRegistrySepoliaAddress
		case UzhNetwork:
			return SequencerRegistryUzhAddress
		case MainnetNetwork:
			return SequencerRegistryMainnetAddress
		case CeloNetwork:
			return SequencerRegistryCeloAddress
		}
	}
	return ""
}

// GetAllContractAddresses returns a map of all contract addresses for a given network
func GetAllContractAddresses(network string) map[string]string {
	addresses := make(map[string]string)
	
	contracts := []string{
		ProcessRegistryContract,
		OrganizationRegistryContract,
		StateTransitionVerifierGroth16Contract,
		ResultsVerifierGroth16Contract,
		SequencerRegistryContract,
	}
	
	for _, contract := range contracts {
		if addr := GetContractAddress(contract, network); addr != "" && addr != "0x0" {
			addresses[contract] = addr
		}
	}
	
	return addresses
}

// GetSepoliaAddresses returns all contract addresses for Sepolia network
func GetSepoliaAddresses() map[string]string {
	return GetAllContractAddresses(SepoliaNetwork)
}

// GetUzhAddresses returns all contract addresses for UZH network
func GetUzhAddresses() map[string]string {
	return GetAllContractAddresses(UzhNetwork)
}

// GetMainnetAddresses returns all contract addresses for Mainnet network
func GetMainnetAddresses() map[string]string {
	return GetAllContractAddresses(MainnetNetwork)
}

// GetCeloAddresses returns all contract addresses for Celo network
func GetCeloAddresses() map[string]string {
	return GetAllContractAddresses(CeloNetwork)
}
