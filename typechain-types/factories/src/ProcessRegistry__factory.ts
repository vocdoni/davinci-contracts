/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProcessRegistry,
  ProcessRegistryInterface,
} from "../../src/ProcessRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_chainID",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_stVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotAcceptResult",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusOrigin",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCensusURI",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxMinValueBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxTotalCost",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxVotes",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinTotalCost",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMinValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProcessId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStartTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimeBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTotalCostBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUniqueValues",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ProofInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "censusRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "censusURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVotes",
        type: "uint256",
      },
    ],
    name: "CensusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProcessCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "ProcessDurationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    name: "ProcessResultsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newStateRoot",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "batchNumber",
        type: "uint256",
      },
    ],
    name: "ProcessStateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "oldStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "ProcessStatusChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_CENSUS_ORIGIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_STATUS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
    ],
    name: "getNextProcessId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcess",
    outputs: [
      {
        components: [
          {
            internalType: "enum IProcessRegistry.ProcessStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "organizationId",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.EncryptionKey",
            name: "encryptionKey",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "latestStateRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "result",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voteOverwriteCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchNumber",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "costFromWeight",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "forceUniqueness",
                type: "bool",
              },
              {
                internalType: "uint8",
                name: "maxCount",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "costExponent",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minValue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxTotalCost",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minTotalCost",
                type: "uint256",
              },
            ],
            internalType: "struct IProcessRegistry.BallotMode",
            name: "ballotMode",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum IProcessRegistry.CensusOrigin",
                name: "censusOrigin",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "maxVotes",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "censusRoot",
                type: "bytes32",
              },
              {
                internalType: "string",
                name: "censusURI",
                type: "string",
              },
            ],
            internalType: "struct IProcessRegistry.Census",
            name: "census",
            type: "tuple",
          },
        ],
        internalType: "struct IProcessRegistry.Process",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
    ],
    name: "getProcessEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSTVerifierVKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "initStateRoot",
        type: "uint256",
      },
    ],
    name: "newProcess",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "processCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "processNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processes",
    outputs: [
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "organizationId",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.EncryptionKey",
        name: "encryptionKey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "latestStateRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "voteOverwriteCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchNumber",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "costFromWeight",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "forceUniqueness",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxCount",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "costExponent",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IProcessRegistry.BallotMode",
        name: "ballotMode",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum IProcessRegistry.CensusOrigin",
            name: "censusOrigin",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "maxVotes",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "censusRoot",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "censusURI",
            type: "string",
          },
        ],
        internalType: "struct IProcessRegistry.Census",
        name: "census",
        type: "tuple",
      },
    ],
    name: "setProcessCensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setProcessDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "setProcessResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "enum IProcessRegistry.ProcessStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "setProcessStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "processId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "submitStateTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612b07380380612b0783398101604081905261002f916100b3565b60028054600380546001600160a01b039485166001600160a01b031990911617905563ffffffff9094166401000000000263ffffffff60201b1992909316680100000000000000000291909116600160201b600160e01b031990931692909217179055610101565b80516001600160a01b03811681146100ae57600080fd5b919050565b6000806000606084860312156100c857600080fd5b835163ffffffff811681146100dc57600080fd5b92506100ea60208501610097565b91506100f860408501610097565b90509250925092565b6129f7806101106000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806372c628ef116100ad578063a5f01e1911610071578063a5f01e19146102ba578063adc879e9146102cd578063c718c01f146102e5578063d71d072e146102f8578063f9aa44991461030b57600080fd5b806372c628ef14610247578063848df5401461024f578063992bc45b146102745780639c18deaf14610294578063a5b110de146102a757600080fd5b80634c0acc56116100f45780634c0acc56146101c357806356a6f1e2146101cb57806362fa11fc146101e057806368141f2c146102215780636bae04ea1461023457600080fd5b806302cc919a146101265780630535fece1461014557806309706392146101705780633365133c146101a2575b600080fd5b61012e600981565b60405160ff90911681526020015b60405180910390f35b610158610153366004611e53565b610313565b60405161013c9c9b9a99989796959493929190611f89565b60025461018a90600160401b90046001600160a01b031681565b6040516001600160a01b03909116815260200161013c565b6101b56101b03660046120b2565b61055a565b60405190815260200161013c565b6101b561071c565b6101de6101d9366004612183565b61079a565b005b6102096101ee3660046121af565b6001602052600090815260409020546001600160401b031681565b6040516001600160401b03909116815260200161013c565b6101b561022f3660046121af565b610951565b6101de6102423660046121d8565b610999565b61012e600481565b60025461025f9063ffffffff1681565b60405163ffffffff909116815260200161013c565b610287610282366004611e53565b610c04565b60405161013c919061225a565b60035461018a906001600160a01b031681565b6101de6102b536600461235a565b610f11565b6101b56102c8366004611e53565b6111bf565b60025461025f90640100000000900463ffffffff1681565b6101de6102f33660046123d7565b6114de565b6101de61030636600461235a565b61165b565b6101b561186c565b600060208181529181526040908190208054825180840190935260018201548352600282015493830193909352600381015460058201546006830154600784015460088501546009860154600a8701805460ff8b169a61010090046001600160a01b031699989190610384906123f9565b80601f01602080910402602001604051908101604052809291908181526020018280546103b0906123f9565b80156103fd5780601f106103d2576101008083540402835291602001916103fd565b820191906000526020600020905b8154815290600101906020018083116103e057829003601f168201915b5050604080516101008082018352600b88015460ff808216151584529181048216151560208401526201000081048216838501526301000000900481166060830152600c880154608080840191909152600d89015460a0840152600e89015460c0840152600f89015460e0840152835190810190935260108801805497989297929650929450919250839116600981111561049a5761049a611e6c565b60098111156104ab576104ab611e6c565b815260200160018201548152602001600282015481526020016003820180546104d3906123f9565b80601f01602080910402602001604051908101604052809291908181526020018280546104ff906123f9565b801561054c5780601f106105215761010080835404028352916020019161054c565b820191906000526020600020905b81548152906001019060200180831161052f57829003601f168201915b50505050508152505090508c565b600254336000818152600160205260408120549092839161059491640100000000900463ffffffff169084906001600160401b03166118b6565b90506105a581838e8e8e8e8e611946565b600081815260208190526040902080548d90829060ff191660018360048111156105d1576105d1611e6c565b0217905550600581018c9055600681018b90558054610100600160a81b0319166101006001600160a01b03851602178155853560018201556020860135600282015560038101859055600a8101610629888a83612492565b5089600b82016106398282612582565b508990506010820161064b8282612695565b50506002805463ffffffff1690600061066383612742565b825463ffffffff9182166101009390930a9283029190920219909116179055506001600160a01b038316600090815260016020526040812080546001600160401b0316916106b083612767565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050826001600160a01b0316827fada6f87a2a16a0c9c169ca36754c5f33f7c1a973b575d068f888a549ed4faefa60405160405180910390a3509b9a5050505050505050505050565b6000600260089054906101000a90046001600160a01b03166001600160a01b031663233ace116040518163ffffffff1660e01b8152600401602060405180830381865afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190612789565b905090565b816107b85760405163cbf4a64560e01b815260040160405180910390fd5b600481818111156107cb576107cb611e6c565b60ff1611156107ed576040516307a92f1960e51b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b031661082857604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610856576040516282b42960e81b815260040160405180910390fd5b805460ff166108658184611bd6565b610882576040516307a92f1960e51b815260040160405180910390fd5b81548390839060ff191660018360048111156108a0576108a0611e6c565b021790555060018360048111156108b9576108b9611e6c565b036109115760008260050154426108d091906127a2565b6006840181905560405181815290915085907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505b837f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c82856040516109439291906127b5565b60405180910390a250505050565b6002546001600160a01b03821660009081526001602052604081205490916109939164010000000090910463ffffffff169084906001600160401b03166118b6565b92915050565b816109b75760405163cbf4a64560e01b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b03166109f257604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314610a20576040516282b42960e81b815260040160405180910390fd5b610a2d60208301836127d0565b6009811115610a3e57610a3e611e6c565b601082015460ff166009811115610a5757610a57611e6c565b14610a755760405163f37f7b5d60e01b815260040160405180910390fd5b601181015460208301351015610a9e57604051634f9233a560e01b815260040160405180910390fd5b6040820135610ac057604051635e32eadd60e01b815260040160405180910390fd5b610acd606083018361264f565b9050600003610aef57604051630f8b932160e11b815260040160405180910390fd5b6000815460ff166004811115610b0757610b07611e6c565b14158015610b2b57506003815460ff166004811115610b2857610b28611e6c565b14155b15610b49576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154610b5e91906127ed565b11610b7c5760405163e843c5eb60e01b815260040160405180910390fd5b6020820135601182015560408201356012820155610b9d606083018361264f565b6013830191610bad919083612492565b50827f35947a8913e2156f19b018078c9f0667e49cb3dc24af3434a4d0b16b82675b1b6040840135610be2606086018661264f565b8660200135604051610bf79493929190612829565b60405180910390a2505050565b610c0c611cfa565b6000828152602081905260409081902081516101a081019092528054829060ff166004811115610c3e57610c3e611e6c565b6004811115610c4f57610c4f611e6c565b8152815461010090046001600160a01b03166020808301919091526040805180820182526001850154815260028501548184015281840152600384015460608401526004840180548251818502810185019093528083526080909401939192909190830182828015610ce057602002820191906000526020600020905b815481526020019060010190808311610ccc575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a82018054610d2b906123f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610d57906123f9565b8015610da45780601f10610d7957610100808354040283529160200191610da4565b820191906000526020600020905b815481529060010190602001808311610d8757829003601f168201915b5050509183525050604080516101008082018352600b85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600c860154608080850191909152600d87015460a0850152600e87015460c0850152600f87015460e08501529085019290925282519182018352601085018054939094019391928391166009811115610e4c57610e4c611e6c565b6009811115610e5d57610e5d611e6c565b81526020016001820154815260200160028201548152602001600382018054610e85906123f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb1906123f9565b8015610efe5780601f10610ed357610100808354040283529160200191610efe565b820191906000526020600020905b815481529060010190602001808311610ee157829003601f168201915b5050509190925250505090525092915050565b84610f2f5760405163cbf4a64560e01b815260040160405180910390fd5b6000858152602081905260409020805461010090046001600160a01b0316610f6a57604051634d36eb6960e01b815260040160405180910390fd5b6001815460ff166004811115610f8257610f82611e6c565b14610fa0576040516307a92f1960e51b815260040160405180910390fd5b4281600601548260050154610fb591906127ed565b1115610fd45760405163e843c5eb60e01b815260040160405180910390fd5b600354604051635c73957b60e11b81526001600160a01b039091169063b8e72af69061100a908890889088908890600401612854565b60006040518083038186803b15801561102257600080fd5b505afa158015611036573d6000803e3d6000fd5b506000925061104a915050838501856128b6565b600383015481519192501461107257604051630b6fac0360e41b815260040160405180910390fd5b6000611080600160096127a2565b6001600160401b038111156110975761109761242d565b6040519080825280602002602001820160405280156110c0578160200160208202803683370190505b50905060015b6009811015611115578281600981106110e1576110e161291f565b6020020151826110f26001846127a2565b815181106111025761110261291f565b60209081029190910101526001016110c6565b50825460ff1916600490811784558151611136918501906020840190611df3565b50877f2f25f350b681441b5bb45430fbe61e78d0170cff4ad02cb0aa48a6427909aa8c6001600460405161116b9291906127b5565b60405180910390a2336001600160a01b0316887f5da8009aeb11de7ef64598b0de897a03d2f93efabda8507a70e29cca4530cf5d836040516111ad9190612935565b60405180910390a35050505050505050565b60008181526020819052604080822081516101a08101909252805483929190829060ff1660048111156111f4576111f4611e6c565b600481111561120557611205611e6c565b8152815461010090046001600160a01b0316602080830191909152604080518082018252600185015481526002850154818401528184015260038401546060840152600484018054825181850281018501909352808352608090940193919290919083018282801561129657602002820191906000526020600020905b815481526020019060010190808311611282575b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a820180546112e1906123f9565b80601f016020809104026020016040519081016040528092919081815260200182805461130d906123f9565b801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b5050509183525050604080516101008082018352600b85015460ff8082161515845291810482161515602084810191909152620100008204831684860152630100000090910482166060840152600c860154608080850191909152600d87015460a0850152600e87015460c0850152600f87015460e0850152908501929092528251918201835260108501805493909401939192839116600981111561140257611402611e6c565b600981111561141357611413611e6c565b8152602001600182015481526020016002820154815260200160038201805461143b906123f9565b80601f0160208091040260200160405190810160405280929190818152602001828054611467906123f9565b80156114b45780601f10611489576101008083540402835291602001916114b4565b820191906000526020600020905b81548152906001019060200180831161149757829003601f168201915b5050505050815250508152505090508060c001518160a001516114d791906127ed565b9392505050565b816114fc5760405163cbf4a64560e01b815260040160405180910390fd5b6000828152602081905260409020805461010090046001600160a01b031661153757604051634d36eb6960e01b815260040160405180910390fd5b805461010090046001600160a01b03163314611565576040516282b42960e81b815260040160405180910390fd5b805460ff16600081600481111561157e5761157e611e6c565b1415801561159e5750600381600481111561159b5761159b611e6c565b14155b156115bc576040516307a92f1960e51b815260040160405180910390fd5b600582015460068301548415806115dc5750426115d986846127ed565b11155b806115f957506115ec81836127ed565b6115f686846127ed565b11155b1561161757604051637616640160e01b815260040160405180910390fd5b6006840185905560405185815286907f0f759826327c668a220d576485ac38ddc4f83fbc414b984c00e79f669b649f469060200160405180910390a2505050505050565b846116795760405163cbf4a64560e01b815260040160405180910390fd5b6000858152602081905260409020805461010090046001600160a01b03166116b457604051634d36eb6960e01b815260040160405180910390fd5b6000815460ff1660048111156116cc576116cc611e6c565b146116ea576040516307a92f1960e51b815260040160405180910390fd5b42816006015482600501546116ff91906127ed565b1161171d5760405163e843c5eb60e01b815260040160405180910390fd5b600254604051635c73957b60e11b8152600160401b9091046001600160a01b03169063b8e72af690611759908890889088908890600401612854565b60006040518083038186803b15801561177157600080fd5b505afa158015611785573d6000803e3d6000fd5b506000925061179991505083850185612948565b60038301548151919250146117c157604051630b6fac0360e41b815260040160405180910390fd5b6020810151600383015560408101516007830180546000906117e49084906127ed565b909155505060608101516008830180546000906118029084906127ed565b90915550506009820180549060006118198361298b565b909155505060208082015160098401546040805192835292820152339189917fa61a53cd3f898f82c989232197972bfd9c369563ba42840cf21f3abf15814ade910160405180910390a350505050505050565b6003546040805163233ace1160e01b815290516000926001600160a01b03169163233ace119160048083019260209291908290030181865afa158015610771573d6000803e3d6000fd5b6001600160f81b031960e09390931b92831660ff60f01b84161760ff60e81b84161760ff60e01b939093169290921760409190911b68010000000000000000600160e01b03161767ff0000000000000082161766ff00000000000082161765ff000000000082161764ff0000000082161763ff00000082161762ff000082161761ff0082161760ff919091161790565b6000878152602081905260409020546001600160a01b03808816610100909204160361198557604051635040c4d360e11b815260040160405180910390fd5b61199560608301604084016129a4565b60ff1615806119b6575060086119b160608401604085016129a4565b60ff16115b156119d45760405163ac38930b60e01b815260040160405180910390fd5b61ffff8260c0013511156119fb57604051630ac929fb60e41b815260040160405180910390fd5b81608001358260a001351115611a245760405163207ea56d60e01b815260040160405180910390fd5b8160c001358260e001351115611a4d5760405163a159c01160e01b815260040160405180910390fd5b6009611a5c60208301836127d0565b6009811115611a6d57611a6d611e6c565b60ff161115611a8f5760405163f37f7b5d60e01b815260040160405180910390fd5b8060200135600003611ab457604051634f9233a560e01b815260040160405180910390fd5b6040810135611ad657604051635e32eadd60e01b815260040160405180910390fd5b611ae3606082018261264f565b9050600003611b0557604051630f8b932160e11b815260040160405180910390fd5b60048581811115611b1857611b18611e6c565b60ff161180611b5657506000856004811115611b3657611b36611e6c565b14158015611b5657506003856004811115611b5357611b53611e6c565b14155b15611b74576040516307a92f1960e51b815260040160405180910390fd5b426000859003611b82578094505b80851015611ba357604051632ca4094f60e21b815260040160405180910390fd5b80611bae85876127ed565b11611bcc57604051637616640160e01b815260040160405180910390fd5b5050505050505050565b6000826004811115611bea57611bea611e6c565b826004811115611bfc57611bfc611e6c565b03611c0957506000610993565b6002836004811115611c1d57611c1d611e6c565b1480611c3a57506004836004811115611c3857611c38611e6c565b145b80611c5657506001836004811115611c5457611c54611e6c565b145b15611c6357506000610993565b6000836004811115611c7757611c77611e6c565b03611cd15760035b826004811115611c9157611c91611e6c565b1480611cae57506002826004811115611cac57611cac611e6c565b145b80611cca57506001826004811115611cc857611cc8611e6c565b145b9050610993565b6003836004811115611ce557611ce5611e6c565b03611cf1576000611c7f565b50600092915050565b604080516101a08101909152806000815260200160006001600160a01b03168152602001611d3b604051806040016040528060008152602001600081525090565b81526020016000815260200160608152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001611dca604051806101000160405280600015158152602001600015158152602001600060ff168152602001600060ff168152602001600081526020016000815260200160008152602001600081525090565b815260408051608081018252600080825260208281018290529282015260608082015291015290565b828054828255906000526020600020908101928215611e2e579160200282015b82811115611e2e578251825591602001919060010190611e13565b50611e3a929150611e3e565b5090565b5b80821115611e3a5760008155600101611e3f565b600060208284031215611e6557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60058110611e9257611e92611e6c565b9052565b6000815180845260005b81811015611ebc57602081850181015186830182015201611ea0565b506000602082860101526020601f19601f83011685010191505092915050565b80511515825260208101511515602083015260ff60408201511660408301526060810151611f0f606084018260ff169052565b506080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b60008151600a8110611f5057611f50611e6c565b808452506020820151602084015260408201516040840152606082015160806060850152611f816080850182611e96565b949350505050565b611f93818e611e82565b6001600160a01b038c166020820152611fb9604082018c80518252602090810151910152565b8960808201528860a08201528760c08201528660e082015285610100820152846101208201526102806101408201526000611ff8610280830186611e96565b612006610160840186611edc565b8281036102608401526120198185611f3c565b9f9e505050505050505050505050505050565b80356005811061203b57600080fd5b919050565b60006080828403121561205257600080fd5b50919050565b60008083601f84011261206a57600080fd5b5081356001600160401b0381111561208157600080fd5b60208301915083602082850101111561209957600080fd5b9250929050565b60006040828403121561205257600080fd5b6000806000806000806000806000898b036102008112156120d257600080fd5b6120db8b61202c565b995060208b0135985060408b01359750610100605f19820112156120fe57600080fd5b5060608a0195506101608a01356001600160401b0381111561211f57600080fd5b61212b8c828d01612040565b9550506101808a01356001600160401b0381111561214857600080fd5b6121548c828d01612058565b909550935061216990508b6101a08c016120a0565b989b979a5095989497939692955090936101e00135919050565b6000806040838503121561219657600080fd5b823591506121a66020840161202c565b90509250929050565b6000602082840312156121c157600080fd5b81356001600160a01b03811681146114d757600080fd5b600080604083850312156121eb57600080fd5b8235915060208301356001600160401b0381111561220857600080fd5b61221485828601612040565b9150509250929050565b600081518084526020840193506020830160005b82811015612250578151865260209586019590910190600101612232565b5093949350505050565b6020815261226c602082018351611e82565b6000602083015161228860408401826001600160a01b03169052565b506040830151805160608401526020810151608084015250606083015160a083015260808301516102a060c08401526122c56102c084018261221e565b905060a084015160e084015260c084015161010084015260e0840151610120840152610100840151610140840152610120840151610160840152610140840151601f198483030161018085015261231c8282611e96565b9150506101608401516123336101a0850182611edc565b50610180840151838203601f19016102a08501526123518282611f3c565b95945050505050565b60008060008060006060868803121561237257600080fd5b8535945060208601356001600160401b0381111561238f57600080fd5b61239b88828901612058565b90955093505060408601356001600160401b038111156123ba57600080fd5b6123c688828901612058565b969995985093965092949392505050565b600080604083850312156123ea57600080fd5b50508035926020909101359150565b600181811c9082168061240d57607f821691505b60208210810361205257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f82111561248d57806000526020600020601f840160051c8101602085101561246a5750805b601f840160051c820191505b8181101561248a5760008155600101612476565b50505b505050565b6001600160401b038311156124a9576124a961242d565b6124bd836124b783546123f9565b83612443565b6000601f8411600181146124f157600085156124d95750838201355b600019600387901b1c1916600186901b17835561248a565b600083815260209020601f19861690835b828110156125225786850135825560209485019460019092019101612502565b508682101561253f5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60008135801515811461099357600080fd5b60ff8116811461257257600080fd5b50565b6000813561099381612563565b61258b82612551565b151560ff1982541660ff82168117835550506125c66125ac60208401612551565b82805461ff00191691151560081b61ff0016919091179055565b6125ed6125d560408401612575565b825462ff0000191660109190911b62ff000016178255565b6126166125fc60608401612575565b825463ff000000191660189190911b63ff00000016178255565b6080820135600182015560a0820135600282015560c0820135600382015560e090910135600490910155565b600a811061257257600080fd5b6000808335601e1984360301811261266657600080fd5b8301803591506001600160401b0382111561268057600080fd5b60200191503681900382131561209957600080fd5b81356126a081612642565b600a81106126b0576126b0611e6c565b815460ff191660ff9190911617815560208201356001820155604082013560028201556060820135601e19368490030181126126eb57600080fd5b820180356001600160401b0381111561270357600080fd5b60208201915080360382131561271857600080fd5b612726818360038601612492565b50505050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff821663ffffffff810361275e5761275e61272c565b60010192915050565b60006001600160401b0382166001600160401b03810361275e5761275e61272c565b60006020828403121561279b57600080fd5b5051919050565b818103818111156109935761099361272c565b604081016127c38285611e82565b6114d76020830184611e82565b6000602082840312156127e257600080fd5b81356114d781612642565b808201808211156109935761099361272c565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b848152606060208201526000612843606083018587612800565b905082604083015295945050505050565b604081526000612868604083018688612800565b828103602084015261287b818587612800565b979650505050505050565b604051601f8201601f191681016001600160401b03811182821017156128ae576128ae61242d565b604052919050565b600061012082840312156128c957600080fd5b600083601f8401126128d9578081fd5b806101206128e681612886565b92508291508401858111156128fa57600080fd5b845b818110156129145780358452602093840193016128fc565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b6020815260006114d7602083018461221e565b60006080828403121561295a57600080fd5b600083601f84011261296a578081fd5b806129756080612886565b905080915060808401858111156128fa57600080fd5b60006001820161299d5761299d61272c565b5060010190565b6000602082840312156129b657600080fd5b81356114d78161256356fea26469706673582212202f0c7c7999a56c8d63ad5d494e59d16bad17da7090a302cc21236fd79c5a097264736f6c634300081c0033";

type ProcessRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProcessRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProcessRegistry__factory extends ContractFactory {
  constructor(...args: ProcessRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    );
  }
  override deploy(
    _chainID: BigNumberish,
    _stVerifier: AddressLike,
    _rVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _chainID,
      _stVerifier,
      _rVerifier,
      overrides || {}
    ) as Promise<
      ProcessRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProcessRegistry__factory {
    return super.connect(runner) as ProcessRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProcessRegistryInterface {
    return new Interface(_abi) as ProcessRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProcessRegistry {
    return new Contract(address, _abi, runner) as unknown as ProcessRegistry;
  }
}
